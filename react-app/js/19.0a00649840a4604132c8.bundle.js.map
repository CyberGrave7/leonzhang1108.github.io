{"version":3,"sources":["webpack:///./src/pages/BatLogo/index.tsx"],"names":["changeVolume","v","setState","point","componentWillMount","this","componentDidMount","pathStrings","Array","from","document","querySelectorAll","map","d","getAttribute","animate","sel","start","shift","end","push","datum","transition","duration","attrTween","interpolate","maxSegmentLength","on","call","filter","i","remove","style","componentWillUnmount","render","className","xmlns","transform","min","max","value","defaultValue","onChange","tipFormatter","Component"],"mappings":"igBAWA,yE,OAiCE,EAAAA,aAAe,SAAAC,GAAK,SAAKC,SAAS,CAAEC,MAAOF,EAAI,IAAM,K,EAmBvD,OApDsB,OAEpB,YAAAG,mBAAA,WACEC,KAAKH,SAAS,CAAEC,MAAO,OAGzB,YAAAG,kBAAA,WACE,IAAMC,EAAcC,MAAMC,KAAKC,SAASC,iBAAiB,mBAAmBC,IAAI,SAAAC,GAAK,OAAAA,EAAEC,aAAa,OAC9FC,EAAU,SAAAC,GACd,IAAMC,EAAQV,EAAYW,SAAW,GAC/BC,EAAMZ,EAAY,GACxBA,EAAYa,KAAKH,GACjBD,EACGK,MAAM,CAAEJ,MAAK,EAAEE,IAAG,IAClBG,aACAC,SAAS,MACTC,UAAU,IAAK,SAAAX,GAAK,WAAQY,YAAYZ,EAAEI,MAAOJ,EAAEM,IAAK,CAAEO,iBAAkB,OAC5EC,GAAG,MAAO,WAAM,OAAAX,EAAIY,KAAKb,MAG9B,IAAa,kBACVc,OAAO,SAAChB,EAAGiB,GAAM,OAAAA,IACjBC,SAEH,IAAU,kBACPC,MAAM,UAAW,SACjBJ,KAAKb,IAGV,YAAAkB,qBAAA,WACE,IAAa,QAAQX,cAKvB,YAAAY,OAAA,WACU,IAAA/B,EAAA,WAAAA,MACR,OACE,yBAAKgC,UAAU,oBACb,yBAAKA,UAAU,WAAWC,MAAM,8BAC9B,uBAAGC,UAAW,aACZ,0BAAMxB,EAAE,6FACR,0BAAMA,EAAE,mLACR,0BAAMA,EAAE,6HAGZ,2BAAOsB,UAAU,QAAQG,IAAI,IAAIC,IAAI,IAAIC,MAAOrC,IAChD,kBAAC,IAAM,CAACgC,UAAU,SAASM,aAAsB,GAARtC,EAAYuC,SAAUrC,KAAKL,aAAc2C,aAAc,OAChG,yBAAKR,UAAU,eAAa,iBAIpC,EApDA,CAAsB,IAAMS,WAsDb","file":"js/19.0a00649840a4604132c8.bundle.js","sourcesContent":["\nimport { Slider } from 'antd'\nimport * as d3 from 'd3'\nimport flubber from 'flubber'\nimport React from 'react'\nimport './index.less'\n\ninterface IState {\n  point: number\n}\n\nclass BatLogo extends React.Component<null, IState> {\n\n  componentWillMount () {\n    this.setState({ point: 3.5 })\n  }\n\n  componentDidMount () {\n    const pathStrings = Array.from(document.querySelectorAll('.bat-logo path')).map(d => d.getAttribute('d'))\n    const animate = sel => {\n      const start = pathStrings.shift() || ''\n      const end = pathStrings[0]\n      pathStrings.push(start)\n      sel\n        .datum({ start, end })\n        .transition()\n        .duration(1500)\n        .attrTween('d', d => flubber.interpolate(d.start, d.end, { maxSegmentLength: 0.1 }))\n        .on('end', () => sel.call(animate))\n    }\n\n    d3.selectAll('.bat-logo path')\n      .filter((d, i) => i)\n      .remove()\n\n    d3.select('.bat-logo path')\n      .style('display', 'block')\n      .call(animate)\n  }\n\n  componentWillUnmount () {\n    d3.selectAll('path').transition()\n  }\n\n  changeVolume = v => this.setState({ point: v / 100 * 5 })\n\n  render () {\n    const { point } = this.state\n    return (\n      <div className='bat-logo-wrapper'>\n        <svg className='bat-logo' xmlns='http://www.w3.org/2000/svg'>\n          <g transform={`scale(10)`}>\n            <path d='M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z'/>\n            <path d='M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z'/>\n            <path d='M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z'/>\n          </g>\n        </svg>\n        <meter className='meter' min='0' max='5' value={point} />\n        <Slider className='slider' defaultValue={point * 20} onChange={this.changeVolume} tipFormatter={null}/>\n        <div className='ants-border'>ants border</div>\n      </div>\n    )\n  }\n}\n\nexport default BatLogo\n"],"sourceRoot":""}