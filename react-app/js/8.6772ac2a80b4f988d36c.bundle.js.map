{"version":3,"sources":["webpack:///./src/pages/MusicVisualizer/file-loading.tsx","webpack:///./src/pages/MusicVisualizer/floating-title.tsx","webpack:///./src/pages/MusicVisualizer/time-bar.tsx","webpack:///./src/pages/MusicVisualizer/tools.ts","webpack:///./src/pages/MusicVisualizer/visualizer.ts","webpack:///./src/pages/MusicVisualizer/volume-bar.tsx","webpack:///./src/pages/MusicVisualizer/index.tsx"],"names":["FileLoading","_super","__extends","prototype","render","_a","this","props","percent","formatPercent","loadingFail","react__WEBPACK_IMPORTED_MODULE_2__","className","antd_lib_progress__WEBPACK_IMPORTED_MODULE_0___default","a","type","Number","format","status","__webpack_exports__","FloatingTitle","_this","apply","arguments","doInterval","interval","setInterval","intervalContent","state","onOff","offsetWidth","setState","offset","clearInterval","componentWillMount","width","componentDidMount","wrapperWidth","wrapper","componentWillUnmount","componentWillReceiveProps","dom","musicName","react__WEBPACK_IMPORTED_MODULE_0__","ref","style","transform","Time","totalTime","slideDuration","durationOffset","curr","durationChanging","durationChanged","formatTime","antd_lib_slider__WEBPACK_IMPORTED_MODULE_0___default","value","parseInt","onChange","onAfterChange","tipFormatter","__webpack_require__","r","draw","param","ctx","height","bars","barColor","arr","volume","vol","clearRect","Array","isArray","line_1","createLinearGradient","len_1","length","forEach","color","i","addColorStop","fillStyle","rectWidth","barWidth","capHeight","Math","min","rectHeight","capDistance","fillRect","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","Visualizer","size","currentTime","initAC","ac","AudioContext","gainNode","createGain","gain","connect","destination","analyser","createAnalyser","fftSize","load","url","callback","progressCb","abort","responseType","onDownloadProgress","v","loaded","total","cancelToken","CancelToken","c","axiosCancellation","then","response","data","catch","thrown","isCancel","console","log","message","play","src","cb","count","source","stop","decodeCallback","buffer","createBufferSource","e","ArrayBuffer","decodeAudioData","arrayBuffer","_b","start","bufferSource","loop","visualize","updateVolume","Uint8Array","frequencyBinCount","raf","window","requestAnimationFrame","fn","getByteFrequencyData","rafId","setCurrent","isFirst","setCurrTime","duration","toFixed","pause","suspend","cancelAnimationFrame","resume","close","Volume","changeVolume","togglePause","setMute","mute","onClick","defaultValue","disabled","undefined","MusicVisualizer","visibilityChange","visualizer","document","visibilityState","resize","canvas","_utils__WEBPACK_IMPORTED_MODULE_0__","isString","afterLoading","progress","mounted","isNaN","showAdd","loading","restartVisualizer","compatible","getContext","_visualizer__WEBPACK_IMPORTED_MODULE_7__","_tools__WEBPACK_IMPORTED_MODULE_6__","secondFormatToTime","durationToSecond","fileChange","input","files","reader","FileReader","name","readAsArrayBuffer","onload","res","currentTarget","result","m","addEventListener","isMobile","h","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1__","_floating_title__WEBPACK_IMPORTED_MODULE_3__","_volume_bar__WEBPACK_IMPORTED_MODULE_8__","_time_bar__WEBPACK_IMPORTED_MODULE_5__","_file_loading__WEBPACK_IMPORTED_MODULE_2__","href","accept","component","mapStateToProps","common","contentHeight"],"mappings":"kdASAA,EAAA,SAAAC,GAAA,SAAAD,mDAsBA,OAtB0BE,EAAAF,EAAAC,GACxBD,EAAAG,UAAAC,OAAA,WACQ,IAAAC,EAAAC,KAAAC,MAAEC,EAAAH,EAAAG,QAASC,EAAAJ,EAAAI,cAAeC,EAAAL,EAAAK,YAChC,OACEC,EAAA,qBAAKC,UAAU,gBAEC,IAAZJ,GAAkBE,EAGfA,EAOG,GANFC,EAAA,cAACE,EAAAC,EAAQ,CAACC,KAAK,SACbP,QAASQ,OAAOR,GAAWA,EAAU,EACrCS,OAAQR,EACRS,OAAQR,EAAc,YAAkC,MAApBM,OAAOR,GAAmB,UAAY,SAC1EI,UAAeF,GAAmC,MAApBM,OAAOR,GAA+B,GAAZ,YAP5DG,EAAA,qBAAKC,UAAU,aAe3BZ,EAtBA,CAA0BW,EAAA,WAuBXQ,EAAA,oXCnBfC,EAAA,SAAAnB,GAAA,SAAAmB,IAAA,IAAAC,EAAA,OAAApB,KAAAqB,MAAAhB,KAAAiB,YAAAjB,YAqCEe,EAAAG,WAAa,WACXH,EAAKI,SAAWC,YAAY,WAC1BL,EAAKM,mBACJ,MAGLN,EAAAM,gBAAkB,WACV,IAAAtB,EAAAgB,EAAAO,MAAEC,EAAAxB,EAAAwB,MAAOC,EAAAzB,EAAAyB,YACfT,EAAKU,SAAS,CACZF,OAAQA,EACRG,OAAQH,EAAQ,EAAIC,KAIxBT,EAAAY,cAAgB,WACVZ,EAAKI,UAAYQ,cAAcZ,EAAKI,aAa5C,OAjE4BvB,EAAAkB,EAAAnB,GAM1BmB,EAAAjB,UAAA+B,mBAAA,WACE5B,KAAKyB,SAAS,CACZI,MAAO,EACPH,OAAQ,EACRH,OAAO,EACPC,YAAa,KAIjBV,EAAAjB,UAAAiC,kBAAA,WACE9B,KAAKyB,SAAS,CAAEM,aAAc/B,KAAKgC,QAAQR,cAC3CxB,KAAKkB,cAGPJ,EAAAjB,UAAAoC,qBAAA,WACEjC,KAAK2B,iBAGPb,EAAAjB,UAAAqC,0BAAA,WACU,IAAAL,EAAA7B,KAAAsB,MAAAO,MACR,GAAI7B,KAAKmC,IAAIX,cAAgBK,EAAO,CAClC,IAAIL,EAAexB,KAAKgC,QAAQR,YAAcxB,KAAKmC,IAAIX,YACvDA,EAAcA,GAAe,EAAIA,EAAc,EAC/CxB,KAAKyB,SAAS,CACZI,MAAO7B,KAAKmC,IAAIX,YAChBA,YAAWA,EACXD,OAAO,MAuBbT,EAAAjB,UAAAC,OAAA,eAAAiB,EAAAf,KACUoC,EAAApC,KAAAC,MAAAmC,UACFrC,EAAAC,KAAAsB,MAAEI,EAAA3B,EAAA2B,OAAQF,EAAAzB,EAAAyB,YAEhB,OACEa,EAAA,qBAAK/B,UAAW,eAA8B,IAAhBkB,EAAoB,OAAS,IAAMc,IAAK,SAAAA,GAASvB,EAAKiB,QAAUM,IAC5FD,EAAA,qBAAKE,MAAO,CAAEC,UAAW,cAAcd,EAAM,OAASpB,UAAU,UAAUgC,IAAK,SAAAA,GAASvB,EAAKoB,IAAMG,IAAQF,KAInHtB,EAjEA,CAA4BuB,EAAA,WAkEbxB,EAAA,+YCjEf4B,EAAA,SAAA9C,GAAA,SAAA8C,mDAeA,OAfmB7C,EAAA6C,EAAA9C,GACjB8C,EAAA5C,UAAAC,OAAA,WACQ,IAAAC,EAAAC,KAAAC,MAAEyC,EAAA3C,EAAA2C,UAAWC,EAAA5C,EAAA4C,cAAeC,EAAA7C,EAAA6C,eAAgBC,EAAA9C,EAAA8C,KAAMC,EAAA/C,EAAA+C,iBAAkBC,EAAAhD,EAAAgD,gBAAiBC,EAAAjD,EAAAiD,WAC3F,OACE3C,EAAA,qBAAKC,UAAU,aACbD,EAAA,cAAC4C,EAAAzC,EAAM,CAACF,UAAU,kBAChB4C,MAAOR,GAAaS,UAAUR,GAAiBC,GAAkB,GAAI,IAAMC,GAAQ,IAAM,EACzFO,SAAUN,EACVO,cAAeN,EACfO,aAAc,OAEhBjD,EAAA,yBAAM2C,OAIdP,EAfA,CAAmBpC,EAAA,WAgBJQ,EAAA,4CC9Bf0C,EAAAC,EAAA3C,GAAeA,EAAA,SACb4C,KAAM,SAAAC,GACI,IAAAC,EAAAD,EAAAC,IAAKC,EAAAF,EAAAE,OAAQ/B,EAAA6B,EAAA7B,MAAOgC,EAAAH,EAAAG,KAAMC,EAAAJ,EAAAI,SAClC,OAAO,SAACC,EAAKC,GACX,IAAMC,EAAMD,EAEZ,GADAL,EAAIO,UAAU,EAAG,EAAGrC,EAAO+B,GACvBO,MAAMC,QAAQN,GAAW,CAC3B,IAAMO,EAAOV,EAAIW,qBAAqB,EAAG,EAAG,EAAGV,GACzCW,EAAMT,EAASU,OACrBV,EAASW,QAAQ,SAACC,EAAOC,GACvBN,EAAKO,aAAaD,GAAKJ,EAAM,GAAIG,KAEnCf,EAAIkB,UAAYR,OAEhBV,EAAIkB,UAAYf,EAKlB,IAHA,IAAMgB,EAAYjD,EAAQgC,EACpBkB,EAAuB,GAAZD,EACXE,EAAYC,KAAKC,IAAIH,EAAU,IAAMd,EAClCU,EAAI,EAAGA,EAAId,EAAMc,IAAK,CAC7B,IAAMQ,EAAapB,EAAIY,GAAK,IAAMf,EAASK,EACrCmB,EAAcrB,EAAIY,GAAK,EACzBM,KAAKC,IAAIC,EAAa,GAAIvB,EAASoB,GACnC,EACJrB,EAAI0B,SAASP,EAAYH,EAAGf,EAASuB,EAAYJ,EAAUI,GAC3DxB,EAAI0B,SAASP,EAAYH,EAAGf,GAAUwB,EAAcJ,GAAYD,EAAUC,yCCzBlFzB,EAAAC,EAAA3C,GAAA,IAAAyE,EAAA/B,EAAA,KAAAgC,EAAAhC,EAAAiC,EAAAF,GAEAG,EAkBE,SAAa1F,GAAb,IAAAgB,EAAAf,KAAeyD,EAAA1D,EAAA0D,KAAMiC,EAAA3F,EAAA2F,KAAM1B,EAAAjE,EAAAiE,OAAQ2B,EAAA5F,EAAA4F,YAUnC3F,KAAA4F,OAAS,WACP7E,EAAK8E,GAAK,IAAIC,aACd/E,EAAKgF,SAAWhF,EAAK8E,GAAGG,aACxBjF,EAAKgF,SAASE,KAAK/C,MAAQnC,EAAKiD,OAChCjD,EAAKgF,SAASG,QAAQnF,EAAK8E,GAAGM,aAC9BpF,EAAKqF,SAAWrF,EAAK8E,GAAGQ,iBACxBtF,EAAKqF,SAASE,QAAsB,EAAZvF,EAAK2E,KAC7B3E,EAAKqF,SAASF,QAAQnF,EAAKgF,WAG7B/F,KAAAuG,KAAO,SAACC,EAAKC,EAAUC,GACrB3F,EAAK4F,QACLpB,IAAM,CACJiB,IAAGA,EACHI,aAAc,cACdC,mBAAoB,SAAAC,GACV,IAAAC,EAAAD,EAAAC,OAAQC,EAAAF,EAAAE,MAChBN,EAAWK,EAASC,EAAQ,MAE9BC,YAAa,IAAI1B,EAAA/E,EAAM0G,YAAY,SAAAC,GACjCpG,EAAKqG,kBAAoBD,MAE1BE,KAAK,SAAAC,GACNb,EAASa,EAASC,QACjBC,MAAM,SAAAC,GACHlC,EAAA/E,EAAMkH,SAASD,GACjBE,QAAQC,IAAI,mBAAoBH,EAAOI,SAEvCnB,EAAW,YAKjB1G,KAAA2G,MAAQ,WAAM,OAAA5F,EAAKqG,mBAAqBrG,EAAKqG,kBAAkB,UAE/DpH,KAAA8H,KAAO,SAAC/H,OAAEgI,EAAAhI,EAAAgI,IAAKC,EAAAjI,EAAAiI,GAAItB,EAAA3G,EAAA2G,WACXlB,IAAMzE,EAAKkH,MACblH,EAAKmH,QACPnH,EAAKmH,OAAOC,OAEd,IAAMC,EAAiB,SAAAC,GAErB,GADAtH,EAAKsH,OAASA,EACV7C,IAAMzE,EAAKkH,OAASlH,EAAK8E,GAC3B,IACE9E,EAAKuH,mBAAmB,CAAED,OAAMA,GAAIL,GACpC,MAAOO,GACPZ,QAAQC,IAAIW,KAIdR,aAAeS,YACjBzH,EAAK8E,GAAG4C,gBAAgBV,EAAKK,GAE7BrH,EAAKwF,KAAKwB,EAAK,SAAAW,GACb3H,EAAK8E,GAAG4C,gBAAgBC,EAAaN,IACpC1B,IAIP1G,KAAAsI,mBAAqB,SAACvI,EAAuBiI,OAArBK,EAAAtI,EAAAsI,OAAQM,EAAA5I,EAAA6I,aAAA,IAAAD,EAAA,EAAAA,EAE9B,GADI5H,EAAKmH,QAAUnH,EAAKmH,OAAOC,OAC1BpH,EAAKsH,OAAV,CACA,IAAMQ,EAAe9H,EAAK8E,GAAGyC,qBAC7BO,EAAaR,OAAStH,EAAKsH,OAASA,EACpCQ,EAAaC,MAAO,EACpBD,EAAa3C,QAAQnF,EAAKqF,UAC1ByC,EAAaD,MAAM,EAAGA,GACtB7H,EAAKmH,OAASW,EACd9H,EAAKgI,YACDf,GAAMA,MAGZhI,KAAAgJ,aAAe,SAAA/E,GACb0D,QAAQC,IAAI3D,GACZlD,EAAKgF,SAASE,KAAK/C,MAAQnC,EAAKiD,OAASC,GAG3CjE,KAAA+I,UAAY,WACV,IAAMhF,EAAM,IAAIkF,WAAWlI,EAAKqF,SAAS8C,mBACnCC,EAAMC,OAAOC,sBACbC,EAAK,WACTvI,EAAKqF,SAASmD,qBAAqBxF,GACnChD,EAAK0C,KAAKM,EAAKhD,EAAKiD,QACpBjD,EAAKyI,MAAQL,EAAIG,IAEnBA,KAGFtJ,KAAAyJ,WAAa,SAACb,QAAA,IAAAA,MAAA,GACJ,IAAAP,EAAAtH,EAAAsH,OACRtH,EAAK8B,KAAO,EACZ9B,EAAKuH,mBAAmB,CAAED,OAAMA,EAAEO,MAAKA,IACvC7H,EAAKK,aAAY,IAGnBpB,KAAAoB,YAAc,SAACsI,GACT3I,EAAKI,UAAYQ,cAAcZ,EAAKI,UACpCuI,GAAW3I,EAAK4I,YAAYD,GAChC3I,EAAKI,SAAWC,YAAY,WAC1BL,EAAK4I,eACJ,MAGL3J,KAAA2J,YAAc,SAACD,GACb,IAAM1C,EAAQjG,EAAKsH,OAAStH,EAAKsH,OAAOuB,SAASC,QAAQ,GAAK,EAC9D9I,EAAK4E,YAAY,CAAE9C,KAAM6G,EAAU,IAAM3I,EAAK8B,KAAOmE,MAAKA,KAG5DhH,KAAA8J,MAAQ,WACN/I,EAAK8E,GAAGkE,UACRX,OAAOY,qBAAqBjJ,EAAKyI,OAC7BzI,EAAKI,UAAYQ,cAAcZ,EAAKI,WAG1CnB,KAAAiK,OAAS,WACPlJ,EAAK8E,GAAGoE,SACRlJ,EAAKgI,YACLhI,EAAKK,eAGPpB,KAAAmI,KAAO,WACLpH,EAAK4F,QACL5F,EAAK8E,GAAGqE,QACRd,OAAOY,qBAAqBjJ,EAAKyI,QApIjCxJ,KAAKkI,OAAS,KACdlI,KAAKiI,MAAQ,EACbjI,KAAKyD,KAAOA,EACZzD,KAAK0F,KAAOA,EACZ1F,KAAKgE,OAASA,EACdhE,KAAK2F,YAAcA,EACnB3F,KAAK4F,2ZCfTuE,EAAA,SAAAxK,GAAA,SAAAwK,mDAWA,OAXqBvK,EAAAuK,EAAAxK,GACnBwK,EAAAtK,UAAAC,OAAA,WACQ,IAAAC,EAAAC,KAAAC,MAAEmK,EAAArK,EAAAqK,aAAcC,EAAAtK,EAAAsK,YAAaP,EAAA/J,EAAA+J,MAAOQ,EAAAvK,EAAAuK,QAASC,EAAAxK,EAAAwK,KACnD,OACElK,EAAA,qBAAKC,UAAU,eACbD,EAAA,qBAAKC,UAAW,qCAAoCiK,EAAO,OAAS,UAAYC,QAASF,IACzFjK,EAAA,cAAC4C,EAAAzC,EAAM,CAACF,UAAU,SAASmK,aAAc,GAAIrH,SAAUgH,EAAc9G,aAAc,KAAMoH,SAAUH,IACnGlK,EAAA,qBAAKmK,QAASH,EAAa/J,UAAW,qCAAoCwJ,EAAQ,OAAS,aAInGK,EAXA,CAAqB9J,EAAA,WAYNQ,EAAA,+cCmBfuI,OAAOtD,aAAesD,OAAOtD,mBAAgB6E,EAE7C,IAAAC,EAAA,SAAAjL,GAAA,SAAAiL,IAAA,IAAA7J,EAAA,OAAApB,KAAAqB,MAAAhB,KAAAiB,YAAAjB,YA4CEe,EAAA8J,iBAAmB,WACT,IAAAC,EAAA/J,EAAAO,MAAAwJ,WACyB,WAA7BC,SAASC,iBACXF,EAAWhB,QACX/I,EAAKU,SAAS,CAAEqI,OAAO,MAEvBgB,EAAWb,SACXlJ,EAAKU,SAAS,CAAEqI,OAAO,MAI3B/I,EAAAkK,OAAS,WACD,IAAAlL,EAAAgB,EAAAO,MAAEO,EAAA9B,EAAA8B,MAAO+B,EAAA7D,EAAA6D,OACTsH,EAASnK,EAAKmK,OACpBA,EAAOrJ,MAAQA,EACfqJ,EAAOtH,OAASA,GAGlB7C,EAAA+G,KAAO,SAAChB,GACE,IAAAiB,EAAAhH,EAAAO,MAAAyG,IACJjB,EACF/F,EAAKO,MAAMwJ,WAAWhD,KAAKhB,GAClBqE,EAAA,EAAMC,SAASrD,IACxBhH,EAAKO,MAAMwJ,WAAWhD,KAAK,CAAEC,IAAGA,EAAEC,GAAIjH,EAAKsK,aAAc3E,WAAY3F,EAAKuK,YAI9EvK,EAAAuK,SAAW,SAAAxE,GACJ/F,EAAKwK,UACNC,MAAM1E,GACR/F,EAAKU,SAAS,CAAEvB,QAAS,EAAGE,aAAa,EAAMqL,SAAS,IAExD1K,EAAKU,SAAS,CAAEvB,QAAS4G,EAAG2E,SAAS,MAIzC1K,EAAAsK,aAAe,WACbtK,EAAKU,SAAS,CAAEiK,SAAS,EAAOD,SAAS,GAAQ,WAC/C1K,EAAKO,MAAMwJ,WAAWrB,WAAW,MAIrC1I,EAAA4K,kBAAoB,WAClB,GAAK5K,EAAKO,MAAMsK,WAAhB,CACA,IAAMjI,EAAM5C,EAAKmK,OAAOW,WAAW,MAC7B9L,EAAAgB,EAAAO,MAAEsC,EAAA7D,EAAA6D,OAAQ/B,EAAA9B,EAAA8B,MAAOgC,EAAA9D,EAAA8D,KAAMC,EAAA/D,EAAA+D,SAAUE,EAAAjE,EAAAiE,OACjCN,EAAQ,CAAEC,IAAGA,EAAEC,OAAMA,EAAE/B,MAAKA,EAAEgC,KAAIA,EAAEC,SAAQA,GAC1C6B,EAAA5E,EAAA4E,YACR5E,EAAKU,SAAS,CACZqJ,WAAY,IAAIgB,EAAA,QAAW,CACzBpG,KAAM7B,EACNJ,KAAMsI,EAAA,QAAMtI,KAAKC,GACjBM,OAAMA,EACN2B,YAAWA,KAEZ5E,EAAK+G,MACR/G,EAAKkK,WAGPlK,EAAA4E,YAAc,SAAC5F,OAAE4F,EAAA5F,EAAA8C,KAAmBH,EAAA3C,EAAAiH,MAC7BjG,EAAKwK,SACVxK,EAAKU,SAAS,CAAEkE,YAAWA,EAAEjD,UAASA,KAGxC3B,EAAAqJ,aAAe,SAAAtD,GACb/F,EAAKO,MAAMwJ,WAAW9B,aAAalC,EAAI,MAGzC/F,EAAAsJ,YAAc,WACN,IAAAtK,EAAAgB,EAAAO,MAAEwJ,EAAA/K,EAAA+K,WAAYhB,EAAA/J,EAAA+J,MAEhBA,EACFgB,EAAWb,SAEXa,EAAWhB,QAGb/I,EAAKU,SAAS,CAAEqI,OAAQA,KAG1B/I,EAAAZ,cAAgB,SAAAD,GACd,OAAmB,MAAZA,EACH,WACAa,EAAKO,MAAMlB,YACT,IACGF,EAAQ2J,QAAQ,GAAE,KAG7B9I,EAAAiC,WAAa,WACL,IAAAjD,EAAAgB,EAAAO,MAAEqE,EAAA5F,EAAA4F,YAAajD,EAAA3C,EAAA2C,UAAWE,EAAA7C,EAAA6C,eAAgBD,EAAA5C,EAAA4C,cAOhD,OANUwI,EAAA,EAAMa,mBACdtJ,GACMiD,EAAcjD,EAAY3B,EAAKkL,iBAAiBtJ,GAAiBC,IAAmBF,EACtF,GAGK,MADDyI,EAAA,EAAMa,mBAAmBtJ,IAIrC3B,EAAA+B,iBAAmB,SAAA8G,GACjB7I,EAAKU,SAAS,CAAEkB,cAAeiH,EAAUjE,YAAa,KAGxD5E,EAAAgC,gBAAkB,SAAA6G,GAChB7I,EAAKU,SAAS,CAAEkB,cAAe,KAAMC,eAAgBgH,EAAUE,OAAO,EAAOnE,YAAa,GAAK,WAC7F5E,EAAKO,MAAMwJ,WAAWrB,WAAW1I,EAAKkL,iBAAiBrC,IACvD7I,EAAKO,MAAMwJ,WAAWb,YAI1BlJ,EAAAkL,iBAAmB,SAAArC,GAAY,OAAAzG,UAAUyG,EAAW,IAAM7I,EAAKO,MAAMoB,WAAWmH,QAAQ,GAAI,KAE5F9I,EAAAmL,WAAa,WACNnL,EAAKoL,MAAMC,MAAM,KACtBrL,EAAKO,MAAMwJ,WAAWnE,QACtB5F,EAAKU,SAAS,CAAEgK,SAAS,EAAOvL,QAAS,GAAK,WAC5C,IAAMmM,EAAc,IAAIC,WAChBC,EAAAxL,EAAAoL,MAAAC,MAAA,GAAAG,KACRF,EAAOG,kBAAkBzL,EAAKoL,MAAMC,MAAM,IAC1CC,EAAOI,OAAS,SAACC,GACf3L,EAAK+G,KAAK,CAAEC,IAAK2E,EAAIC,cAAcC,OAAQ5E,GAAIjH,EAAKsK,aAAc3E,WAAY3F,EAAKuK,WACnFvK,EAAKU,SAAS,CAAErB,aAAa,EAAOsL,SAAS,EAAM9I,eAAgB,EAAGR,UAAWmK,SAKvFxL,EAAAuJ,QAAU,WACA,IAAAC,EAAAxJ,EAAAO,MAAAiJ,KACRxJ,EAAKU,SAAS,CAAE8I,MAAOA,GAAQ,WACvB,IAAAxK,EAAAgB,EAAAO,MAAEuL,EAAA9M,EAAAwK,KAASzD,EAAA/G,EAAAiE,OACjBjD,EAAKqJ,aAAayC,EAAI,EAAQ,IAAJ/F,QAiEhC,OA/O8BlH,EAAAgL,EAAAjL,GAQ5BiL,EAAA/K,UAAA+B,mBAAA,WACEmJ,SAAS+B,iBAAiB,mBAAoB9M,KAAK6K,kBACnD7K,KAAKyB,SAAS,CAEZsG,IAAK,UACLlE,KAAM,GACNC,SAAU,CAAC,OAAQ,QACnBF,OAAQ5D,KAAKC,MAAM8M,SAA0B,GAAf/M,KAAKC,MAAM+M,EAAS,IAClDnL,MAAO7B,KAAKC,MAAM8M,SAAW,IAAM,IACnCjD,OAAO,EACP9F,OAAQ,IACR0H,SAAS,EACTxL,QAAS,EACTwC,UAAW,EACXiD,YAAa,EACb/C,eAAgB,EAChBD,cAAe,KACfvC,aAAa,EACbwL,aAAcxC,OAAOtD,aACrB2F,SAAS,EACTrJ,UAAW,GACXmI,MAAM,IAERvK,KAAKuL,SAAU,GAGjBX,EAAA/K,UAAAiC,kBAAA,WACE9B,KAAK2L,qBAGPf,EAAA/K,UAAAoC,qBAAA,WACEjC,KAAKsB,MAAMwJ,WAAW3C,OACtB4C,SAASkC,oBAAoB,mBAAoBjN,KAAK6K,kBACtD7K,KAAKuL,SAAU,GAyIjBX,EAAA/K,UAAAC,OAAA,eAAAiB,EAAAf,KACQD,EAAAC,KAAAsB,MAAEwI,EAAA/J,EAAA+J,MAAO4B,EAAA3L,EAAA2L,QAASxL,EAAAH,EAAAG,QACpB0C,EAAA7C,EAAA6C,eAAgBD,EAAA5C,EAAA4C,cAChBgD,EAAA5F,EAAA4F,YAAajD,EAAA3C,EAAA2C,UAAWtC,EAAAL,EAAAK,YACxBwL,EAAA7L,EAAA6L,WAAYH,EAAA1L,EAAA0L,QAASrJ,EAAArC,EAAAqC,UAAWmI,EAAAxK,EAAAwK,KAGpC,IAAKqB,EACH,OAAOsB,EAAA,qBAAK5M,UAAU,oBAAkB,kBAG1C,IAAMuC,EAAOH,EAAYS,UAAWwC,EAAcjD,EAAaA,EAAY,KAAKmH,QAAQ,GAAI,IAAM,EAElG,OACEqD,EAAA,qBAAK5M,UAAW,qBAAoBoL,EAAU,UAAY,WACxDwB,EAAA,wBAAQ5K,IAAK,SAAAA,GAASvB,EAAKmK,OAAS5I,KACpC4K,EAAA,cAACC,EAAA,QAAa,CAAC/K,UAAWA,IAEvBsJ,EAQG,GAPFwB,EAAA,cAACE,EAAA,QAAS,CACRtD,MAAOA,EACPS,KAAMA,EACND,QAAStK,KAAKsK,QACdD,YAAarK,KAAKqK,YAClBD,aAAcpK,KAAKoK,eAKtBsB,EAUG,GATFwB,EAAA,cAACG,EAAA,QAAO,CACNxK,KAAMA,EACNH,UAAWA,EACXM,WAAYhD,KAAKgD,WACjBL,cAAeA,EACfC,eAAgBA,EAChBG,gBAAiB/C,KAAK+C,gBACtBD,iBAAkB9C,KAAK8C,mBAK3B4I,EACEwB,EAAA,cAACI,EAAA,QAAW,CACVpN,QAASA,EACTC,cAAeH,KAAKG,cACpBC,YAAaA,IAEb,GAEN8M,EAAA,mBAAGK,KAAK,eAAejN,UAAW,WAAWmL,EAAwB,GAAd,cACrDyB,EAAA,qBAAK5M,UAAW,oCAChB4M,EAAA,uBAAO5M,UAAU,SACfgC,IAAK,SAAAA,GAASvB,EAAKoL,MAAQ7J,GAC3B7B,KAAK,OAAO+M,OAAO,aACnBpK,SAAUpD,KAAKkM,gBAM3BtB,EA/OA,CAA8BsC,EAAA,WAiPfrM,EAAA,QAAAsK,EAAA,EAAMjF,QAAQ,CAC3BuH,UAAW7C,EACX8C,gBAAiB,SAAApM,GAAS,OACxByL,SAAUzL,EAAMqM,OAAOZ,SACvBC,EAAG1L,EAAMqM,OAAOC","file":"js/8.6772ac2a80b4f988d36c.bundle.js","sourcesContent":["\nimport { Progress } from 'antd'\nimport * as React from 'react'\ninterface IProps {\n  percent: number,\n  loadingFail: boolean,\n  formatPercent: (v: number) => string\n}\n\nclass FileLoading extends React.Component<IProps> {\n  render () {\n    const { percent, formatPercent, loadingFail } = this.props\n    return (\n      <div className='loading-mask'>\n        {\n          percent === 0 && !loadingFail ? (\n            <div className='loader'/>\n          ) : (\n            !loadingFail ? (\n              <Progress type='circle'\n                percent={Number(percent) ? percent : 0}\n                format={formatPercent}\n                status={loadingFail ? 'exception' : Number(percent) === 100 ? 'success' : 'active' }\n                className={`${!loadingFail && Number(percent) === 100 ? 'loading' : ''}`}\n              />\n            ) : ''\n          )\n        }\n      </div>\n    )\n  }\n}\nexport default FileLoading\n","import * as React from 'react'\ninterface IProps {\n  musicName: string\n}\n\ninterface IState {\n  wrapperWidth: number,\n  width: number,\n  offset: number,\n  onOff: boolean,\n  offsetWidth: number\n}\n\nclass FloatingTitle extends React.Component<IProps, IState> {\n\n  dom\n  wrapper\n  interval\n\n  componentWillMount () {\n    this.setState({\n      width: 0,\n      offset: 0,\n      onOff: false,\n      offsetWidth: 0\n    })\n  }\n\n  componentDidMount () {\n    this.setState({ wrapperWidth: this.wrapper.offsetWidth })\n    this.doInterval()\n  }\n\n  componentWillUnmount () {\n    this.clearInterval()\n  }\n\n  componentWillReceiveProps () {\n    const { width } = this.state\n    if (this.dom.offsetWidth !== width) {\n      let offsetWidth = (this.wrapper.offsetWidth - this.dom.offsetWidth)\n      offsetWidth = offsetWidth <= 0 ? offsetWidth : 0\n      this.setState({\n        width: this.dom.offsetWidth,\n        offsetWidth,\n        onOff: false\n      })\n    }\n  }\n\n  doInterval = () => {\n    this.interval = setInterval(() => {\n      this.intervalContent()\n    }, 3000)\n  }\n\n  intervalContent = () => {\n    const { onOff, offsetWidth } = this.state\n    this.setState({\n      onOff: !onOff,\n      offset: onOff ? 0 : offsetWidth\n    })\n  }\n\n  clearInterval = () => {\n    if (this.interval) { clearInterval(this.interval) }\n  }\n\n  render () {\n    const { musicName } = this.props\n    const { offset, offsetWidth } = this.state\n\n    return (\n      <div className={`music-name ${offsetWidth === 0 ? 'flex' : ''}`} ref={ref => { this.wrapper = ref }}>\n        <div style={{ transform: `translateX(${offset}px)` }} className='content' ref={ref => { this.dom = ref }}>{musicName}</div>\n      </div>\n    )\n  }\n}\nexport default FloatingTitle\n","\nimport { Slider } from 'antd'\nimport * as React from 'react'\n\ninterface IProps {\n  totalTime: number,\n  slideDuration: number | null,\n  durationOffset: number,\n  curr: number,\n  durationChanging: (v: number) => void,\n  durationChanged: (v: number) => void,\n  formatTime: () => string\n}\n\nclass Time extends React.Component<IProps> {\n  render () {\n    const { totalTime, slideDuration, durationOffset, curr, durationChanging, durationChanged, formatTime } = this.props\n    return (\n      <div className='time-zone'>\n        <Slider className='duration-slider'\n          value={totalTime ? (parseInt((slideDuration || durationOffset) + '', 10) + curr) % 100 : 0}\n          onChange={durationChanging}\n          onAfterChange={durationChanged}\n          tipFormatter={null}\n        />\n        <div>{formatTime()}</div>\n      </div>\n    )\n  }\n}\nexport default Time\n","export default {\n  draw: param => {\n    const { ctx, height, width, bars, barColor } = param\n    return (arr, volume) => {\n      const vol = volume\n      ctx.clearRect(0, 0, width, height)\n      if (Array.isArray(barColor)) {\n        const line = ctx.createLinearGradient(0, 0, 0, height)\n        const len = barColor.length\n        barColor.forEach((color, i) => {\n          line.addColorStop(i / (len - 1), color)\n        })\n        ctx.fillStyle = line\n      } else {\n        ctx.fillStyle = barColor\n      }\n      const rectWidth = width / bars\n      const barWidth = rectWidth * 0.5\n      const capHeight = Math.min(barWidth, 10) * vol\n      for (let i = 0; i < bars; i++) {\n        const rectHeight = arr[i] / 256 * height * vol\n        const capDistance = arr[i] > 0\n          ? Math.min(rectHeight + 40, height - capHeight)\n          : 0\n        ctx.fillRect(rectWidth * i, height - rectHeight, barWidth, rectHeight)\n        ctx.fillRect(rectWidth * i, height - (capDistance + capHeight), barWidth, capHeight)\n      }\n    }\n  }\n}\n","import Axios from 'axios'\n\nexport default class Visualizer {\n  source\n  count\n  ac\n  draw\n  size\n  gainNode\n  analyser\n  rafId\n  volume\n  buffer\n  currentTime\n  curr\n  total\n  interval\n  axiosModel\n  axiosCancellation\n\n  constructor ({ draw, size, volume, currentTime }) {\n    this.source = null\n    this.count = 0\n    this.draw = draw\n    this.size = size\n    this.volume = volume\n    this.currentTime = currentTime\n    this.initAC()\n  }\n\n  initAC = () => {\n    this.ac = new AudioContext()\n    this.gainNode = this.ac.createGain()\n    this.gainNode.gain.value = this.volume\n    this.gainNode.connect(this.ac.destination)\n    this.analyser = this.ac.createAnalyser()\n    this.analyser.fftSize = this.size * 2\n    this.analyser.connect(this.gainNode)\n  }\n\n  load = (url, callback, progressCb) => {\n    this.abort()\n    Axios({\n      url,\n      responseType: 'arraybuffer',\n      onDownloadProgress: v => {\n        const { loaded, total } = v\n        progressCb(loaded / total * 100)\n      },\n      cancelToken: new Axios.CancelToken(c => {\n        this.axiosCancellation = c\n      })\n    }).then(response => {\n      callback(response.data)\n    }).catch(thrown => {\n      if (Axios.isCancel(thrown)) {\n        console.log('Request canceled', thrown.message)\n      } else {\n        progressCb('error')\n      }\n    })\n  }\n\n  abort = () => this.axiosCancellation && this.axiosCancellation('abort')\n\n  play = ({ src, cb, progressCb }) => {\n    const n = ++this.count\n    if (this.source) {\n      this.source.stop()\n    }\n    const decodeCallback = buffer => {\n      this.buffer = buffer\n      if (n === this.count && this.ac) {\n        try {\n          this.createBufferSource({ buffer }, cb)\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    }\n    if (src instanceof ArrayBuffer) {\n      this.ac.decodeAudioData(src, decodeCallback)\n    } else {\n      this.load(src, arrayBuffer => {\n        this.ac.decodeAudioData(arrayBuffer, decodeCallback)\n      }, progressCb)\n    }\n  }\n\n  createBufferSource = ({ buffer, start = 0 }, cb?) => {\n    if (this.source) { this.source.stop() }\n    if (!this.buffer) { return }\n    const bufferSource = this.ac.createBufferSource()\n    bufferSource.buffer = this.buffer = buffer\n    bufferSource.loop = true\n    bufferSource.connect(this.analyser)\n    bufferSource.start(0, start)\n    this.source = bufferSource\n    this.visualize()\n    if (cb) { cb() }\n  }\n\n  updateVolume = vol => {\n    console.log(vol)\n    this.gainNode.gain.value = this.volume = vol\n  }\n\n  visualize = () => {\n    const arr = new Uint8Array(this.analyser.frequencyBinCount)\n    const raf = window.requestAnimationFrame\n    const fn = () => {\n      this.analyser.getByteFrequencyData(arr)\n      this.draw(arr, this.volume)\n      this.rafId = raf(fn)\n    }\n    fn()\n  }\n\n  setCurrent = (start = 0) => {\n    const { buffer } = this\n    this.curr = 0\n    this.createBufferSource({ buffer, start })\n    this.setInterval(true)\n  }\n\n  setInterval = (isFirst?) => {\n    if (this.interval) { clearInterval(this.interval) }\n    if (isFirst) { this.setCurrTime(isFirst) }\n    this.interval = setInterval(() => {\n      this.setCurrTime()\n    }, 1000)\n  }\n\n  setCurrTime = (isFirst?) => {\n    const total = this.buffer ? this.buffer.duration.toFixed(0) : 0\n    this.currentTime({ curr: isFirst ? 0 : ++this.curr , total })\n  }\n\n  pause = () => {\n    this.ac.suspend()\n    window.cancelAnimationFrame(this.rafId)\n    if (this.interval) { clearInterval(this.interval) }\n  }\n\n  resume = () => {\n    this.ac.resume()\n    this.visualize()\n    this.setInterval()\n  }\n\n  stop = () => {\n    this.abort()\n    this.ac.close()\n    window.cancelAnimationFrame(this.rafId)\n  }\n}\n","\nimport { Slider } from 'antd'\nimport * as React from 'react'\n\ninterface IProps {\n  pause: boolean,\n  mute: boolean,\n  setMute: () => void,\n  changeVolume: (v: number) => void,\n  togglePause: () => void\n}\n\nclass Volume extends React.Component<IProps> {\n  render () {\n    const { changeVolume, togglePause, pause, setMute, mute } = this.props\n    return (\n      <div className='volume-zone'>\n        <div className={`icon anticon anticon-ts-app icon-${mute ? 'mute' : 'volume'}`} onClick={setMute}/>\n        <Slider className='slider' defaultValue={77} onChange={changeVolume} tipFormatter={null} disabled={mute}/>\n        <div onClick={togglePause} className={`icon anticon anticon-ts-app icon-${pause ? 'play' : 'pause'}`} />\n      </div>\n    )\n  }\n}\nexport default Volume\n","\nimport { IFileReaderEvent } from '@interface'\nimport Utils from '@utils'\nimport * as React from 'react'\nimport FileLoading from './file-loading'\nimport FloatingTitle from './floating-title'\nimport './index.less'\nimport TimeBar from './time-bar'\nimport tools from './tools'\nimport Visualizer from './visualizer'\nimport VolumeBar from './volume-bar'\n\ninterface IState {\n  visualizer: Visualizer,\n  width: number,\n  height: number,\n  src: any,\n  pause: boolean\n  volume: number,\n  bars: number,\n  barColor: string[] | string,\n  loading: boolean,\n  percent: number,\n  totalTime: number,\n  currentTime: number,\n  durationOffset: number,\n  slideDuration: number | null,\n  loadingFail: boolean,\n  compatible: boolean,\n  showAdd: boolean,\n  musicName: string,\n  mute: boolean\n}\n\ninterface IProps {\n  isMobile: boolean,\n  h: number\n}\n\ndeclare global {\n  interface Window { AudioContext: any }\n}\n\nwindow.AudioContext = window.AudioContext || undefined\n\nclass MusicVisualizer extends React.Component<IProps, IState> {\n\n  canvas\n\n  input\n\n  mounted: boolean\n\n  componentWillMount () {\n    document.addEventListener('visibilitychange', this.visibilityChange)\n    this.setState({\n      // src: 'https://golb-1256296192.cos.ap-shanghai.myqcloud.com/1.mp3',\n      src: 'NoMusic',\n      bars: 64,\n      barColor: ['gold', 'aqua'],\n      height: this.props.isMobile ? this.props.h * .5 : 400,\n      width: this.props.isMobile ? 300 : 600,\n      pause: false,\n      volume: 0.77,\n      loading: true,\n      percent: 0,\n      totalTime: 0,\n      currentTime: 0,\n      durationOffset: 0,\n      slideDuration: null,\n      loadingFail: false,\n      compatible: !!window.AudioContext,\n      showAdd: false,\n      musicName: '',\n      mute: false\n    })\n    this.mounted = true\n  }\n\n  componentDidMount () {\n    this.restartVisualizer()\n  }\n\n  componentWillUnmount () {\n    this.state.visualizer.stop()\n    document.removeEventListener('visibilitychange', this.visibilityChange)\n    this.mounted = false\n  }\n\n  visibilityChange = () => {\n    const { visualizer } = this.state\n    if (document.visibilityState === 'hidden') {\n      visualizer.pause()\n      this.setState({ pause: true })\n    } else {\n      visualizer.resume()\n      this.setState({ pause: false })\n    }\n  }\n\n  resize = () => {\n    const { width, height } = this.state\n    const canvas = this.canvas\n    canvas.width = width\n    canvas.height = height\n  }\n\n  play = (v?) => {\n    const { src } = this.state\n    if (v) {\n      this.state.visualizer.play(v)\n    } else if (Utils.isString(src)) {\n      this.state.visualizer.play({ src, cb: this.afterLoading, progressCb: this.progress })\n    }\n  }\n\n  progress = v => {\n    if (!this.mounted) { return }\n    if (isNaN(v)) {\n      this.setState({ percent: 0, loadingFail: true, showAdd: true })\n    } else {\n      this.setState({ percent: v, showAdd: true })\n    }\n  }\n\n  afterLoading = () => {\n    this.setState({ loading: false, showAdd: true }, () => {\n      this.state.visualizer.setCurrent(0)\n    })\n  }\n\n  restartVisualizer = () => {\n    if (!this.state.compatible) { return }\n    const ctx = this.canvas.getContext('2d')\n    const { height, width, bars, barColor, volume } = this.state\n    const param = { ctx, height, width, bars, barColor }\n    const { currentTime } = this\n    this.setState({\n      visualizer: new Visualizer({\n        size: bars,\n        draw: tools.draw(param),\n        volume,\n        currentTime\n      })\n    }, this.play)\n    this.resize()\n  }\n\n  currentTime = ({ curr: currentTime, total: totalTime }) => {\n    if (!this.mounted) { return }\n    this.setState({ currentTime, totalTime })\n  }\n\n  changeVolume = v => {\n    this.state.visualizer.updateVolume(v / 100)\n  }\n\n  togglePause = () => {\n    const { visualizer, pause } = this.state\n\n    if (pause) {\n      visualizer.resume()\n    } else {\n      visualizer.pause()\n    }\n\n    this.setState({ pause: !pause })\n  }\n\n  formatPercent = percent => {\n    return percent === 100\n      ? 'decoding'\n      : this.state.loadingFail\n        ? '↓'\n        : `${percent.toFixed(1)}%`\n  }\n\n  formatTime = () => {\n    const { currentTime, totalTime, durationOffset, slideDuration } = this.state\n    const c = Utils.secondFormatToTime(\n      totalTime\n        ? ((currentTime % totalTime + this.durationToSecond(slideDuration || durationOffset)) % totalTime)\n        : 0\n    )\n    const t = Utils.secondFormatToTime(totalTime)\n    return `${c} / ${t}`\n  }\n\n  durationChanging = duration => {\n    this.setState({ slideDuration: duration, currentTime: 0 })\n  }\n\n  durationChanged = duration => {\n    this.setState({ slideDuration: null, durationOffset: duration, pause: false, currentTime: 0 }, () => {\n      this.state.visualizer.setCurrent(this.durationToSecond(duration))\n      this.state.visualizer.resume()\n    })\n  }\n\n  durationToSecond = duration => parseInt((duration / 100 * this.state.totalTime).toFixed(0), 10)\n\n  fileChange = () => {\n    if (!this.input.files[0]) { return }\n    this.state.visualizer.abort()\n    this.setState({ showAdd: false, percent: 0 }, () => {\n      const reader: any = new FileReader()\n      const { name } = this.input.files[0]\n      reader.readAsArrayBuffer(this.input.files[0])\n      reader.onload = (res: IFileReaderEvent) => {\n        this.play({ src: res.currentTarget.result, cb: this.afterLoading, progressCb: this.progress })\n        this.setState({ loadingFail: false, loading: true, durationOffset: 0, musicName: name })\n      }\n    })\n  }\n\n  setMute = () => {\n    const { mute } = this.state\n    this.setState({ mute: !mute }, () => {\n      const { mute: m, volume: v } = this.state\n      this.changeVolume(m ? 0 : v * 100)\n    })\n  }\n\n  render () {\n    const { pause, loading, percent\n      , durationOffset, slideDuration\n      , currentTime, totalTime, loadingFail\n      , compatible, showAdd, musicName, mute\n    } = this.state\n\n    if (!compatible) {\n      return <div className='music-visualizer'>not compatible</div>\n    }\n\n    const curr = totalTime ? parseInt(((currentTime % totalTime) / totalTime * 100).toFixed(0), 10) : 0\n\n    return (\n      <div className={`music-visualizer ${loading ? 'loading' : 'loaded'}`}>\n        <canvas ref={ref => { this.canvas = ref }} />\n        <FloatingTitle musicName={musicName}/>\n        {\n          !loading ? (\n            <VolumeBar\n              pause={pause}\n              mute={mute}\n              setMute={this.setMute}\n              togglePause={this.togglePause}\n              changeVolume={this.changeVolume}\n            />\n          ) : ''\n        }\n        {\n          !loading ? (\n            <TimeBar\n              curr={curr}\n              totalTime={totalTime}\n              formatTime={this.formatTime}\n              slideDuration={slideDuration}\n              durationOffset={durationOffset}\n              durationChanged={this.durationChanged}\n              durationChanging={this.durationChanging}\n            />\n          ) : ''\n        }\n        {\n          loading ? (\n            <FileLoading\n              percent={percent}\n              formatPercent={this.formatPercent}\n              loadingFail={loadingFail}\n            />\n          ) : ''\n        }\n        <a href='javascript:;' className={`upload ${!showAdd ? 'disappear' : ''}`}>\n          <div className={`anticon anticon-ts-app icon-add`}/>\n          <input className='change'\n            ref={ref => { this.input = ref }}\n            type='file' accept='audio/mpeg'\n            onChange={this.fileChange}\n          />\n        </a>\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: MusicVisualizer,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile,\n    h: state.common.contentHeight\n  })\n})\n"],"sourceRoot":""}