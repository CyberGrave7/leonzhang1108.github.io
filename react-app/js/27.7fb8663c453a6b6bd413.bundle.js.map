{"version":3,"sources":["webpack:///./src/pages/12bius/index.tsx"],"names":["times","n","func","Array","fill","map","_","i","initFirework","width","height","age","phase","x","Math","floor","random","y","generateSparks","maxSparks","vx","vy","blue","green","red","weight","ctx","colors","beginPath","fillStyle","r","g","b","a","join","rect","Fireworks12bius","background","maxFireworks","canvas","useRef","sparks","fireworks","updator","useEffect","context","current","getContext","clearRect","firework","index","forEach","spark","trailAge","fade","key","draw","others","update","ref","style","defaultProps","connect","component","mapStateToProps","state","common","contentWidth","contentHeight"],"mappings":"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","file":"js/27.7fb8663c453a6b6bd413.bundle.js","sourcesContent":["import Utils from '@utils'\nimport React from 'react'\ninterface IProps {\n  background?: string\n  width?: number\n  height?: number\n  maxFireworks?: number\n  maxSparks?: number\n}\n\ninterface ISpark {\n  vx: number\n  vy: number\n  weight: number\n  red: number\n  green: number\n  blue: number\n}\n\ninterface IFirework {\n  x: number\n  y: number\n  age: number\n  phase: 'fly' | 'explode'\n  sparks: ISpark[]\n}\n\nconst radius = 5\n\nconst times = (n: number, func: (v: number) => any) =>\n  Array(n)\n    .fill(null)\n    .map((_, i) => func(i))\n\nconst initFirework = (width: number, height: number) => {\n  return {\n    age: 0,\n    phase: 'fly',\n    x: Math.floor(Math.random() * width),\n    y: height\n  }\n}\n\nconst generateSparks = (maxSparks: number) => {\n  return times(maxSparks, (i: number) => {\n    const vx = Math.random() * 5 + 0.5\n    const vy = Math.random() * 5 + 0.5\n\n    return {\n      blue: Math.floor(Math.random() * 2),\n      green: Math.floor(Math.random() * 2),\n      red: Math.floor(Math.random() * 2),\n      vx: Math.random() > 0.5 ? -vx : vx,\n      vy: Math.random() > 0.5 ? -vy : vy,\n      weight: Math.random() * 0.3 + 0.03\n    }\n  })\n}\n\nconst generateFireworks = (\n  width: number,\n  height: number,\n  maxFireworks: number,\n  maxSparks: number\n) => times(maxFireworks, () => ({\n  ...initFirework(width, height),\n  sparks: generateSparks(maxSparks)\n}))\n\nconst toRGBA = (r = 0, g = 0, b = 0, a = 1) => `rgba(${[r, g, b, a].join(',')})`\n\nconst fill = (ctx: any, x: number, y: number, colors: number[]) => {\n  ctx.beginPath()\n  ctx.fillStyle = toRGBA(...colors)\n  ctx.rect(x, y, radius, radius)\n  ctx.fill()\n}\n\nconst draw = (ctx: any, { phase, sparks, age, x, y }: IFirework, index: number) => {\n  if (phase === 'fly') {\n    times(15, (i: number) => {\n      fill(ctx, x + Math.random() * i - i / 2, y + i * radius, [index * 50, i * 17])\n    })\n    return\n  }\n\n  sparks.forEach(spark => {\n    times(10, (i: number) => {\n      const trailAge = age + i\n      const fade = i * 20 - age * 2\n      fill(\n        ctx,\n        x + spark.vx * trailAge,\n        y + spark.vy * trailAge + (spark.weight * trailAge) ** 2,\n        ['red', 'green', 'blue'].map(key => Math.floor(spark[key] * fade))\n      )\n    })\n  })\n}\n\nconst update = (width: number, height: number, firework: IFirework) => {\n  if (firework.phase === 'explode') {\n    const others = firework.age > 100 && Math.random() < 0.05 ? initFirework(width, height) : {}\n    return { ...firework, age: firework.age + 1, ...others }\n  } else {\n    const phase = Math.random() < 0.001 || firework.y < 200 ? 'explode' : firework.phase\n    return { ...firework, y: firework.y - 10, phase }\n  }\n}\n\nconst Fireworks12bius = ({ background, width = 0, height = 0, maxFireworks = 0, maxSparks = 0 }: IProps) => {\n  const canvas: any = React.useRef(null)\n  const [fireworks, updator] = React.useState(\n    generateFireworks(width, height, maxFireworks, maxSparks)\n  )\n\n  React.useEffect(() => {\n    const context = canvas.current.getContext('2d')\n    context.clearRect(0, 0, width, height)\n    updator(\n      fireworks.map((firework: IFirework, index: number) => {\n        draw(context, firework, index)\n        return update(width, height, firework)\n      })\n    )\n  })\n\n  return <canvas ref={canvas} width={width} height={height} style={{ background }} />\n}\n\nFireworks12bius.defaultProps = {\n  background: 'black',\n  maxFireworks: 5,\n  maxSparks: 77\n}\n\nexport default Utils.connect({\n  component: Fireworks12bius,\n  mapStateToProps: state => ({\n    width: state.common.contentWidth,\n    height: state.common.contentHeight\n  })\n})\n"],"sourceRoot":""}