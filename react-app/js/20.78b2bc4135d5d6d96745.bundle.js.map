{"version":3,"sources":["webpack:///./src/pages/Camera/index.tsx"],"names":["w","window","navi","navigator","tracking","Camera","_super","props","_this","call","this","frame","userMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","startDrawing","video","audio","stream","doDrawing","apply","error","setState","hasCamera","console","log","tracker","ObjectTracker","setInitialScale","setStepSize","setEdgesDensity","task","track","camera","on","event","data","forEach","rect","x","y","width","height","run","state","index","_utils__WEBPACK_IMPORTED_MODULE_0__","random","__extends","prototype","componentWillUnmount","stop","componentDidMount","render","_a","react__WEBPACK_IMPORTED_MODULE_1__","className","style","transform","id","ref","el","v","autoPlay","__webpack_exports__"],"mappings":"wdAOMA,EAAIC,OACJC,EAAOC,UACPC,EAAWJ,EAAEI,SAWnBC,EAAA,SAAAC,GAME,SAAAD,EAAaE,GAAb,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YAHdF,EAAAG,MAAQ,CAAC,SAAU,aAAc,UAAW,SAAU,MAAO,aAc7DH,EAAAI,UAAY,WAAM,OAAAT,UAAUU,aAAeX,EAAKW,cAAgBX,EAAKY,oBAAsBZ,EAAKa,iBAAmBb,EAAKc,gBAAkB,MAE1IR,EAAAS,aAAe,WACTT,EAAKI,YACPT,UAAUU,aAAa,CACrBK,OAAO,EACPC,OAAO,GACN,SAAAC,GACDZ,EAAKa,UAAUC,MAAMd,IACpB,SAAAe,GACDf,EAAKgB,SAAS,CAAEC,WAAW,IAC3BC,QAAQC,IAAIJ,KAGdf,EAAKgB,SAAS,CAAEC,WAAW,KAI/BjB,EAAAa,UAAY,WACF,IACFO,EAAU,IAAIC,EADZzB,EAAAyB,eAC0B,QAClCD,EAAQE,gBAAgB,GACxBF,EAAQG,YAAY,GACpBH,EAAQI,gBAAgB,IACxBxB,EAAKyB,KAAO7B,EAAS8B,MAAM,SAAUN,EAAS,CAAEO,QAAQ,IACxDP,EAAQQ,GAAG,QAAS,SAAAC,GAClBA,EAAMC,KAAKC,QAAQ,SAAAC,GACT,IAAAC,EAAAD,EAAAC,EAAGC,EAAAF,EAAAE,EAAGC,EAAAH,EAAAG,MAAOC,EAAAJ,EAAAI,OACrBpC,EAAKgB,SAAS,CAAEiB,EAACA,EAAEC,EAACA,EAAEC,MAAKA,EAAEC,OAAMA,QAGvCpC,EAAKyB,KAAKY,OAzCVrC,EAAKsC,MAAQ,CACXrB,WAAW,EACXgB,EAAG,EACHC,EAAG,EACHE,OAAQ,IACRD,MAAO,IACPI,MAAOC,EAAA,EAAMC,OAAO,EAAG,MAwE7B,OAtFqBC,EAAA7C,EAAAC,GAoDnBD,EAAA8C,UAAAC,qBAAA,WACM1C,KAAKuB,MAAQvB,KAAKuB,KAAKoB,MACzB3C,KAAKuB,KAAKoB,QAIdhD,EAAA8C,UAAAG,kBAAA,WACE5C,KAAKO,gBAGPZ,EAAA8C,UAAAI,OAAA,eAAA/C,EAAAE,KACQ8C,EAAA9C,KAAAoC,MAAErB,EAAA+B,EAAA/B,UAAWgB,EAAAe,EAAAf,EAAGC,EAAAc,EAAAd,EAAGE,EAAAY,EAAAZ,OAAQD,EAAAa,EAAAb,MAAOI,EAAAS,EAAAT,MAExC,OAAOtB,EAEHgC,EAAA,qBAAKC,UAAU,QACbD,EAAA,qBAAKC,UAAU,gBAAgBC,MAAO,CAAEC,UAAW,gBAAgBnB,EAAC,OAAOC,EAAC,WAC1Ee,EAAA,qBAAKC,UAAW,SAAShD,KAAKC,MAAMoC,GAAUY,MAAO,CAAEf,OAAWA,EAAM,KAAMD,MAAUA,EAAK,OAC3Fc,EAAA,qBAAKC,UAAU,oBACfD,EAAA,qBAAKC,UAAU,qBACfD,EAAA,qBAAKC,UAAU,wBACfD,EAAA,qBAAKC,UAAU,uBACfD,EAAA,qBAAKC,UAAU,aACfD,EAAA,qBAAKC,UAAU,cACfD,EAAA,qBAAKC,UAAU,eACfD,EAAA,qBAAKC,UAAU,kBAGnBD,EAAA,uBAAOI,GAAG,QAAQH,UAAU,QAAQf,MAAM,OAAOC,OAAO,OAAOkB,IAAK,SAAAC,GAAM,OAAAvD,EAAKwD,EAAID,GAAIE,UAAU,KAGnGR,EAAA,qBAAKC,UAAU,SAAQD,EAAA,yCAG/BpD,EAtFA,CAAqBoD,EAAA,WAwFNS,EAAA","file":"js/20.78b2bc4135d5d6d96745.bundle.js","sourcesContent":["\nimport Utils from '@utils'\nimport * as React from 'react'\nimport 'tracking'\nimport 'tracking/build/data/face-min.js'\nimport './index.less'\n\nconst w = window as any\nconst navi = navigator as any\nconst tracking = w.tracking\n\ninterface IState {\n  hasCamera: boolean,\n  x: number,\n  y: number,\n  height: number,\n  width: number,\n  index: number\n}\n\nclass Camera extends React.Component<null, IState> {\n  v\n  task\n\n  frame = ['threat', 'big threat', 'machine', 'analog', 'gov', 'president']\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      hasCamera: true,\n      x: 0,\n      y: 0,\n      height: 150,\n      width: 150,\n      index: Utils.random(0, 5)\n    }\n  }\n\n  userMedia = () => navigator.getUserMedia = navi.getUserMedia || navi.webkitGetUserMedia || navi.mozGetUserMedia || navi.msGetUserMedia || null\n\n  startDrawing = () => {\n    if (this.userMedia()) {\n      navigator.getUserMedia({\n        video: true,\n        audio: false\n      }, stream => {\n        this.doDrawing.apply(this)\n      }, error => {\n        this.setState({ hasCamera: false })\n        console.log(error)\n      })\n    } else {\n      this.setState({ hasCamera: false })\n    }\n  }\n\n  doDrawing = () => {\n    const { ObjectTracker } = tracking\n    const tracker = new ObjectTracker('face')\n    tracker.setInitialScale(4)\n    tracker.setStepSize(1)\n    tracker.setEdgesDensity(0.1)\n    this.task = tracking.track('#video', tracker, { camera: true })\n    tracker.on('track', event => {\n      event.data.forEach(rect => {\n        const { x, y, width, height } = rect\n        this.setState({ x, y, width, height })\n      })\n    })\n    this.task.run()\n  }\n\n  componentWillUnmount () {\n    if (this.task && this.task.stop) {\n      this.task.stop()\n    }\n  }\n\n  componentDidMount () {\n    this.startDrawing()\n  }\n\n  render () {\n    const { hasCamera, x, y, height, width, index } = this.state\n\n    return hasCamera\n      ? (\n        <div className='home'>\n          <div className='frame-wrapper' style={{ transform: `translate3d( ${x}px, ${y}px, 0)` }}>\n            <div className={`frame ${this.frame[index]}`} style={{ height: `${height}px`, width: `${width}px` }}>\n              <div className='top-left corner'/>\n              <div className='top-right corner'/>\n              <div className='bottom-right corner'/>\n              <div className='bottom-left corner'/>\n              <div className='top line'/>\n              <div className='left line'/>\n              <div className='right line'/>\n              <div className='bottom line'/>\n            </div>\n          </div>\n          <video id='video' className='video' width='100%' height='100%' ref={el => this.v = el} autoPlay={true}/>\n        </div>\n      ) : (\n        <div className='empty'><span>no camera</span></div>\n      )\n  }\n}\n\nexport default Camera\n"],"sourceRoot":""}