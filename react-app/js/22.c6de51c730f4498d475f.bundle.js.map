{"version":3,"sources":["webpack:///./src/pages/Gobang/index.tsx"],"names":["props","reset","e","size","isMobile","state","renju","showNumber","step","positions","checkerboard","calculateCheckerboard","setState","result","i","row","j","push","index","mouseEnter","rowIndex","itemIndex","setCheckerboard","mouseLeave","itemClick","isClick","p","concat","column","isWin","isPeace","info","title","content","isColumnWin","isRowWin","isSkewWin","isDownLineWin","isUpLineWin","toggleShowNumber","retract","renderItem","item","className","key","onClick","handle","onMouseEnter","onMouseLeave","renderRow","map","render","this","type","disabled","length","Component","connect","component","Gobang","mapStateToProps","common"],"mappings":"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","file":"js/22.c6de51c730f4498d475f.bundle.js","sourcesContent":["import Utils from '@utils'\nimport { Button, Modal } from 'antd'\nimport React from 'react'\nimport './index.less'\n\ninterface IProps {\n  isMobile: boolean\n}\n\ninterface IState {\n  size: number,\n  showNumber: boolean,\n  checkerboard: any[][],\n  step: number,\n  positions: any[]\n  renju: number\n}\n\nclass Gobang extends React.Component<IProps, IState> {\n  constructor (props) {\n    super(props)\n    this.reset()\n  }\n\n  reset = (e?) => {\n    const size = !this.props.isMobile ? 15 : 3\n    const renju = !this.props.isMobile ? 5 : 3\n    const state = {\n      size, renju,\n      showNumber: false,\n      step: 0,\n      positions: [],\n      checkerboard: this.calculateCheckerboard(size)\n    }\n    if (e) {\n      this.setState(state)\n    } else {\n      this.state = { ...state }\n    }\n  }\n\n  // state\n  // 0: nothing, 1: hover, 2: black, 3: white\n  calculateCheckerboard = size => {\n    const result: any[][] = []\n    for (let i = 0; i < size; i++) {\n      const row: any[] = []\n      for (let j = 0; j < size; j++) {\n        row.push({ state: 0, index: -1 })\n      }\n      result.push(row)\n    }\n    return result\n  }\n\n  mouseEnter = ({ rowIndex, itemIndex }) => {\n    this.setCheckerboard({ state: 1, rowIndex, itemIndex })\n  }\n\n  mouseLeave = ({ rowIndex, itemIndex }) => {\n    this.setCheckerboard({ state: 0, rowIndex, itemIndex })\n  }\n\n  itemClick = ({ rowIndex, itemIndex }) => {\n    const { step } = this.state\n    this.setCheckerboard({ state: step % 2 === 1 ? 3 : 2, rowIndex, itemIndex }, true)\n  }\n\n  setCheckerboard = ({ state, rowIndex, itemIndex }, isClick?) => {\n    const { checkerboard, step, positions: p } = this.state\n    if (checkerboard[rowIndex][itemIndex].state !== 2 && checkerboard[rowIndex][itemIndex].state !== 3) {\n      checkerboard[rowIndex][itemIndex] = { state, index: isClick ? step : -1 }\n      this.setState({\n        checkerboard,\n        step: isClick ? step + 1 : step,\n        positions: isClick ? p.concat({ row: rowIndex, column: itemIndex }) : p\n      }, () => isClick && !this.isWin({ rowIndex, itemIndex, state }) && this.isPeace())\n    }\n  }\n\n  isPeace = () => {\n    const { size, step } = this.state\n    if (size * size === step) {\n      Modal.info({\n        title: 'Peace',\n        content: 'Draw'\n      })\n    }\n  }\n\n  isWin = ({ rowIndex, itemIndex, state }) => {\n    const isWin = this.isColumnWin({ rowIndex, itemIndex, state })\n      || this.isRowWin({ rowIndex, itemIndex, state })\n      || this.isSkewWin({ rowIndex, itemIndex, state })\n\n    if (isWin) {\n      Modal.info({\n        title: 'Victory',\n        content: `${state === 2 ? 'black' : 'white'} wins`\n      })\n    }\n    return isWin\n  }\n\n  isColumnWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (rowIndex + i >= 0\n        && rowIndex + i < size\n        && checkerboard[rowIndex + i][itemIndex].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isRowWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (itemIndex + i >= 0\n        && itemIndex + i < size\n        && checkerboard[rowIndex][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isSkewWin = ({ rowIndex, itemIndex, state }) =>\n    this.isDownLineWin({ rowIndex, itemIndex, state })\n      || this.isUpLineWin({ rowIndex, itemIndex, state })\n\n  isDownLineWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (itemIndex + i >= 0\n        && itemIndex + i < size\n        && rowIndex + i >= 0\n        && rowIndex + i < size\n        && checkerboard[rowIndex + i][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  isUpLineWin = ({ rowIndex, itemIndex, state }) => {\n    const { size, checkerboard, renju } = this.state\n    let result = 0\n    for (let i = -(renju - 1); i <= renju - 1; i++) {\n      if (itemIndex + i >= 0\n        && itemIndex + i < size\n        && rowIndex - i >= 0\n        && rowIndex - i < size\n        && checkerboard[rowIndex - i][itemIndex + i].state === state\n      ) {\n        result++\n      } else {\n        result = 0\n      }\n      if (result === renju) {\n        break\n      }\n    }\n    return result === renju\n  }\n\n  toggleShowNumber = () => {\n    this.setState({ showNumber: !this.state.showNumber })\n  }\n\n  retract = () => {\n    const { step, positions, checkerboard } = this.state\n    const { row, column } = positions.pop()\n    checkerboard[row][column] = { state: 0, index: -1 }\n    this.setState({\n      step: step - 1,\n      positions,\n      checkerboard\n    })\n  }\n\n  renderItem = (item, rowIndex, itemIndex) => {\n    const { state, index } = item\n    const { step, showNumber } = this.state\n    let className = ''\n    switch (state) {\n      case 1:\n        className = step % 2 !== 1 ? 'chosen black' : 'chosen white'\n        break\n      case 2:\n        className = 'chosen black selected'\n        break\n      case 3:\n        className = 'chosen white selected'\n        break\n    }\n    return (\n      <td className='item' key={itemIndex}\n        onClick={Utils.handle(this.itemClick, { rowIndex, itemIndex })}\n        onMouseEnter={Utils.handle(this.mouseEnter, { rowIndex, itemIndex })}\n        onMouseLeave={Utils.handle(this.mouseLeave, { rowIndex, itemIndex })}\n      >\n        <div className={className}>{showNumber && index >= 0 ? index + 1 : ''}</div>\n      </td>\n    )\n  }\n\n  renderRow = (row, rowIndex) => (\n    <tr className='row' key={rowIndex}>\n      { row.map((item, itemIndex) => this.renderItem(item, rowIndex, itemIndex)) }\n    </tr>\n  )\n\n  render () {\n    const { checkerboard, showNumber, positions } = this.state\n    return (\n      <div className='gobang-wrapper'>\n        <table>\n          <tbody>\n            { checkerboard.map(this.renderRow) }\n          </tbody>\n        </table>\n        <div className='button-wrapper'>\n          <Button type='primary' disabled={positions.length === 0} onClick={this.reset}>\n            Reset\n          </Button>\n          <Button type='primary' onClick={this.toggleShowNumber}>\n            { showNumber ? 'Hide steps' : 'Show steps'}\n          </Button>\n          <Button type='primary' disabled={positions.length === 0} onClick={this.retract}>\n            Retract\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: Gobang,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile\n  })\n})\n"],"sourceRoot":""}