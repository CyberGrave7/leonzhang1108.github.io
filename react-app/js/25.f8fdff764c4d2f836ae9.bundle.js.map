{"version":3,"sources":["webpack:///./src/pages/Painting/index.tsx"],"names":["componentDidMount","this","cancel","canvas","componentWillUnmount","render","height","width","ref","el","Component","connect","component","Painting","mapStateToProps","state","common","contentHeight","contentWidth"],"mappings":"8dAUA,2B,+CAgBA,OAhBuB,OAGrB,YAAAA,kBAAA,WACEC,KAAKC,OAAS,kBAAUD,KAAKE,SAE/B,YAAAC,qBAAA,WACEH,KAAKC,QAAUD,KAAKC,UAGtB,YAAAG,OAAA,sBACQ,aAAEC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,MAChB,OACE,4BAAQC,IAAK,SAAAC,GAAM,OAAC,EAAKN,OAASM,GAAKH,OAAQA,EAAQC,MAAOA,KAGpE,EAhBA,CAAuB,IAAMG,WAkBd,cAAMC,QAAQ,CAC3BC,UAAWC,EACXC,gBAAiB,SAAAC,GAAS,OACxBT,OAAQS,EAAMC,OAAOC,cACrBV,MAAOQ,EAAMC,OAAOE","file":"js/25.f8fdff764c4d2f836ae9.bundle.js","sourcesContent":["import Utils from '@utils'\nimport React from 'react'\nimport './index.less'\nimport initWebGL from './webGL'\n\ninterface IProps {\n  height: number;\n  width: number;\n}\n\nclass Painting extends React.Component<IProps> {\n  canvas\n  cancel\n  componentDidMount() {\n    this.cancel = initWebGL(this.canvas)\n  }\n  componentWillUnmount() {\n    this.cancel && this.cancel()\n  }\n\n  render() {\n    const { height, width } = this.props\n    return (\n      <canvas ref={el => (this.canvas = el)} height={height} width={width} />\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: Painting,\n  mapStateToProps: state => ({\n    height: state.common.contentHeight,\n    width: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}