{"version":3,"sources":["webpack:///./src/pages/PieChart/index.tsx"],"names":["resize","myChart","setTimeout","componentWillMount","this","setState","loaded","componentDidMount","getOption","componentWillReceiveProps","componentWillUpdate","res","init","echarts","setOption","render","className","state","ref","dom","Component","connect","component","PieChart","mapStateToProps","contentHeight","common","contentWidth"],"mappings":"wwDAeA,yE,OAqBE,EAAAA,OAAS,WACH,EAAKC,SAAWC,WAAW,EAAKD,QAAQD,OAAQ,I,EAwBxD,OA9CuB,OAKrB,YAAAG,mBAAA,WACEC,KAAKC,SAAS,CAAEC,QAAQ,KAG1B,YAAAC,kBAAA,WACEH,KAAKI,aAGP,YAAAC,0BAAA,WACEL,KAAKJ,UAGP,YAAAU,oBAAA,WACEN,KAAKJ,UAOD,YAAAQ,UAAN,W,8FACc,SAAM,EAAQ,M,cAApBG,EAAM,SACZP,KAAKC,SAAS,CAAEC,QAAQ,IACxBF,KAAKH,QAAU,IAAQW,KAAKR,KAAKS,SACjCT,KAAKH,QAAQa,UAAUH,GACvBP,KAAKJ,S,UAGP,YAAAe,OAAA,sBACE,OACE,yBAAKC,UAAU,qBAEbZ,KAAKa,MAAMX,OACT,yBAAKY,IAAK,SAAAC,GAAO,SAAKN,QAAUM,GAAKH,UAAU,YAE/C,yBAAKA,UAAU,aAMzB,EA9CA,CAAuB,IAAMI,WAgDd,cAAMC,QAAQ,CAC3BC,UAAWC,EACXC,gBAAiB,SAAAP,GAAS,OACxBQ,cAAeR,EAAMS,OAAOD,cAC5BE,aAAcV,EAAMS,OAAOC","file":"js/26.4fa19f887e7323fea592.bundle.js","sourcesContent":["\nimport Utils from '@utils'\nimport Echarts from '@cpt/echarts'\nimport React from 'react'\nimport './index.less'\n\ninterface IProps {\n  contentHeight: number,\n  contentWidth: number\n}\n\ninterface IState {\n  loaded: boolean\n}\n\nclass PieChart extends React.Component<IProps, IState> {\n\n  echarts: HTMLDivElement | null\n  myChart: any\n\n  componentWillMount () {\n    this.setState({ loaded: false })\n  }\n\n  componentDidMount () {\n    this.getOption()\n  }\n\n  componentWillReceiveProps () {\n    this.resize()\n  }\n\n  componentWillUpdate () {\n    this.resize()\n  }\n\n  resize = () => {\n    if (this.myChart) { setTimeout(this.myChart.resize, 0) }\n  }\n\n  async getOption() {\n    const res = await require('./echarts.json')\n    this.setState({ loaded: true })\n    this.myChart = Echarts.init(this.echarts)\n    this.myChart.setOption(res)\n    this.resize()\n  }\n\n  render () {\n    return (\n      <div className='pie-chart-wrapper'>\n      {\n        this.state.loaded ? (\n          <div ref={dom => this.echarts = dom} className='echarts' />\n        ) : (\n          <div className='loader'/>\n        )\n      }\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: PieChart,\n  mapStateToProps: state => ({\n    contentHeight: state.common.contentHeight,\n    contentWidth: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}