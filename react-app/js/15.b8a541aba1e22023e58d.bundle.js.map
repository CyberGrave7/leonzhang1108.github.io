{"version":3,"sources":["webpack:///./src/pages/Tetris/constant.tsx","webpack:///./src/pages/Tetris/tools.tsx","webpack:///./node_modules/css-animation/lib/Event.js","webpack:///./src/pages/Tetris/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","keyCode","left","up","right","down","space","block","L","J","O","T","Z","S","I","scores","blockMap","_constant__WEBPACK_IMPORTED_MODULE_1__","couldMoveLeftOrRight","_a","width","rx","y","playboard","length","blockList","couldMove","forEach","row","dy","every","item","dx","push","x","ox","oy","nx","ny","couldMoveFun","_","bottomBlockList","i","l","next","b","getCurrPosition","cBlock","screen","rotate","moveTo","_utils__WEBPACK_IMPORTED_MODULE_0__","clone","max","center","Math","floor","index","cm","curr","Object","defineProperty","exports","value","START_EVENT_NAME_MAP","transitionstart","transition","WebkitTransition","MozTransition","OTransition","msTransition","animationstart","animation","WebkitAnimation","MozAnimation","OAnimation","msAnimation","END_EVENT_NAME_MAP","transitionend","animationend","startEvents","endEvents","addEventListener","node","eventName","eventListener","removeEventListener","window","document","style","createElement","process","EVENT_NAME_MAP","events","baseEventName","hasOwnProperty","baseEvents","styleName","detectEvents","TransitionEvents","addStartEventListener","startEvent","setTimeout","removeStartEventListener","addEndEventListener","endEvent","removeEndEventListener","module","_constant__WEBPACK_IMPORTED_MODULE_4__","blocks","keys","Tetris","_super","_this","apply","this","arguments","transform","clearBtnInterval","btnInterval","clearInterval","interval","resetGame","calculateScreen","column","setState","getSize","props","random","intervalTime","score","pause","gameover","touchDown","pressed","doMovePlayboard","visibilitychange","state","visibilityState","togglePause","isGameOver","_tools__WEBPACK_IMPORTED_MODULE_6__","clearRow","map","clearedList","splice","unshift","Array","fill","keyup","keydown","e","code","doMove","touchStart","cx","my","_b","lp","lx","_c","rp","_d","dp","newInterval","reset","_e","goToBottom","movePlayboard","doTimeout","setInterval","p","couldGoDown","isRowNeedClear","couldCalculate","state_1","vibrate","c","result","j","renderPlayboard","react__WEBPACK_IMPORTED_MODULE_3__","className","key","cName","isMobile","h","scale","paddingTop","s","getDirectionBtn","direction","onTouchStart","handle","__extends","prototype","componentWillMount","componentWillUnmount","componentWillReceiveProps","nextProps","render","btnStyle","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","a","type","onClick","connect","component","mapStateToProps","common","contentHeight"],"mappings":"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","file":"js/15.b8a541aba1e22023e58d.bundle.js","sourcesContent":["export default {\n  keyCode: {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40,\n    space: 32\n  },\n  block: {\n    L: [\n      [\n        [0, 0, 1],\n        [1, 1, 1]\n      ], [\n        [1, 1],\n        [0, 1],\n        [0, 1]\n      ], [\n        [1, 1, 1],\n        [1, 0, 0]\n      ], [\n        [1, 0],\n        [1, 0],\n        [1, 1]\n      ]\n    ],\n    J: [\n      [\n        [1, 0, 0],\n        [1, 1, 1]\n      ], [\n        [1, 1],\n        [1, 0],\n        [1, 0]\n      ], [\n        [1, 1, 1],\n        [0, 0, 1]\n      ], [\n        [0, 1],\n        [0, 1],\n        [1, 1]\n      ]\n    ],\n    O: [\n      [\n        [1, 1],\n        [1, 1]\n      ], [\n        [1, 1],\n        [1, 1]\n      ], [\n        [1, 1],\n        [1, 1]\n      ], [\n        [1, 1],\n        [1, 1]\n      ]\n    ],\n    T: [\n      [\n        [0, 1, 0],\n        [1, 1, 1]\n      ], [\n        [0, 1],\n        [1, 1],\n        [0, 1]\n      ], [\n        [1, 1, 1],\n        [0, 1, 0]\n      ], [\n        [1, 0],\n        [1, 1],\n        [1, 0]\n      ]\n    ],\n    Z: [\n      [\n        [1, 1, 0],\n        [0, 1, 1]\n      ], [\n        [0, 1],\n        [1, 1],\n        [1, 0]\n      ], [\n        [1, 1, 0],\n        [0, 1, 1]\n      ], [\n        [0, 1],\n        [1, 1],\n        [1, 0]\n      ]\n    ],\n    S: [\n      [\n        [0, 1, 1],\n        [1, 1, 0]\n      ], [\n        [1, 0],\n        [1, 1],\n        [0, 1]\n      ], [\n        [0, 1, 1],\n        [1, 1, 0]\n      ], [\n        [1, 0],\n        [1, 1],\n        [0, 1]\n      ]\n    ],\n    I: [\n      [\n        [1, 1, 1, 1]\n      ], [\n        [1], [1], [1], [1]\n      ], [\n        [1, 1, 1, 1]\n      ], [\n        [1], [1], [1], [1]\n      ]\n    ]\n  },\n  scores: [1, 3, 5, 10]\n}\n","import Utils from '@utils'\nimport Constant from './constant'\nconst { block: blockMap, keyCode } = Constant\n\nconst couldMoveLeftOrRight = ({ width, block, rx, y, playboard, length }) => {\n  const blockList: any[] = []\n  let couldMove = true\n  block.forEach((row, dy) => {\n    row.every((item, dx) => {\n      if (item) {\n        blockList.push({ x: dx, y: dy })\n      }\n      return true\n    })\n  })\n  blockList.every(item => {\n    const { x: ox, y: oy } = item\n    const nx = ox + rx\n    const ny = y + oy - length\n    if (ny >= 0 && ny < 20 && playboard[ny][nx]) {\n      couldMove = false\n    }\n    return couldMove\n  })\n  return couldMove\n}\n\nconst couldMoveFun = {\n  [keyCode.up]: ({ width, block, rx, y, playboard, length }) => {\n    let couldMove = true\n    block.every((row, dy) => {\n      row.every((_, dx) => {\n        const nx = dx + rx\n        const ny = y + dy - length\n        if (ny >= 0 && ny < 20 && playboard[ny][nx]) { couldMove = false }\n        return couldMove\n      })\n      return couldMove\n    })\n    return couldMove\n  },\n  [keyCode.down]: ({ width, block, rx, y, playboard, length }) => {\n    if (y === 21) { return false }\n    let couldMove = true\n    const bottomBlockList: any[] = []\n    for (let i = 0; i < width; i++) {\n      let l = block.length - 1\n      let next = true\n      while (l >= 0 && next) {\n        if (block[l][i]) {\n          bottomBlockList.push({ x: i, y: l })\n          next = false\n        }\n        l--\n      }\n    }\n    bottomBlockList.every(b => {\n      const { x: ox, y: oy } = b\n      const nx = ox + rx\n      const ny = y + oy - length\n      if (ny >= 0 && ny < 20 && playboard[ny][nx]) {\n        couldMove = false\n      }\n      return couldMove\n    })\n    return couldMove\n  },\n  [keyCode.left]: couldMoveLeftOrRight,\n  [keyCode.right]: couldMoveLeftOrRight\n}\n\nexport default {\n  getCurrPosition: ({ x, y, cBlock, screen, rotate, moveTo }) => {\n    const playboard = Utils.clone(screen)\n    const block: number[][] = blockMap[cBlock][rotate]\n    const width = block[0].length\n    const min = 0\n    const max = 10 - width\n    const center = Math.floor((10 - width) / 2)\n    let length = block.length\n    let index = y\n    let rx = center + x\n    if (rx < min) {\n      rx = min\n      x = -center\n    }\n    if (rx > max) {\n      rx = max\n      x = width % 2 === 1 ? center + 1 : center\n    }\n    const cm = couldMoveFun[moveTo]({ width, block, rx, y, playboard, length })\n\n    if (cm) {\n      while (index > 0 && length > 0) {\n        let curr = --index\n        const row = block[length - 1]\n        curr = curr > 20 ? 20 : curr\n        for (let i = 0; i < 10; i++) {\n          if (i < row.length) {\n            const b = playboard[curr][rx + i]\n            if (!b) {\n              playboard[curr][rx + i] = row[i]\n            }\n          }\n        }\n        length--\n      }\n    }\n\n    return { playboard, x, screen, couldMove: cm }\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar START_EVENT_NAME_MAP = {\n  transitionstart: {\n    transition: 'transitionstart',\n    WebkitTransition: 'webkitTransitionStart',\n    MozTransition: 'mozTransitionStart',\n    OTransition: 'oTransitionStart',\n    msTransition: 'MSTransitionStart'\n  },\n\n  animationstart: {\n    animation: 'animationstart',\n    WebkitAnimation: 'webkitAnimationStart',\n    MozAnimation: 'mozAnimationStart',\n    OAnimation: 'oAnimationStart',\n    msAnimation: 'MSAnimationStart'\n  }\n};\n\nvar END_EVENT_NAME_MAP = {\n  transitionend: {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'mozTransitionEnd',\n    OTransition: 'oTransitionEnd',\n    msTransition: 'MSTransitionEnd'\n  },\n\n  animationend: {\n    animation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n    MozAnimation: 'mozAnimationEnd',\n    OAnimation: 'oAnimationEnd',\n    msAnimation: 'MSAnimationEnd'\n  }\n};\n\nvar startEvents = [];\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  if (!('AnimationEvent' in window)) {\n    delete START_EVENT_NAME_MAP.animationstart.animation;\n    delete END_EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete START_EVENT_NAME_MAP.transitionstart.transition;\n    delete END_EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  function process(EVENT_NAME_MAP, events) {\n    for (var baseEventName in EVENT_NAME_MAP) {\n      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {\n        var baseEvents = EVENT_NAME_MAP[baseEventName];\n        for (var styleName in baseEvents) {\n          if (styleName in style) {\n            events.push(baseEvents[styleName]);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  process(START_EVENT_NAME_MAP, startEvents);\n  process(END_EVENT_NAME_MAP, endEvents);\n}\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  detectEvents();\n}\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar TransitionEvents = {\n  // Start events\n  startEvents: startEvents,\n\n  addStartEventListener: function addStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      addEventListener(node, startEvent, eventListener);\n    });\n  },\n  removeStartEventListener: function removeStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      removeEventListener(node, startEvent, eventListener);\n    });\n  },\n\n\n  // End events\n  endEvents: endEvents,\n\n  addEndEventListener: function addEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n  removeEndEventListener: function removeEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nexports['default'] = TransitionEvents;\nmodule.exports = exports['default'];","import Utils from '@utils'\nimport { Button } from 'antd'\nimport * as React from 'react'\nimport Constant from './constant'\nimport './index.less'\nimport Tools from './tools'\nconst { block: blockMap, keyCode, scores } = Constant\n\nconst blocks = Object.keys(blockMap)\n\ninterface IStates {\n  row: number,\n  column: number,\n  screen: number[][],\n  playboard: number[][],\n  cBlock: string,\n  interval?: number,\n  y: number,\n  x: number,\n  h: number,\n  rotate: number,\n  intervalTime: number,\n  couldMove: boolean,\n  pause: boolean,\n  gameover: boolean,\n  touchDown: boolean,\n  score: number,\n  pressed: boolean,\n  style: any,\n}\n\ninterface IProps {\n  isMobile: boolean,\n  h: number\n}\n\nclass Tetris extends React.Component<IProps, IStates> {\n\n  interval\n\n  btnInterval\n\n  transform = Utils.transform\n\n  componentWillMount () {\n    document.addEventListener('keyup', this.keyup)\n    document.addEventListener('keydown', this.keydown)\n    document.addEventListener('touchend', this.clearBtnInterval)\n    document.addEventListener('visibilitychange', this.visibilitychange)\n    this.resetGame()\n  }\n\n  componentWillUnmount () {\n    this.clearInterval()\n    this.clearBtnInterval()\n    document.removeEventListener('keyup', this.keyup)\n    document.removeEventListener('keydown', this.keydown)\n    document.removeEventListener('touchend', this.clearBtnInterval)\n    document.removeEventListener('visibilitychange', this.visibilitychange)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.setState({ style: this.getSize(nextProps) })\n  }\n\n  clearBtnInterval = () => {\n    if (this.btnInterval) { clearInterval(this.btnInterval) }\n  }\n\n  clearInterval = () => {\n    if (this.interval) { clearInterval(this.interval) }\n  }\n\n  resetGame = () => {\n    this.clearInterval()\n    const row = 20\n    const column = 10\n    const screen = this.calculateScreen({ row, column })\n    this.setState({\n      row, column, screen,\n      playboard: screen,\n      style: this.getSize(this.props),\n      cBlock: blocks[Utils.random(0, blocks.length)],\n      x: 0, y: 0, intervalTime: 800, score: 0, rotate: Utils.random(0, 4),\n      pause: false, gameover: false, touchDown: false, pressed: false\n    }, () => this.doMovePlayboard(true))\n  }\n\n  visibilitychange = () => {\n    if ((!this.state.pause && document.visibilityState === 'hidden')\n        || (this.state.pause && document.visibilityState !== 'hidden')) {\n      this.togglePause()\n    }\n  }\n\n  isGameOver = () => {\n    const { x, y, cBlock, screen, rotate } = this.state\n    const { couldMove } = Tools.getCurrPosition({ x, y: y + 1, cBlock, screen, rotate, moveTo: keyCode.down })\n    return !(couldMove || blockMap[cBlock][rotate].length < y - 1)\n  }\n\n  clearRow = playboard => {\n    const screen = Utils.clone(playboard).map(row => row.map(item => item ? 2 : 0))\n    const clearedList: number[] = []\n    playboard.forEach((row, i) => {\n      if (row.every(item => item)) {\n        screen.splice(i, 1)\n        screen.unshift(new Array(10).fill(0))\n        clearedList.push(i)\n      }\n    })\n    return { screen, clearedList }\n  }\n\n  keyup = () => {\n    this.clearBtnInterval()\n    this.setState({ pressed: false })\n  }\n\n  keydown = e => {\n    if (!this.state.pressed) {\n      const { keyCode: code } = e\n      if (code === keyCode.space) {\n        this.doMove(code)\n      } else {\n        this.touchStart(code)\n      }\n    }\n  }\n\n  doMove = code => {\n    const { x: cx, y: my, screen, cBlock, row, rotate, pause, gameover } = this.state\n    if (pause || gameover) { return }\n    let playboard = [[]]\n    let x = cx\n    switch (code) {\n      case keyCode.left:\n        x = cx - 1\n        const {\n          playboard: lp,\n          x: lx,\n          couldMove: lc\n        } = Tools.getCurrPosition({ x, y: my ? my : 20, cBlock, screen, rotate, moveTo: keyCode.left })\n        if (lc) {\n          x = lx\n          playboard = lp\n          this.setState({ playboard, x, pressed: true })\n        }\n        return\n      case keyCode.right:\n        x = cx + 1\n        const {\n          playboard: rp,\n          x: rx,\n          couldMove: rc\n        } = Tools.getCurrPosition({ x, y: my ? my : 20, cBlock, screen, rotate, moveTo: keyCode.right })\n        if (rc) {\n          x = rx\n          playboard = rp\n          this.setState({ playboard, x, pressed: true })\n        }\n        return\n      case keyCode.down:\n        if (my > row) { return }\n        const {\n          couldMove,\n          playboard: dp\n        } = Tools.getCurrPosition({ x, y: my + 1, cBlock, screen, rotate, moveTo: keyCode.down })\n        if (couldMove) {\n          this.newInterval()\n          this.setState({ playboard: dp, y: my + 1, pressed: true })\n        } else {\n          this.reset()\n        }\n        return\n      case keyCode.up:\n        let r = rotate\n        r = r >= 3 ? 0 : r + 1\n        const {\n          playboard: up,\n          couldMove: uc\n        } = Tools.getCurrPosition({ x: cx, y: my ? my : 20, cBlock, screen, rotate: r, moveTo: keyCode.up })\n        if (uc) {\n          playboard = up\n          this.setState({ playboard, rotate: r, pressed: true })\n        }\n        return\n      case keyCode.space:\n        this.goToBottom()\n        break\n      default:\n\n    }\n  }\n\n  newInterval = (next?) => {\n    this.clearInterval()\n    if (this.isGameOver()) {\n      this.setState({ gameover: true })\n    } else {\n      this.doMovePlayboard(next)\n    }\n  }\n\n  doMovePlayboard = (next?) => {\n    if (next) { this.movePlayboard(this.state) }\n    this.doTimeout()\n  }\n\n  doTimeout = () => {\n    this.interval = setInterval(() => {\n      this.movePlayboard(this.state)\n    }, this.state.intervalTime)\n  }\n\n  movePlayboard = ({ x, y }) => {\n    const { screen, cBlock, rotate } = this.state\n    const { playboard, couldMove } = Tools.getCurrPosition({ x, y: y + 1, cBlock, screen, rotate, moveTo: keyCode.down })\n    if (couldMove) {\n      this.setState({ playboard, y: y + 1 })\n    } else {\n      this.reset()\n    }\n  }\n\n  goToBottom = () => {\n    const { x, cBlock, rotate, screen, gameover, pause } = this.state\n    if (gameover || pause) { return }\n    let { y, playboard: p } = this.state\n    let couldGoDown = true\n    while (couldGoDown) {\n      const { couldMove, playboard } = Tools.getCurrPosition({ x, y: y + 1, cBlock, screen, rotate, moveTo: keyCode.down })\n      couldGoDown = couldMove\n      if (couldMove) {\n        y++\n        p = playboard\n      } else {\n        this.setState({ playboard: p, y, touchDown: true, pressed: true }, this.isRowNeedClear)\n      }\n    }\n    setTimeout(() => this.setState({ touchDown: false }), 100)\n  }\n\n  isRowNeedClear = (couldCalculate?) => {\n    this.clearInterval()\n    const { playboard, score } = this.state\n    const { screen, clearedList } = this.clearRow(playboard)\n    const { length } = clearedList\n    if (length) {\n      const state = couldCalculate ? { screen, score: score + scores[length - 1] } : { screen, score }\n      clearedList.forEach(index => playboard[index] = new Array(10).fill(3))\n      this.setState({ screen: playboard })\n      this.vibrate(100)\n      setTimeout(() => { this.setState(state, () => this.newInterval(true)) }, 300)\n    } else {\n      this.setState({ screen }, () => this.newInterval(true))\n    }\n  }\n\n  reset = () => {\n    this.vibrate(100)\n    this.setState({\n      cBlock: blocks[Utils.random(0, blocks.length)],\n      y: 0, x: 0, rotate: Utils.random(0, 4)\n    }, () => this.isRowNeedClear(true))\n  }\n\n  // state\n  // 0: empty, 1: block 2: full 3: cleared\n  calculateScreen = ({ row: r, column: c }) => {\n    const result: number[][] = []\n    for (let i = 0; i < r; i++) {\n      const row: number[] = []\n      for (let j = 0; j < c; j++) { row.push(0) }\n      result.push(row)\n    }\n    return result\n  }\n\n  renderPlayboard = () => this.state.playboard ? this.state.playboard.map((r, i) => (\n    <div className='row' key={i}>\n      { r.map((c, j) => {\n        let cName = ''\n        switch (c) {\n          case 1:\n            cName = 'block'\n            break\n          case 2:\n            cName = 'full'\n            break\n          case 3:\n            cName = 'cleared'\n            break\n        }\n        return <div key={j} className={`item ${cName}`}/>\n      }) }\n    </div>\n  )) : null\n\n  togglePause = () => {\n    const { pause } = this.state\n    if (!pause && this.interval) {\n      this.clearInterval()\n      this.clearBtnInterval()\n    } else {\n      this.newInterval()\n    }\n    this.setState({ pause: !pause })\n  }\n\n  touchStart = code => {\n    this.clearBtnInterval()\n    const interval = code === keyCode.down ? 50 : 100\n    this.doMove(code)\n    if (code !== keyCode.up) {\n      this.btnInterval = setInterval(() => this.doMove(code), interval)\n    }\n  }\n\n  getSize = props => {\n    if (!this.props.isMobile) { return {} }\n    const { h } = props\n    const scale = h / 960\n    const filling = h - 480\n    return {\n      paddingTop: (filling - 100) * .6,\n      [this.transform]: `scale(${scale + .3})`\n    }\n  }\n\n  vibrate = s => false && this.props.isMobile && navigator.vibrate ? navigator.vibrate(s) : null\n\n  getDirectionBtn = direction =>\n    <div onTouchStart={Utils.handle(direction === 'up' ? this.doMove : this.touchStart, keyCode[direction])} className={`anticon anticon-ts-app icon-${direction}-circle`}/>\n\n  render () {\n    const { isMobile } = this.props\n    const { pause, gameover, touchDown, score, style } = this.state\n    const btnStyle = { [this.transform]: style[this.transform] }\n    return (\n      <div className={`tetris-wrapper ${isMobile ? 'mobile' : ''}`}>\n        <div className='tetris-screen-wrapper' style={style}>\n          <div className='score'>{score}</div>\n          <div className={`tetris-screen ${touchDown ? 'touch-buttom' : ''}`}>\n            { this.renderPlayboard() }\n            {\n              gameover ? (\n                <div className='game-over'>\n                  <Button type='primary' onClick={this.resetGame}>Reset</Button>\n                </div>\n              ) : null\n            }\n          </div>\n        </div>\n        <div className='btn-wrapper'>\n          <div className='functional-btn' style={btnStyle}>\n            <div onTouchStart={this.togglePause} className={`anticon anticon-ts-app icon-${pause ? 'play' : 'pause'}`}/>\n            <div onTouchStart={this.goToBottom} className={`anticon anticon-ts-app icon-down`}/>\n          </div>\n          <div className='direction' style={btnStyle}>\n            { this.getDirectionBtn('up') }\n            <div className='middle'>\n              { this.getDirectionBtn('left') }\n              { this.getDirectionBtn('right') }\n            </div>\n            { this.getDirectionBtn('down') }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: Tetris,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile,\n    h: state.common.contentHeight\n  })\n})\n"],"sourceRoot":""}