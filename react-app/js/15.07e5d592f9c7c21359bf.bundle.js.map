{"version":3,"sources":["webpack:///./src/components/echarts.ts","webpack:///./src/pages/PieChart/index.tsx"],"names":["components_echarts","echarts_default","PieChart_PieChart","_super","PieChart","_this","apply","this","arguments","resize","myChart","setTimeout","__extends","prototype","componentWillMount","setState","loaded","componentDidMount","getOption","componentWillReceiveProps","componentWillUpdate","__webpack_require__","res","_a","sent","init","echarts","setOption","render","react","className","state","ref","dom","__webpack_exports__","utils","connect","component","mapStateToProps","contentHeight","common","contentWidth"],"mappings":"gwBAOeA,+BAAAC,EAAO,inDCQtBC,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAAC,KAAAC,YAAAD,YAqBEF,EAAAI,OAAS,WACHJ,EAAKK,SAAWC,WAAWN,EAAKK,QAAQD,OAAQ,MAwBxD,OA9CuBG,EAAAR,EAAAD,GAKrBC,EAAAS,UAAAC,mBAAA,WACEP,KAAKQ,SAAS,CAAEC,QAAQ,KAG1BZ,EAAAS,UAAAI,kBAAA,WACEV,KAAKW,aAGPd,EAAAS,UAAAM,0BAAA,WACEZ,KAAKE,UAGPL,EAAAS,UAAAO,oBAAA,WACEb,KAAKE,UAODL,EAAAS,UAAAK,UAAN,yGACc,SAAMG,EAAQ,oBAApBC,EAAMC,EAAAC,OACZjB,KAAKQ,SAAS,CAAEC,QAAQ,IACxBT,KAAKG,QAAUV,EAAQyB,KAAKlB,KAAKmB,SACjCnB,KAAKG,QAAQiB,UAAUL,GACvBf,KAAKE,mBAGPL,EAAAS,UAAAe,OAAA,eAAAvB,EAAAE,KACE,OACEsB,EAAA,qBAAKC,UAAU,qBAEbvB,KAAKwB,MAAMf,OACTa,EAAA,qBAAKG,IAAK,SAAAC,GAAO,OAAA5B,EAAKqB,QAAUO,GAAKH,UAAU,YAE/CD,EAAA,qBAAKC,UAAU,aAMzB1B,EA9CA,CAAuByB,EAAA,WAgDRK,EAAA,QAAAC,EAAA,EAAMC,QAAQ,CAC3BC,UAAWnC,EACXoC,gBAAiB,SAAAP,GAAS,OACxBQ,cAAeR,EAAMS,OAAOD,cAC5BE,aAAcV,EAAMS,OAAOC","file":"js/15.07e5d592f9c7c21359bf.bundle.js","sourcesContent":["// 部分加载 echarts\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/tooltip'\n\nexport default echarts\n","\nimport Utils from '@utils'\nimport Echarts from '@cpt/echarts'\nimport * as React from 'react'\nimport './index.less'\n\ninterface IProps {\n  contentHeight: number,\n  contentWidth: number\n}\n\ninterface IState {\n  loaded: boolean\n}\n\nclass PieChart extends React.Component<IProps, IState> {\n\n  echarts: HTMLDivElement | null\n  myChart: any\n\n  componentWillMount () {\n    this.setState({ loaded: false })\n  }\n\n  componentDidMount () {\n    this.getOption()\n  }\n\n  componentWillReceiveProps () {\n    this.resize()\n  }\n\n  componentWillUpdate () {\n    this.resize()\n  }\n\n  resize = () => {\n    if (this.myChart) { setTimeout(this.myChart.resize, 0) }\n  }\n\n  async getOption() {\n    const res = await require('./echarts.json')\n    this.setState({ loaded: true })\n    this.myChart = Echarts.init(this.echarts)\n    this.myChart.setOption(res)\n    this.resize()\n  }\n\n  render () {\n    return (\n      <div className='pie-chart-wrapper'>\n      {\n        this.state.loaded ? (\n          <div ref={dom => this.echarts = dom} className='echarts' />\n        ) : (\n          <div className='loader'/>\n        )\n      }\n      </div>\n    )\n  }\n}\n\nexport default Utils.connect({\n  component: PieChart,\n  mapStateToProps: state => ({\n    contentHeight: state.common.contentHeight,\n    contentWidth: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}