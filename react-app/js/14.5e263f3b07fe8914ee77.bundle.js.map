{"version":3,"sources":["webpack:///./node_modules/css-animation/lib/Event.js","webpack:///./node_modules/dom-to-image/src/dom-to-image.js","webpack:///./src/pages/MondrianArt/index.tsx"],"names":["Object","defineProperty","exports","value","START_EVENT_NAME_MAP","transitionstart","transition","WebkitTransition","MozTransition","OTransition","msTransition","animationstart","animation","WebkitAnimation","MozAnimation","OAnimation","msAnimation","END_EVENT_NAME_MAP","transitionend","animationend","startEvents","endEvents","addEventListener","node","eventName","eventListener","removeEventListener","window","document","style","createElement","process","EVENT_NAME_MAP","events","baseEventName","hasOwnProperty","baseEvents","styleName","push","detectEvents","TransitionEvents","addStartEventListener","length","forEach","startEvent","setTimeout","removeStartEventListener","addEndEventListener","endEvent","removeEndEventListener","module","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","atob","toDataURL","split","binaryArray","Uint8Array","i","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","head","appendChild","a","body","href","getAndEncode","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","open","send","imagePlaceholder","message","console","error","uid","index","Math","random","pow","toString","slice","delay","ms","arg","asArray","arrayLike","array","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","src","width","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","shouldProcess","nothingToInline","then","readUrls","urls","done","inline","filter","data","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","map","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","element","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","clone","cloneChildren","original","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","source","target","name","copyProperties","className","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","children","cloneChildrenInOrder","parent","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","keys","property","XMLSerializer","serializeToString","xhtml","foreignObject","svg","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode","useState","useRef","colorMap","getBoundary","v","res","connect","component","isMobile","h","w","btn","art","blocksKey","setBlocksKey","ref","key","Array","from","animationDelay","gridColumn","gridRow","generateBlocks","icon","onClick","current","base64","downloadImg","mapStateToProps","state","common","contentHeight","contentWidth"],"mappings":"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","file":"js/14.5e263f3b07fe8914ee77.bundle.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar START_EVENT_NAME_MAP = {\n  transitionstart: {\n    transition: 'transitionstart',\n    WebkitTransition: 'webkitTransitionStart',\n    MozTransition: 'mozTransitionStart',\n    OTransition: 'oTransitionStart',\n    msTransition: 'MSTransitionStart'\n  },\n\n  animationstart: {\n    animation: 'animationstart',\n    WebkitAnimation: 'webkitAnimationStart',\n    MozAnimation: 'mozAnimationStart',\n    OAnimation: 'oAnimationStart',\n    msAnimation: 'MSAnimationStart'\n  }\n};\n\nvar END_EVENT_NAME_MAP = {\n  transitionend: {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'mozTransitionEnd',\n    OTransition: 'oTransitionEnd',\n    msTransition: 'MSTransitionEnd'\n  },\n\n  animationend: {\n    animation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n    MozAnimation: 'mozAnimationEnd',\n    OAnimation: 'oAnimationEnd',\n    msAnimation: 'MSAnimationEnd'\n  }\n};\n\nvar startEvents = [];\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  if (!('AnimationEvent' in window)) {\n    delete START_EVENT_NAME_MAP.animationstart.animation;\n    delete END_EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete START_EVENT_NAME_MAP.transitionstart.transition;\n    delete END_EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  function process(EVENT_NAME_MAP, events) {\n    for (var baseEventName in EVENT_NAME_MAP) {\n      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {\n        var baseEvents = EVENT_NAME_MAP[baseEventName];\n        for (var styleName in baseEvents) {\n          if (styleName in style) {\n            events.push(baseEvents[styleName]);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  process(START_EVENT_NAME_MAP, startEvents);\n  process(END_EVENT_NAME_MAP, endEvents);\n}\n\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  detectEvents();\n}\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar TransitionEvents = {\n  // Start events\n  startEvents: startEvents,\n\n  addStartEventListener: function addStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      addEventListener(node, startEvent, eventListener);\n    });\n  },\n  removeStartEventListener: function removeStartEventListener(node, eventListener) {\n    if (startEvents.length === 0) {\n      return;\n    }\n    startEvents.forEach(function (startEvent) {\n      removeEventListener(node, startEvent, eventListener);\n    });\n  },\n\n\n  // End events\n  endEvents: endEvents,\n\n  addEndEventListener: function addEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n  removeEndEventListener: function removeEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nexports['default'] = TransitionEvents;\nmodule.exports = exports['default'];","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","import React from 'react'\nimport Utils from '@utils'\nimport domtoimage from 'dom-to-image'\nimport { Button } from 'antd'\nimport './index.less'\n\nconst { useState, useRef } = React\n\nconst colorMap = [\n  'rgb(248, 217, 45)',\n  'rgb(248, 217, 45)',\n  'rgb(242, 245, 241)',\n  'rgb(11, 84, 164)',\n  'rgb(214, 0, 20)',\n  'rgb(11, 84, 164)'\n]\n\nconst generateBlocks = isMobile =>\n  Array.from(Array(isMobile ? 20 : 50).keys()).map(i => (\n    <div\n      key={i}\n      className={`block-${i}`}\n      style={{\n        animationDelay: `${i * 0.05}s`,\n        gridColumn: `span ${Utils.random(1, isMobile ? 4 : 5)}`,\n        gridRow: `span ${Utils.random(1, isMobile ? 4 : 5)}`,\n        backgroundColor: colorMap[Utils.random(0, 5)]\n      }}\n    />\n  ))\n\nconst getBoundary = v => {\n  let res = 10\n  while (v - res > 120) {\n    res += 60\n  }\n  return res\n}\n\nconst MondrianArt = ({ isMobile, h, w }) => {\n  const height = isMobile ? 430 : getBoundary(h)\n  const width = isMobile ? 250 : getBoundary(w)\n  const btn = isMobile ? 'mobile' : 'pc'\n\n  const art = useRef(null)\n  const [blocksKey, setBlocksKey] = useState(1)\n\n  const refresh = () => {\n    setBlocksKey(blocksKey ? 0 : 1)\n  }\n\n  const toPicture = () => {\n    domtoimage.toPng(art.current).then(base64 => {\n      Utils.downloadImg(base64, 'MondrianArt')\n    })\n  }\n\n  return (\n    <div className=\"mondrian-wrapper\">\n      <div className=\"mondrian-inner-wrapper\" ref={art}>\n        <div key={blocksKey} className=\"mondrian-art\" style={{ height, width }}>\n          {generateBlocks(isMobile)}\n        </div>\n      </div>\n      <Button\n        className={`download-btn ${btn}`}\n        icon=\"download\"\n        type=\"primary\"\n        onClick={toPicture}\n      />\n      <Button\n        className={`refresh-btn ${btn}`}\n        icon=\"redo\"\n        type=\"primary\"\n        onClick={refresh}\n      />\n    </div>\n  )\n}\n\nexport default Utils.connect({\n  component: MondrianArt,\n  mapStateToProps: state => ({\n    isMobile: state.common.isMobile,\n    h: state.common.contentHeight,\n    w: state.common.contentWidth\n  })\n})\n"],"sourceRoot":""}