{"version":3,"sources":["webpack:///./src/pages/2048/tools.tsx","webpack:///./src/constant/common.ts","webpack:///./src/pages/2048/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","getValue","x","y","p","res","v","index","some","i","same","moveRight","changed","max","curr","occupied","_a","currV","currIndex","_b","nextV","nextIndex","merged","push","id","Math","random","moveLeft","min","moveDown","moveUp","keyCode","left","up","right","down","storage","_utils__WEBPACK_IMPORTED_MODULE_0__","Storage","_constant_common__WEBPACK_IMPORTED_MODULE_10__","Page2048","_super","_this","apply","this","arguments","reset","pieces","isArray","addRandom","set","setState","size","cached","removeMerged","f","state","filter","touchstart","e","changedTouches","pageX","pageY","touchmove","preventDefault","touchend","sx","sy","ex","ey","code","abs","doMove","keydown","_tools__WEBPACK_IMPORTED_MODULE_9__","dp","_c","lp","_d","rp","isReset","setTimeout","setStorage","doAddRandom","clone","item","length","get4or2","renderGrid","Array","fill","map","v1","react__WEBPACK_IMPORTED_MODULE_7__","className","key","v2","isGameOver","list","forEach","canMove","data","c","__extends","prototype","componentWillMount","get","document","addEventListener","componentDidMount","componentWillUnmount","removeEventListener","render","antd_lib_icon__WEBPACK_IMPORTED_MODULE_3___default","a","type","antd_lib_popconfirm__WEBPACK_IMPORTED_MODULE_5___default","title","onConfirm","handle","okText","cancelText","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"js/12.f1488fbfa379b35991a5.bundle.js","sourcesContent":["interface IPiece {\n  x: number,\n  y: number,\n  v: number,\n  merged?: boolean,\n  id: number\n}\n\nconst getValue = (x, y, p) => {\n  let res = { v: 0, index: -1 }\n  p.some((i, index) => {\n    const same = i.x === x && i.y === y\n    if (same) { res = { v: i.v, index } }\n    return same\n  })\n  return res\n}\n\nexport default {\n  moveRight: (p: IPiece[]) => {\n    let changed = false\n    for (let y = 0; y < 4; y++) {\n      let max = 3\n      for (let x = 2; x >= 0; x--) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === (x + 1) && i.y === y\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { max-- }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].x = max\n          changed = true\n          max--\n        }\n      }\n      for (let x = 2; x >= 0; x--) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x + 1, y, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].x = x + 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = x - 1; v >= 0; v--) {\n            const { index: i } = getValue(v, y, p)\n            if (i >= 0) { p[i].x = p[i].x < 3 ? p[i].x + 1 : p[i].x }\n          }\n          p.push({ x: x + 1, y, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveLeft: (p: IPiece[]) => {\n    let changed = false\n    for (let y = 0; y < 4; y++) {\n      let min = 0\n      for (let x = 1; x < 4; x++) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === (x - 1) && i.y === y\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { min++ }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].x = min\n          changed = true\n          min++\n        }\n      }\n      for (let x = 1; x < 4; x++) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x - 1, y, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].x = x - 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = x; v <= 3; v++) {\n            const { index: i } = getValue(v, y, p)\n            if (i >= 0) { p[i].x = p[i].x > 0 ? p[i].x - 1 : p[i].x }\n          }\n          p.push({ x: x - 1, y, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveDown: (p: IPiece[]) => {\n    let changed = false\n    for (let x = 0; x < 4; x++) {\n      let max = 3\n      for (let y = 2; y >= 0; y--) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === x && i.y === (y + 1)\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { max-- }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].y = max\n          changed = true\n          max--\n        }\n      }\n      for (let y = 2; y >= 0; y--) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x, y + 1, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].y = y + 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = y - 1; v >= 0; v--) {\n            const { index: i } = getValue(x, v, p)\n            if (i >= 0) { p[i].y = p[i].y < 3 ? p[i].y + 1 : p[i].y }\n          }\n          p.push({ x, y: y + 1, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveUp: (p: IPiece[]) => {\n    let changed = false\n    for (let x = 0; x < 4; x++) {\n      let min = 0\n      for (let y = 1; y < 4; y++) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === x && i.y === (y - 1)\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { min++ }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].y = min\n          changed = true\n          min++\n        }\n      }\n      for (let y = 1; y < 4; y++) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x, y - 1, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].y = y - 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = y; v <= 3; v++) {\n            const { index: i } = getValue(x, v, p)\n            if (i >= 0) { p[i].y = p[i].y > 0 ? p[i].y - 1 : p[i].y }\n          }\n          p.push({ x, y: y - 1, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  }\n}\n","export default {\n  keyCode: {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40\n  }\n}\n","import Utils from '@utils'\nimport { Button, Icon, Popconfirm } from 'antd'\nimport * as React from 'react'\nimport './index.less'\nimport Tools from './tools'\nimport common from '@constant/common'\nconst storage = new Utils.Storage('2048')\nconst { keyCode } = common\n\ninterface IPiece {\n  x: number,\n  y: number,\n  v: number,\n  id: number,\n  merged?: boolean\n}\n\ninterface IState {\n  size: number,\n  pieces: IPiece[],\n  cached: {\n    x: number,\n    y: number\n  }\n}\n\ninterface IProp {\n  isMobile: boolean\n}\n\nclass Page2048 extends React.Component<IProp, IState> {\n\n  componentWillMount () {\n    this.reset(storage.get('pieces'))\n    document.addEventListener('keydown', this.keydown)\n  }\n\n  reset = pieces => {\n    if (!Utils.isArray(pieces)) {\n      pieces = []\n      this.addRandom(pieces, true)\n      this.addRandom(pieces, true)\n      storage.set('pieces', null)\n    }\n    this.setState({\n      size: 4,\n      pieces,\n      cached: { x: 0, y: 0 }\n    })\n  }\n\n  componentDidMount () {\n    document.addEventListener('touchstart', this.touchstart)\n    document.addEventListener('touchmove', this.touchmove)\n    document.addEventListener('touchend', this.touchend)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.keydown)\n    document.removeEventListener('touchstart', this.touchstart)\n    document.removeEventListener('touchmove', this.touchmove)\n    document.removeEventListener('touchend', this.touchend)\n  }\n\n  removeMerged = f => {\n    const { pieces: p } = this.state\n    const pieces = p.filter(i => !i.merged)\n    this.setState({ pieces }, f)\n  }\n\n  touchstart = e => {\n    const { pageX, pageY } = e.changedTouches[0]\n    this.setState({ cached: { x: pageX, y: pageY } })\n  }\n\n  touchmove = e => e.preventDefault()\n\n  touchend = e => {\n    const { x: sx, y: sy } = this.state.cached\n    const { pageX : ex, pageY: ey } = e.changedTouches[0]\n    let code = 0\n    if (Math.abs(sx - ex) > Math.abs(sy - ey) && Math.abs(sx - ex) > 20) {\n      code = sx - ex > 0 ? keyCode.left : keyCode.right\n    } else if (Math.abs(sx - ex) < Math.abs(sy - ey) && Math.abs(sy - ey) > 20) {\n      code = sy - ey > 0 ? keyCode.up : keyCode.down\n    } else {\n      return\n    }\n    this.doMove(code)\n  }\n\n  keydown = e => this.doMove(e.keyCode)\n\n  doMove = code => {\n    this.removeMerged(() => {\n      const { pieces } = this.state\n      let p: IPiece[] = pieces\n      switch (code) {\n        case keyCode.up:\n          const { p: up, changed: uc } = Tools.moveUp(pieces)\n          if (uc) { p = this.addRandom(up) }\n          break\n        case keyCode.down:\n          const { p: dp, changed: dc } = Tools.moveDown(pieces)\n          if (dc) { p = this.addRandom(dp) }\n          break\n        case keyCode.left:\n          const { p: lp, changed: lc } = Tools.moveLeft(pieces)\n          if (lc) { p = this.addRandom(lp) }\n          break\n        case keyCode.right:\n          const { p: rp, changed: rc } = Tools.moveRight(pieces)\n          if (rc) { p = this.addRandom(rp) }\n          break\n      }\n      this.setState({ pieces: p })\n    })\n  }\n\n  addRandom = (p, isReset?) => {\n    if (!isReset) { setTimeout(() => this.setStorage(p), 0) }\n    const i = this.doAddRandom(p)\n    if (i) { p.push(i) }\n    return p\n  }\n\n  setStorage = p => {\n    storage.set('pieces', Utils.clone(p).filter((item, i) => {\n      item.id = i\n      return !item.merged\n    }))\n  }\n\n  doAddRandom = p => {\n    if (p.length === 16) { return null }\n    const x = Utils.random(0, 4)\n    const y = Utils.random(0, 4)\n    return p.some(i => i.x === x && i.y === y)\n      ? this.doAddRandom(p)\n      : { x, y, v: this.get4or2(), id: Math.random() }\n  }\n\n  get4or2 = () => Math.random() > .9 ? 4 : 2\n\n  renderGrid = () => new Array(this.state.size).fill(null).map((v1, x) => (\n    <div className='row' key={x}>\n      {\n        new Array(this.state.size).fill(null).map((v2, y) => (\n          <div className='item' key={y}/>\n        ))\n      }\n    </div>\n  ))\n\n  isGameOver = pieces => {\n    const { size } = this.state\n    if (pieces.filter(p => !p.merged).length !== size * size) {\n      return false\n    }\n\n    const list: number[][] = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0]\n    ]\n\n    pieces.forEach(({ x, y, v }) => list[x][y] = v)\n\n    return this.canMove(list)\n  }\n\n  canMove = data => {\n    for (let r = 0; r < data.length; r++) {\n      for (let c = 0; c < data[r].length; c++) {\n        if (data[r][c] === 0) {\n          return false\n        } else if (c < data[r].length - 1\n          && data[r][c] === data[r][c + 1]) {\n          return false\n        } else if (r < data.length - 1\n          && data[r][c] === data[r + 1][c]) {\n          return false\n        }\n      }\n    }\n    return true\n  }\n\n  render () {\n    const { pieces } = this.state\n    return (\n      <div className='game2048-wrapper'>\n        <div className='game2048-container' >\n          <div className='grid'>\n            { this.renderGrid() }\n          </div>\n          <div className='piece-contanier'>\n            {\n              (pieces || []).map(item => (\n                <div className={`piece piece-${item.v} piece-position-${item.x}-${item.y} ${item.merged ? 'merged' : ''}`} key={item.id} >\n                  <div className='item'>\n                    {\n                      item.v === 2048\n                        ? <Icon type='ts-app icon-batman' />\n                        : item.v\n                    }\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n          <div className={this.isGameOver(pieces) ? 'mask' : 'mask hidden'}>\n            Game Over\n          </div>\n        </div>\n        <div className='btn-container'>\n          <Popconfirm title='Sure about that?' onConfirm={Utils.handle(this.reset)} okText='Yes' cancelText='No'>\n            <Button type='primary' className='reset-btn'>\n              Reset\n            </Button>\n          </Popconfirm>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Page2048\n"],"sourceRoot":""}