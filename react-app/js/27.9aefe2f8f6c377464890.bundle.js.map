{"version":3,"sources":["webpack:///./node_modules/flubber/build/flubber.min.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3/index.js"],"names":["t","n","an","indexOf","r","i","a","this","index","path","max","length","result","param","err","segmentStart","data","o","charCodeAt","s","e","h","u","parseFloat","slice","toLowerCase","push","concat","rn","splice","c","f","queue","cache","l","Math","sqrt","acos","p","g","v","x","y","d","m","M","w","b","L","A","q","k","P","ln","tan","cos","sin","rx","ry","ax","on","segments","__stack","getArcLength","_","getPoint","getDerivative","init","abs","pow","log","qn","Array","Ln","An","E","C","Z","Pn","forEach","bn","getTotalLength","partialLengths","curves","T","x0","x1","y0","y1","F","z","I","map","V","H","X","isFinite","Y","G","nn","O","yn","D","toString","split","trim","filter","join","Q","ring","U","TypeError","Cn","window","document","createElementNS","setAttributeNS","Sn","B","ceil","getPointAtLength","skipBisect","R","W","en","J","isArray","every","K","j","pop","tn","reverse","$","tt","Tn","nt","et","next","steiner","xt","sort","ct","ft","rt","ut","it","Et","kt","Mt","Pt","mt","prev","vt","prevZ","nextZ","gt","pt","ot","at","st","ht","yt","wt","Lt","dt","qt","lt","bt","At","_t","St","id","bbox","properties","Ct","type","geometry","Vn","In","transform","arcs","geometries","coordinates","Tt","Zt","Yn","Yt","maxSegmentLength","string","single","Qn","Dt","match","t0","t1","Un","Ht","Rt","atan2","PI","Bt","Jt","Qt","$t","Wt","Kt","prototype","matrix","translate","scale","rotate","skewX","skewY","toArray","calc","sn","hn","un","cn","gn","atan","isDegenerate","vn","__matrix","iterate","__evaluateStack","replace","fn","round","toFixed","toUpperCase","rel","unarc","pn","unshort","dn","mn","Mn","wn","Number","unshift","Error","constructor","getTangentAtLength","getPropertiesAtLength","tangentX","tangentY","kn","S","_n","En","fraction","Zn","apply","zn","deviation","flatten","vertices","holes","dimensions","jn","Xn","features","start","end","Gn","On","LineString","MultiLineString","Polygon","MultiPolygon","Dn","NaN","Hn","Ft","left","right","objects","triangles","area","shift","RangeError","jt","zt","reduce","It","Xt","Vt","interpolate","separate","combine","interpolateAll","splitPathString","toPathString","fromCircle","toCircle","fromRect","toRect","Object","defineProperty","value","exports","ascending","bisector","compare","lo","hi","mid","ascendingBisect","array_array","src_merge","arrays","merged","array","noop","dispatch","arguments","Dispatch","parseTypenames","typenames","types","name","hasOwnProperty","get","set","callback","typename","copy","call","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","keyPrefix","bindIndex","group","enter","exit","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","attrFunction","attrFunctionNS","src_window","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","contains","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","remove_remove","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","on_parseTypenames","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","size","each","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","onenter","onupdate","onexit","append","merge","order","selection","groups0","groups1","m0","m1","min","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","attr","getAttributeNS","property","classed","text","html","create","insert","before","clone","deep","src_selection","src_select","nextId","Local","src_selectAll","DragEvent","target","subject","active","dx","dy","identifier","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","format","exec","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","hex","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","isNaN","deg2rad","rad2deg","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","hcl","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","v0","v1","v2","v3","t2","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","rgbSpline","spline","colors","rgbBasis","values","floor","src_number","reA","reB","source","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","one","string_zero","degrees","decompose_identity","translateX","translateY","scaleX","scaleY","decompose","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","taskHead","taskTail","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","stop","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","tick","duration","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","transition_interpolate","attrTweenNS","attrInterpolateNS","_value","attrTween","attrInterpolate","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","on_start","selection_Selection","style_styleRemove","styleTween","styleInterpolate","transition_id","Transition","_name","newId","selection_prototype","children","inherit","id0","id1","string00","string10","interpolate0","string0","string1","value1","styleNull","style_styleFunction","listener0","undefined","styleMaybeRemove","style_styleConstant","text_textFunction","text_textConstant","Promise","resolve","reject","cancel","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","x2","y2","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","arc","a0","a1","ccw","cw","da","rect","Map","map_map","object","has","clear","keys","entries","src_map","Set","proto","set_set","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","row","column","pad","width","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","parseRows","N","eof","eol","token","preformatBody","formatValue","formatRow","test","convert","customConverter","formatBody","formatRows","csv","csvParse","tsv","tsvParse","responseText","response","ok","status","statusText","src_text","input","fetch","then","dsvParse","parser","DOMParser","parseFromString","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","cover","xz","yz","visit","extent","find","radius","x3","y3","quads","d2","retainer","removeAll","root","visitAfter","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","formatTrim","out","formatRounded","formatTypes","%","toPrecision","d3_format_src_identity","prefixes","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","src_locale","adder","Adder","reset","adder_add","temp","valueOf","bv","av","math_epsilon","math_epsilon2","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","radians","math_cos","exp","math_sin","math_sign","noop_noop","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianCross","cartesianNormalizeInPlace","rotationIdentity","invert","clip_buffer","line","lines","point","lineStart","lineEnd","rejoin","pointEqual","Intersection","points","other","entry","compareIntersection","startInside","stream","clip","segment","p0","p1","rejoin_link","current","isSubject","polygonContains_sum","longitude","polygonContains","polygon","sinPhi","normal","angle","winding","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","clip_compareIntersection","sphere","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","direction","PathContext","context","_context","_radius","pointRadius","_line","_point","PathString","_string","string_circle","_circle","transformer","methods","TransformStream","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","equirectangularRaw","A1","A2","A3","A4","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi2","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","count_count","sum","hierarchy","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","copyData","height","count","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","dice","TreeNode","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","squarify","resquarify","_squarify","src_defaultSource","random","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","d3_scale_src_array_array","interval_t0","interval_t1","newInterval","floori","offseti","field","interval","d0","d1","offset","step","range","setTime","millisecond_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","minute_minute","getSeconds","getMinutes","hour_hour","getHours","day_day","setHours","setDate","getDate","getTimezoneOffset","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","src_utcYear","localDate","utcDate","UTC","newYear","src_defaultLocale_locale","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekNumberMonday","parseFullYear","parseYear","parseZone","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","src_colors","ramp","scheme","viridis_ramp","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_tau","Linear","areaStart","areaEnd","curve_linear","curveRadial","Radial","curve","_curve","radial","kr","d3_shape_src_noop","basis_point","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","RedBlackTree","RedBlackNode","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ay","connectEdge","fm","fb","lx","ly","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v00","v01","v11","v10","clipCells","edges","polygons","e1","_found","vx","vy","Transform","applyX","applyY","location","invertX","invertY","rescaleX","domain","rescaleY","__webpack_require__","__webpack_exports__"],"mappings":"+EAAsK,SAAAA,GAAkB,aAAa,SAAAC,EAAAD,GAAc,YAAAA,GAAA,KAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,KAAAA,GAAA,IAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,MAAA,MAAAE,GAAAC,QAAAH,IAAA,EAA2P,SAAAI,EAAAJ,GAAc,OAAAA,GAAA,IAAAA,GAAA,GAAoB,SAAAK,EAAAL,GAAc,OAAAA,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,GAAA,KAAAA,EAA4C,SAAAM,EAAAN,GAAcO,KAAAC,MAAA,EAAAD,KAAAE,KAAAT,EAAAO,KAAAG,IAAAV,EAAAW,OAAAJ,KAAAK,OAAA,GAAAL,KAAAM,MAAA,EAAAN,KAAAO,IAAA,GAAAP,KAAAQ,aAAA,EAAAR,KAAAS,KAAA,GAAoH,SAAAC,EAAAjB,GAAc,KAAKA,EAAAQ,MAAAR,EAAAU,KAAAT,EAAAD,EAAAS,KAAAS,WAAAlB,EAAAQ,SAA6CR,EAAAQ,QAAW,SAAAW,EAAAnB,GAAc,IAAAC,EAAAmB,EAAApB,EAAAQ,MAAAH,EAAAe,EAAAd,EAAAN,EAAAU,IAAAO,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAgD,GAAAjB,GAAAC,EAAAN,EAAAc,IAAA,iCAAAT,EAAA,SAAkE,SAAAJ,EAAAD,EAAAS,KAAAS,WAAAb,KAAA,KAAAJ,QAAAI,EAAAC,EAAAN,EAAAS,KAAAS,WAAAb,GAAA,GAAAD,EAAAH,IAAA,KAAAA,EAAA,CAA4K,QAAAA,EAAA,CAAW,GAAAgB,EAAA,KAAAhB,MAAAI,EAAAC,EAAAN,EAAAS,KAAAS,WAAAb,GAAA,EAAAY,GAAAZ,EAAAC,GAAAL,GAAAG,EAAAH,GAAA,YAAAD,EAAAc,IAAA,qEAAAM,EAAA,KAA2J,KAAKf,EAAAC,GAAAF,EAAAJ,EAAAS,KAAAS,WAAAb,KAA6BA,IAAAc,GAAA,EAAUlB,EAAAI,EAAAC,EAAAN,EAAAS,KAAAS,WAAAb,GAAA,EAA6B,QAAAJ,EAAA,CAAW,IAAAqB,GAAA,EAAAjB,IAAaD,EAAAJ,EAAAS,KAAAS,WAAAb,KAAwBA,IAAAgB,GAAA,EAAUpB,EAAAI,EAAAC,EAAAN,EAAAS,KAAAS,WAAAb,GAAA,EAA6B,SAAAJ,GAAA,KAAAA,EAAA,CAAoB,GAAAqB,IAAAH,IAAAE,EAAA,YAAArB,EAAAc,IAAA,2CAAAT,EAAA,KAAiF,SAAAJ,IAAAI,EAAAC,EAAAN,EAAAS,KAAAS,WAAAb,GAAA,SAAAJ,GAAAI,QAAAC,GAAAF,EAAAJ,EAAAS,KAAAS,WAAAb,KAAA,YAAAL,EAAAc,IAAA,2CAAAT,EAAA,KAA4J,KAAKA,EAAAC,GAAAF,EAAAJ,EAAAS,KAAAS,WAAAb,KAA6BA,IAAKL,EAAAQ,MAAAH,EAAAL,EAAAa,MAAAU,WAAAvB,EAAAS,KAAAe,MAAAJ,EAAAf,IAAA,OAA1xBL,EAAAc,IAAA,wDAAAT,EAAA,IAA40B,SAAAgB,EAAArB,GAAc,IAAAC,EAAAmB,EAAQnB,EAAAD,EAAAS,KAAAT,EAAAe,cAAAK,EAAAnB,EAAAwB,cAA2C,IAAArB,EAAAJ,EAAAgB,KAAa,SAAAI,GAAAhB,EAAAO,OAAA,IAAAX,EAAAY,OAAAc,KAAA,CAAAzB,EAAAG,EAAA,GAAAA,EAAA,KAAAA,IAAAoB,MAAA,GAAAJ,EAAA,IAAAnB,EAAA,MAAAA,EAAA,eAAAmB,EAAApB,EAAAY,OAAAc,KAAA,CAAAzB,GAAA0B,OAAAvB,SAAiI,KAAUA,EAAAO,QAAAiB,GAAAR,KAAApB,EAAAY,OAAAc,KAAA,CAAAzB,GAAA0B,OAAAvB,EAAAyB,OAAA,EAAAD,GAAAR,MAAAQ,GAAAR,OAAyE,SAAAE,EAAAtB,GAAc,IAAAI,EAAAE,EAAAgB,EAAAQ,EAAA9B,EAAAU,IAAoB,GAAAV,EAAAe,aAAAf,EAAAQ,MAAvsD,SAAAR,GAAc,UAAAA,GAAa,0GAA0G,SAAkkDoB,CAAApB,EAAAS,KAAAS,WAAAlB,EAAAQ,QAAgJ,GAAAF,EAAAsB,GAAA5B,EAAAS,KAAAT,EAAAQ,OAAAiB,eAAAzB,EAAAQ,QAAAS,EAAAjB,KAAAgB,KAAA,GAAAV,EAAA,CAAoF,IAAAF,GAAA,IAAU,CAAE,IAAAkB,EAAAhB,EAAQgB,EAAA,EAAIA,IAAA,CAAK,GAAAH,EAAAnB,KAAAc,IAAAH,OAAA,OAA4BX,EAAAgB,KAAAU,KAAA1B,EAAAa,OAAAI,EAAAjB,GAAAI,GAAA,EAAAJ,EAAAQ,MAAAsB,GAAA,KAAA9B,EAAAS,KAAAS,WAAAlB,EAAAQ,SAAAR,EAAAQ,QAAAS,EAAAjB,GAAAI,GAAA,GAAiG,IAAAA,EAAA,CAAO,GAAAJ,EAAAQ,OAAAR,EAAAU,IAAA,MAAwB,IAAAL,EAAAL,EAAAS,KAAAS,WAAAlB,EAAAQ,QAAA,OAAyCa,EAAArB,QAAtTqB,EAAArB,QAAhJA,EAAAc,IAAA,wBAAAd,EAAAS,KAAAT,EAAAQ,OAAA,YAAAR,EAAAQ,MAAA,IAA2c,SAAAsB,EAAA9B,EAAAC,GAAgB,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAA0I,SAAA+B,IAAa,KAAAxB,gBAAAwB,GAAA,WAAAA,EAAqCxB,KAAAyB,MAAA,GAAAzB,KAAA0B,MAAA,KAA8B,SAAAC,EAAAlC,EAAAC,EAAAmB,EAAAhB,GAAoB,IAAAC,EAAAL,EAAAI,EAAAH,EAAAmB,EAAA,OAAAd,EAAA6B,KAAAC,KAAApC,IAAAC,KAAAgB,EAAAkB,KAAAC,KAAApC,IAAAC,KAAAkB,EAAAnB,EAAAoB,EAAAnB,EAAAG,EAAAiB,EAAAF,GAAAb,EAAAW,GAAmF,OAAAI,EAAA,IAAAA,EAAA,GAAAA,GAAA,IAAAA,GAAA,GAAAhB,EAAA8B,KAAAE,KAAAhB,GAA8C,SAAAiB,EAAAtC,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,EAAAC,GAAgC,IAAAQ,EAAAR,GAAAtB,EAAAoB,GAAA,EAAAC,GAAApB,EAAAG,GAAA,EAAA2B,GAAAV,GAAArB,EAAAoB,GAAA,EAAAE,GAAArB,EAAAG,GAAA,EAAAkC,EAAArB,IAAAsB,EAAApB,IAAAqB,EAAAV,IAAAW,EAAAV,IAAAW,EAAAJ,EAAAC,EAAAD,EAAAG,EAAAF,EAAAC,EAAuFE,EAAA,IAAAA,EAAA,GAAAA,GAAAJ,EAAAG,EAAAF,EAAAC,EAAkD,IAAAG,GAAlDD,EAAAP,KAAAC,KAAAM,IAAArC,IAAAC,GAAA,MAAkDW,EAAAE,EAAAY,EAAAa,EAAAF,GAAAvB,EAAAF,EAAAa,EAAAe,EAAAvB,EAAAqB,EAAAtB,EAAAuB,GAAA5C,EAAAoB,GAAA,EAAA0B,EAAAzB,EAAAsB,EAAArB,EAAAsB,GAAA3C,EAAAG,GAAA,EAAA2C,GAAAjB,EAAAa,GAAA1B,EAAA+B,GAAAjB,EAAAa,GAAAzB,EAAA8B,IAAAnB,EAAAa,GAAA1B,EAAAiC,IAAAnB,EAAAa,GAAAzB,EAAAgC,EAAAjB,EAAA,IAAAa,EAAAC,GAAAI,EAAAlB,EAAAa,EAAAC,EAAAC,EAAAC,GAAiI,WAAA5C,GAAA8C,EAAA,IAAAA,GAAAC,IAAA,IAAA/C,GAAA8C,EAAA,IAAAA,GAAAC,IAAA,CAAAR,EAAAC,EAAAK,EAAAC,GAAyD,SAAAb,EAAAvC,EAAAC,GAAgB,IAAAmB,EAAA,IAAAe,KAAAmB,IAAArD,EAAA,GAAAG,EAAA+B,KAAAoB,IAAAvD,GAAAK,EAAA8B,KAAAqB,IAAAxD,GAAAM,EAAA6B,KAAAoB,IAAAvD,EAAAC,GAAAgB,EAAAkB,KAAAqB,IAAAxD,EAAAC,GAAoF,OAAAG,EAAAC,EAAAD,EAAAC,EAAAe,EAAAf,EAAAD,EAAAgB,EAAAd,EAAAW,EAAAG,EAAAH,EAAAX,EAAAc,EAAAd,EAAAW,GAAwC,SAAAuB,EAAAxC,EAAAC,EAAAmB,GAAkB,KAAAb,gBAAAiC,GAAA,WAAAA,EAAAxC,EAAAC,EAAAmB,GAA4Cb,KAAAkD,GAAAzD,EAAAO,KAAAmD,GAAAzD,EAAAM,KAAAoD,GAAAvC,EAA8B,SAAAqB,EAAAzC,GAAc,KAAAO,gBAAAkC,GAAA,WAAAA,EAAAzC,GAAwC,IAAAC,EAAA2D,GAAA5D,GAAYO,KAAAsD,SAAA5D,EAAA4D,SAAAtD,KAAAO,IAAAb,EAAAa,IAAAP,KAAAuD,QAAA,GAAkH,SAAAnB,EAAA3C,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,GAA4BZ,KAAAD,EAAA,CAAQmC,EAAAzC,EAAA0C,EAAAzC,GAAQM,KAAAwC,EAAA,CAASN,EAAArB,EAAAsB,EAAAtC,GAAQG,KAAAuB,EAAA,CAASW,EAAApC,EAAAqC,EAAApC,GAAQC,KAAAoC,EAAA,CAASF,EAAAxB,EAAAyB,EAAAvB,GAAQ,MAAAF,GAAA,MAAAE,GAAAZ,KAAAwD,aAAAC,EAAAzD,KAAA0D,SAAAjB,EAAAzC,KAAA2D,cAAArB,IAAAtC,KAAAwD,aAAAd,EAAA1C,KAAA0D,SAAAlB,EAAAxC,KAAA2D,cAAAtB,GAAArC,KAAA4D,OAA8K,SAAAvB,EAAA5C,EAAAC,EAAAmB,GAAkB,OAAOqB,EAAA,KAAArB,IAAApB,EAAA,GAAAA,EAAA,MAAAoB,GAAApB,EAAA,GAAAA,EAAA,IAAA0C,EAAA,KAAAtB,IAAAnB,EAAA,GAAAA,EAAA,MAAAmB,GAAAnB,EAAA,GAAAA,EAAA,KAA6E,SAAA4C,EAAA7C,EAAAC,EAAAmB,GAAkB,OAAA2B,EAAA,IAAA/C,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,SAAAC,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,KAAAmB,GAAoG,SAAA0B,EAAA9C,EAAAC,EAAAmB,EAAAhB,EAAAC,GAAsB,QAAAC,EAAA,EAAAW,EAAAjB,EAAAC,EAAAkB,GAAAnB,EAAAoB,EAAAhB,EAAAC,EAAAY,IAAAhB,EAAmCK,EAAA,MAAO,CAAE,IAAAe,EAAAD,EAAAhB,EAAAC,EAAAY,EAAAE,GAAAG,EAAAF,EAAAhB,EAAAC,EAAAY,EAAAE,GAAAW,EAAAK,KAAAiC,IAAApE,EAAAqB,GAAApB,EAAA8B,EAAAI,KAAAiC,IAAApE,EAAAsB,GAAArB,EAAkE6B,EAAAxB,KAAAwB,EAAAb,GAAAE,GAAAY,EAAAzB,KAAAyB,EAAAd,GAAAE,MAAA,EAAmC,OAAAF,EAAS,SAAA8B,EAAA/C,EAAAC,EAAAmB,GAAkB,OAAOqB,GAAA,EAAArB,IAAA,EAAAA,GAAApB,EAAA,QAAAoB,KAAApB,EAAA,GAAAoB,IAAApB,EAAA,GAAA0C,GAAA,EAAAtB,IAAA,EAAAA,GAAAnB,EAAA,QAAAmB,KAAAnB,EAAA,GAAAmB,IAAAnB,EAAA,IAAuF,SAAA+C,EAAAhD,EAAAC,EAAAmB,GAAkB,OAAOqB,GAAA,EAAArB,IAAA,EAAAA,IAAA,EAAAA,GAAApB,EAAA,QAAAoB,IAAA,EAAAA,KAAApB,EAAA,QAAAoB,OAAApB,EAAA,GAAAoB,MAAApB,EAAA,GAAA0C,GAAA,EAAAtB,IAAA,EAAAA,IAAA,EAAAA,GAAAnB,EAAA,QAAAmB,IAAA,EAAAA,KAAAnB,EAAA,QAAAmB,OAAAnB,EAAA,GAAAmB,MAAAnB,EAAA,IAAqJ,SAAAgD,EAAAjD,EAAAC,EAAAmB,QAAkB,IAAAA,MAAA,GAAkB,IAAAhB,EAAAJ,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAK,EAAAJ,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAK,EAAA,EAAAN,EAAA,KAAAA,EAAA,GAAAiB,EAAA,EAAAhB,EAAA,KAAAA,EAAA,GAAAkB,EAAA,GAAAf,IAAAC,KAAAgB,EAAA,GAAAjB,EAAAE,EAAAD,EAAAY,GAAAK,EAAAhB,IAAAW,IAAgH,OAAAE,EAAA,OAAAC,EAAAe,KAAAC,KAAAD,KAAAkC,IAAArE,EAAA,GAAAA,EAAA,MAAAmC,KAAAkC,IAAApE,EAAA,GAAAA,EAAA,OAAyE,IAAA6B,EAAAT,GAAA,EAAAF,GAAAY,EAAAT,EAAAH,EAAAe,EAAAd,EAAAU,EAAAQ,EAAAP,EAAAD,IAAkC,OAAAK,KAAAC,KAAAjB,GAAA,GAAAe,EAAAC,KAAAC,KAAAF,IAAAI,GAAAR,EAAAK,KAAAC,KAAAN,IAAAQ,KAAAH,KAAAmC,IAAAnC,KAAAiC,KAAAlC,EAAAC,KAAAC,KAAAF,IAAAI,KAAAR,EAAAK,KAAAC,KAAAN,IAAAQ,OAA8H,SAAAY,EAAAlD,EAAAC,GAAgB,OAAAsE,GAAAvE,GAAAC,GAAgB,SAAAkD,EAAAnD,EAAAC,EAAAmB,GAAkB,IAAAhB,EAAAC,EAAAC,EAAAW,EAAAG,EAAAT,OAAA,EAAuB,OAAAM,EAAA,SAAkB,OAAAjB,EAAA,CAAU,IAAAK,EAAA,EAAAC,EAAA,EAAYA,GAAAW,EAAKX,IAAAD,GAAA6C,EAAAjC,EAAAX,GAAA6B,KAAAkC,IAAA,EAAApE,EAAAgB,EAAAX,GAAA6B,KAAAkC,IAAApE,EAAAK,GAAAc,EAAAd,GAAmD,OAAAD,EAAS,IAAAD,EAAA,IAAAoE,MAAAvD,GAAAX,EAAA,EAAuBA,EAAAW,EAAIX,IAAAF,EAAAE,GAAAW,GAAAG,EAAAd,EAAA,GAAAc,EAAAd,IAAyB,OAAA6C,EAAAnD,EAAA,EAAAC,EAAAG,GAAkB,SAAAgD,EAAApD,EAAAC,EAAAmB,GAAkB,IAAAhB,EAAA+C,EAAA,EAAA/B,EAAApB,GAAAK,EAAA8C,EAAA,EAAA/B,EAAAnB,GAAAK,EAAAF,IAAAC,IAAoC,OAAA8B,KAAAC,KAAA9B,GAAoB,SAAA0D,EAAAhE,EAAAC,EAAAmB,GAAkB,IAAAhB,EAAAC,EAAAC,EAAAW,EAA8B,SAAlB,IAAAG,MAAA,GAAkBhB,EAAAgB,EAAA,EAAAf,EAAA,EAAAC,EAAA,EAAkBA,EAAA,GAAKA,IAAAW,EAAAb,EAAAqE,GAAA,IAAAnE,GAAAF,EAAAC,GAAAqE,GAAA,IAAApE,GAAA8C,EAAApD,EAAAC,EAAAgB,GAA0C,OAAAb,EAAAC,EAAW,SAAAsE,EAAA3E,EAAAC,EAAAmB,EAAAhB,GAAoB,IAAAC,EAAAL,EAAAI,EAAAH,EAAAmB,EAAA,OAAAd,EAAAN,EAAAoB,EAAAnB,EAAAG,EAA+B,OAAAE,EAAA,IAAAA,EAAA,GAAAA,GAAA,IAAAA,GAAA,GAAAD,EAAA8B,KAAAE,KAAA/B,GAAiZ,SAAAsE,EAAA5E,EAAAC,GAAgB,IAAAmB,EAAA,IAAAe,KAAAmB,IAAArD,EAAA,GAAAG,EAAA+B,KAAAoB,IAAAvD,GAAAK,EAAA8B,KAAAqB,IAAAxD,GAAAM,EAAA6B,KAAAoB,IAAAvD,EAAAC,GAAAgB,EAAAkB,KAAAqB,IAAAxD,EAAAC,GAAoF,OAAAG,EAAAC,EAAAD,EAAAC,EAAAe,EAAAf,EAAAD,EAAAgB,EAAAd,EAAAW,EAAAG,EAAAH,EAAAX,EAAAc,EAAAd,EAAAW,GAAwC,SAAA4D,EAAA7E,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,GAA8B,IAAAC,EAAA,EAAAQ,EAAA,GAAAC,EAAA,GAAkB+C,GAAA9E,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,GAAA0D,QAAA,SAAA/E,GAA0C,IAAAC,EAAA,IAAA+E,GAAAhF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAoB,EAAAnB,EAAAgF,iBAA2E3D,GAAAF,EAAAU,EAAAJ,KAAAN,GAAAW,EAAAL,KAAAzB,KAAyBM,KAAAI,OAAAW,EAAAf,KAAA2E,eAAApD,EAAAvB,KAAA4E,OAAApD,EAAoD,SAAAqD,EAAApF,EAAAC,EAAAmB,EAAAhB,GAAoBG,KAAA8E,GAAArF,EAAAO,KAAA+E,GAAArF,EAAAM,KAAAgF,GAAAnE,EAAAb,KAAAiF,GAAApF,EAAwC,SAAAqF,EAAAzF,EAAAC,GAAgB,OAAAkC,KAAAC,MAAApC,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAkE,SAAAyF,EAAA1F,EAAAC,EAAAmB,GAAkB,OAAApB,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAoB,EAAApB,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAoB,GAAiF,SAAAuE,EAAA3F,EAAAC,EAAAmB,GAAkB,IAAAhB,EAAAJ,EAAA4F,IAAA,SAAA5F,EAAAoB,GAA0B,OAA6F,SAAApB,EAAAC,GAAgB,gBAAAmB,GAAmB,OAAApB,EAAA4F,IAAA,SAAA5F,EAAAI,GAA2B,OAAAJ,EAAAoB,GAAAnB,EAAAG,GAAAJ,MAA3J6F,CAAA7F,EAAAC,EAAAmB,MAAmB,gBAAApB,GAAmB,IAAAC,EAAAG,EAAAwF,IAAA,SAAA3F,GAAwB,OAAAA,EAAAD,KAAc,OAAAoB,EAAA0E,EAAA7F,MAAsG,SAAA8F,EAAA/F,GAAc,uBAAAA,GAAAgG,SAAAhG,GAAsC,SAAAiG,EAAAjG,GAAc,OAA8E,SAAAA,GAAc,QAAAC,EAAA,EAAYA,EAAAD,EAAAW,OAAA,EAAaV,IAAA,CAAK,IAAAmB,EAAApB,EAAAC,GAAAG,EAAAJ,EAAAC,EAAA,GAAAI,EAAAL,EAAAC,EAAA,GAA6B,GAAAmB,EAAA,IAAAhB,EAAA,GAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAAAe,EAAA,IAAAf,EAAA,IAAAe,EAAA,GAAAhB,EAAA,aAA+D,SAAtN8F,CAAAlG,GAAAmG,GAAAnG,GAAA,EAAAA,EAAA,MAAAA,IAAAW,OAAA,UAAAX,EAAA,MAAAA,IAAAW,OAAA,UAA+N,SAAAyF,EAAApG,GAAc,WAAAqG,GAAArG,GAAAoE,MAAuB,SAAAkC,EAAAtG,GAAc,OAAAA,EAAAuG,WAAAC,MAAA,KAAAZ,IAAA,SAAA5F,EAAAC,GAAiD,OAAAD,IAAAyG,OAAAxG,GAAAD,EAAA,IAAAA,MAA+B0G,OAAA,SAAA1G,GAAqB,OAAAA,IAAW,SAAA8F,EAAA9F,GAAc,UAAAA,EAAA2G,KAAA,SAAuD,SAAAC,EAAA5G,EAAAC,GAAgB,IAAAmB,EAAAgF,EAAApG,GAAW,OAAoB,SAAAA,GAAc,IAAAC,EAAAD,EAAA6D,UAAA,GAAAzC,EAAA,GAA0B,IAAAnB,EAAAU,QAAA,MAAAV,EAAA,eAAqC,QAAAG,EAAA,EAAYA,EAAAH,EAAAU,OAAWP,IAAA,CAAK,IAAAC,EAAAJ,EAAAG,GAAAE,EAAAD,EAAA,GAAAY,EAAAZ,EAAA,GAAAc,EAAAd,EAAA,GAAgC,SAAAC,GAAAF,GAAA,MAAAE,EAAA,MAA6B,SAAAA,GAAA,MAAAA,EAAAc,EAAAM,KAAA,CAAAT,EAAAE,SAAkC,SAAAb,EAAAc,EAAAM,KAAA,CAAAT,EAAAG,IAAAT,OAAA,YAA6C,CAAK,SAAAL,EAAA,SAAoBc,EAAAM,KAAA,CAAAN,IAAAT,OAAA,MAAAM,KAA8B,QAAAG,EAAAT,QAAA,CAAmBkG,KAAAzF,GAAnV0F,CAAA1F,IAA2V,SAAApB,EAAAC,GAAgB,IAAAmB,EAAAhB,EAAAC,EAAAiG,EAAAtG,GAAA,GAAAM,EAAA,GAAAW,EAAA,EAA2B,IAAAZ,EAAA,UAAA0G,UAAAC,IAA8B5G,EAA6K,SAAAJ,GAAc,uBAAAiH,uBAAAC,SAAA,IAA2D,IAAAjH,EAAAgH,OAAAC,SAAAC,gBAAA,qCAA2E,OAAAlH,EAAAmH,eAAA,SAAApH,GAAAC,EAAsC,MAAAD,IAAU,OAAAqH,GAAArH,GAAjXsH,CAAAjH,GAAAe,EAAAhB,EAAA6E,iBAAAhF,GAAA8F,EAAA9F,MAAA,IAAAgB,EAAAkB,KAAAzB,IAAAO,EAAAkB,KAAAoF,KAAAnG,EAAAnB,KAAyE,QAAAkB,EAAA,EAAYA,EAAAF,EAAIE,IAAA,CAAK,IAAAE,EAAAjB,EAAAoH,iBAAApG,EAAAD,EAAAF,GAAgCX,EAAAoB,KAAA,CAAAL,EAAAoB,EAAApB,EAAAqB,IAAkB,OAAOmE,KAAAvG,EAAAmH,YAAA,GAA3jBC,CAAAtG,EAAAnB,GAAkyB,SAAA0H,EAAA3H,EAAAC,GAAgB,QAAAmB,EAAApB,EAAAW,OAAAV,EAAAG,EAAAwH,GAAA5H,GAAAC,EAAAI,EAAA,EAAAC,EAAA,EAAAW,EAAAb,EAAA,EAA6CJ,EAAAW,OAAAS,GAAW,CAAE,IAAAD,EAAAnB,EAAAK,GAAAgB,EAAArB,GAAAK,EAAA,GAAAL,EAAAW,QAAAW,EAAAmE,EAAAtE,EAAAE,GAAwCJ,GAAAX,EAAAgB,GAAAtB,EAAA6B,OAAAxB,EAAA,IAAAiB,EAAAoE,EAAAvE,EAAAE,GAAAJ,EAAAX,GAAAgB,GAAAH,EAAAK,MAAA,IAAAP,GAAAb,IAAAE,GAAAgB,EAAAjB,MAAyN,SAAAwH,EAAA7H,EAAAC,GAAgB,IAAAmB,EAAAf,EAAU,oBAAAL,EAAA,CAAuB,IAAAM,EAAAsG,EAAA5G,EAAAC,GAAaD,EAAAM,EAAAuG,KAAAxG,EAAAC,EAAAmH,gBAAwB,IAAAjD,MAAAsD,QAAA9H,GAAA,UAAA+G,UAAAC,IAAkD,IAAoJ,SAAAhH,GAAc,OAAAA,EAAA+H,MAAA,SAAA/H,GAA2B,OAAAwE,MAAAsD,QAAA9H,MAAAW,QAAA,GAAAoF,EAAA/F,EAAA,KAAA+F,EAAA/F,EAAA,MAA7LgI,CAAA5G,EAAApB,EAAAwB,MAAA,cAAAuF,UAAAC,IAA8C,OAAA5F,EAAAT,OAAA,GAAxkE,SAAAX,EAAAC,GAAgB,OAAAwF,EAAAzF,EAAAC,GAAA,KAAwjEgI,CAAA7G,EAAA,GAAAA,IAAAT,OAAA,KAAAS,EAAA8G,MAAAC,GAAA/G,GAAA,GAAAA,EAAAgH,WAAA/H,GAAAJ,GAAA8F,EAAA9F,MAAA,GAAzU,SAAAD,EAAAC,QAAgB,IAAAA,MAAA,KAAoB,QAAAmB,EAAA,EAAYA,EAAApB,EAAAW,OAAWS,IAAA,QAAAhB,EAAAJ,EAAAoB,GAAAf,EAAAe,IAAApB,EAAAW,OAAA,EAAAX,EAAA,GAAAA,EAAAoB,EAAA,GAAgDqE,EAAArF,EAAAC,GAAAJ,GAASI,EAAAqF,EAAAtF,EAAAC,EAAA,IAAAL,EAAA6B,OAAAT,EAAA,IAAAf,GAAqNgI,CAAAjH,EAAAnB,GAAAmB,EAAwM,SAAAkH,EAAAtI,EAAAC,EAAAmB,GAAmB,IAAAhB,EAAM,OAAAA,EAAAJ,EAAAW,OAAAV,EAAAU,OAAAgH,EAAA3H,EAAAI,EAAA,KAAAA,EAAA,GAAAuH,EAAA1H,EAAAG,EAAA,EAAAA,EAAA,GAAAmI,GAAAvI,EAAAC,GAAA0F,EAAA3F,EAAAC,EAAAmB,GAAyE,SAAAoH,EAAAxI,EAAAC,EAAAmB,GAAmBA,KAAA,EAAO,IAA2ED,EAAAE,EAAAC,EAAAQ,EAAAC,EAAAG,EAAAI,EAA3ElC,EAAAH,KAAAU,OAAAN,EAAAD,EAAAH,EAAA,GAAAmB,EAAApB,EAAAW,OAAAL,EAAAmI,EAAAzI,EAAA,EAAAK,EAAAe,GAAA,GAAAH,EAAA,GAA4D,IAAAX,EAAA,OAAAW,EAAiC,GAAAb,IAAAE,EAAo+D,SAAAN,EAAAC,EAAAmB,EAAAhB,GAAqB,IAAAC,EAAAC,EAAAW,EAAAE,EAAAE,EAAAC,EAAA,GAAmB,IAAAjB,EAAA,EAAAC,EAAAL,EAAAU,OAAmBN,EAAAC,EAAID,IAAAY,EAAAhB,EAAAI,GAAAD,EAAAe,EAAAd,EAAAC,EAAA,EAAAL,EAAAI,EAAA,GAAAD,EAAAJ,EAAAW,QAAAU,EAAAoH,EAAAzI,EAAAiB,EAAAE,EAAAf,GAAA,MAAAiB,EAAAqH,OAAArH,EAAAsH,SAAA,GAAArH,EAAAI,KAAAkH,GAAAvH,IAAiG,IAAAC,EAAAuH,KAAAC,GAAAzI,EAAA,EAAmBA,EAAAiB,EAAAX,OAAWN,IAAA0I,EAAAzH,EAAAjB,GAAAe,KAAA4H,EAAA5H,IAAAsH,MAA8B,OAAAtH,EAAhsE6H,CAAAjJ,EAAAC,EAAAK,EAAAc,IAAApB,EAAAW,OAAA,GAAAS,EAAA,CAAqCD,EAAAG,EAAAtB,EAAA,GAAAqB,EAAAS,EAAA9B,EAAA,GAAkB,QAAAuC,EAAAnB,EAAYmB,EAAAlC,EAAIkC,GAAAnB,EAAAW,EAAA/B,EAAAuC,GAAAL,EAAAlC,EAAAuC,EAAA,GAAAR,EAAAZ,MAAAY,GAAAG,EAAAb,MAAAa,GAAAH,EAAAT,MAAAS,GAAAG,EAAAJ,MAAAI,GAAiEI,EAAAH,KAAAzB,IAAAY,EAAAH,EAAAW,EAAAT,GAAoB,OAAA6H,EAAA5I,EAAAW,EAAAG,EAAAD,EAAAE,EAAAiB,GAAArB,EAAyB,SAAAwH,EAAAzI,EAAAC,EAAAmB,EAAAhB,EAAAC,GAAuB,IAAAC,EAAAW,EAAQ,GAAAZ,IAAA8I,GAAAnJ,EAAAC,EAAAmB,EAAAhB,GAAA,MAAAE,EAAAL,EAA6BK,EAAAc,EAAId,GAAAF,EAAAa,EAAAmI,GAAA9I,EAAAN,EAAAM,GAAAN,EAAAM,EAAA,GAAAW,QAA2B,IAAAX,EAAAc,EAAAhB,EAAeE,GAAAL,EAAKK,GAAAF,EAAAa,EAAAmI,GAAA9I,EAAAN,EAAAM,GAAAN,EAAAM,EAAA,GAAAW,GAA2B,OAAAA,GAAAoI,GAAApI,IAAAyH,QAAAY,GAAArI,OAAAyH,MAAAzH,EAA2C,SAAA+H,EAAAhJ,EAAAC,GAAiB,IAAAD,EAAA,OAAAA,EAAeC,MAAAD,GAAS,IAAAoB,EAAAhB,EAAAJ,EAAU,GAAG,GAAAoB,GAAA,EAAAhB,EAAAuI,UAAAU,GAAAjJ,IAAAsI,OAAA,IAAAa,GAAAnJ,EAAAoJ,KAAApJ,IAAAsI,MAAAtI,IAAAsI,SAAmE,CAAK,GAAAY,GAAAlJ,MAAAH,EAAAG,EAAAoJ,QAAApJ,EAAAsI,KAAA,YAA2CtH,GAAA,SAAMA,GAAAhB,IAAAH,GAAgB,OAAAA,EAAS,SAAAiJ,EAAAlJ,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,GAA2B,GAAAjB,EAAA,EAAMiB,GAAAX,GAA2qE,SAAAN,EAAAC,EAAAmB,EAAAhB,GAAqB,IAAAC,EAAAL,EAAQ,GAAG,OAAAK,EAAAqF,IAAArF,EAAAqF,EAAA+D,EAAApJ,EAAAoC,EAAApC,EAAAqC,EAAAzC,EAAAmB,EAAAhB,IAAAC,EAAAqJ,MAAArJ,EAAAmJ,KAAAnJ,EAAAsJ,MAAAtJ,EAAAqI,KAAArI,IAAAqI,WAA2ErI,IAAAL,GAAaK,EAAAqJ,MAAAC,MAAA,KAAAtJ,EAAAqJ,MAAA,KAAsC,SAAA1J,GAAe,IAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,EAAAC,EAAA,EAAwB,GAAG,IAAAF,EAAApB,IAAA,KAAAM,EAAA,KAAAW,EAAA,EAA0BG,GAAE,CAAE,IAAAH,IAAAb,EAAAgB,EAAAD,EAAA,EAAAlB,EAAA,EAAoBA,EAAAqB,IAAAH,IAAAf,IAAAuJ,OAAqB1J,KAAK,IAAAoB,EAAAC,EAAQH,EAAA,GAAAE,EAAA,GAAAjB,GAAY,IAAAe,GAAAd,EAAAD,MAAAuJ,MAAAtI,KAAA,IAAAA,GAAAjB,EAAAgB,EAAAsE,GAAAtF,EAAAsF,GAAArF,EAAAe,MAAAuI,MAAAxI,MAAAd,EAAAD,MAAAuJ,MAAAtI,MAAAhB,EAAAe,MAAAuI,MAAAxI,KAAAb,IAAAqJ,MAAAtJ,EAAAL,EAAAK,IAAAqJ,MAAApJ,IAAAD,EAAuIe,EAAAhB,EAAIE,EAAAqJ,MAAA,KAAArI,GAAA,QAAkBL,EAAA,GAA7U2I,CAAAvJ,GAAnyEwJ,CAAA7J,EAAAI,EAAAC,EAAAC,GAAmB,QAAAa,EAAAE,EAAAC,EAAAtB,EAAgBA,EAAAwJ,OAAAxJ,EAAA0I,MAAgB,GAAAvH,EAAAnB,EAAAwJ,KAAAnI,EAAArB,EAAA0I,KAAApI,EAAAwJ,EAAA9J,EAAAI,EAAAC,EAAAC,GAAAyJ,EAAA/J,GAAAC,EAAAyB,KAAAP,EAAAd,EAAAe,GAAAnB,EAAAyB,KAAA1B,EAAAK,EAAAe,GAAAnB,EAAAyB,KAAAL,EAAAhB,EAAAe,GAAAkI,GAAAtJ,KAAAqB,EAAAqH,KAAApH,EAAAD,EAAAqH,UAA4G,IAAA1I,EAAAqB,KAAAC,EAAA,CAAmBL,EAAA,IAAAA,EAAAiI,EAAAlJ,EAAAgK,EAAAhK,EAAAC,EAAAmB,GAAAnB,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAA,OAAAW,GAAAgJ,EAAAjK,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,GAAA4I,EAAAF,EAAAhJ,GAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAA,GAAqF,QAAQ,SAAAyJ,EAAA/J,GAAe,IAAAC,EAAAD,EAAAwJ,KAAApI,EAAApB,EAAAI,EAAAJ,EAAA0I,KAA0B,GAAAa,GAAAtJ,EAAAmB,EAAAhB,IAAA,WAAyB,QAAAC,EAAAL,EAAA0I,UAAsBrI,IAAAL,EAAAwJ,MAAW,CAAE,GAAAU,GAAAjK,EAAAwC,EAAAxC,EAAAyC,EAAAtB,EAAAqB,EAAArB,EAAAsB,EAAAtC,EAAAqC,EAAArC,EAAAsC,EAAArC,EAAAoC,EAAApC,EAAAqC,IAAA6G,GAAAlJ,EAAAmJ,KAAAnJ,IAAAqI,OAAA,WAAwErI,IAAAqI,KAAS,SAAS,SAAAoB,EAAA9J,EAAAC,EAAAmB,EAAAhB,GAAqB,IAAAC,EAAAL,EAAAwJ,KAAAlJ,EAAAN,EAAAiB,EAAAjB,EAAA0I,KAA0B,GAAAa,GAAAlJ,EAAAC,EAAAW,IAAA,WAAyB,QAAAE,EAAAd,EAAAoC,EAAAnC,EAAAmC,EAAApC,EAAAoC,EAAAxB,EAAAwB,EAAApC,EAAAoC,EAAAxB,EAAAwB,EAAAnC,EAAAmC,EAAAxB,EAAAwB,EAAAnC,EAAAmC,EAAAxB,EAAAwB,EAAApB,EAAAhB,EAAAqC,EAAApC,EAAAoC,EAAArC,EAAAqC,EAAAzB,EAAAyB,EAAArC,EAAAqC,EAAAzB,EAAAyB,EAAApC,EAAAoC,EAAAzB,EAAAyB,EAAApC,EAAAoC,EAAAzB,EAAAyB,EAAApB,EAAAjB,EAAAoC,EAAAnC,EAAAmC,EAAApC,EAAAoC,EAAAxB,EAAAwB,EAAApC,EAAAoC,EAAAxB,EAAAwB,EAAAnC,EAAAmC,EAAAxB,EAAAwB,EAAAnC,EAAAmC,EAAAxB,EAAAwB,EAAAX,EAAAzB,EAAAqC,EAAApC,EAAAoC,EAAArC,EAAAqC,EAAAzB,EAAAyB,EAAArC,EAAAqC,EAAAzB,EAAAyB,EAAApC,EAAAoC,EAAAzB,EAAAyB,EAAApC,EAAAoC,EAAAzB,EAAAyB,EAAAX,EAAA0H,EAAAtI,EAAAE,EAAApB,EAAAmB,EAAAhB,GAAA8B,EAAAuH,EAAAnI,EAAAQ,EAAA7B,EAAAmB,EAAAhB,GAAAkC,EAAAtC,EAAA2J,MAA0NrH,KAAAoD,GAAAxD,GAAU,CAAE,GAAAI,IAAAtC,EAAAwJ,MAAAlH,IAAAtC,EAAA0I,MAAAwB,GAAA7J,EAAAoC,EAAApC,EAAAqC,EAAApC,EAAAmC,EAAAnC,EAAAoC,EAAAzB,EAAAwB,EAAAxB,EAAAyB,EAAAJ,EAAAG,EAAAH,EAAAI,IAAA6G,GAAAjH,EAAAkH,KAAAlH,IAAAoG,OAAA,WAAgGpG,IAAAqH,MAAU,IAAArH,EAAAtC,EAAA0J,MAAcpH,KAAAoD,GAAA3D,GAAU,CAAE,GAAAO,IAAAtC,EAAAwJ,MAAAlH,IAAAtC,EAAA0I,MAAAwB,GAAA7J,EAAAoC,EAAApC,EAAAqC,EAAApC,EAAAmC,EAAAnC,EAAAoC,EAAAzB,EAAAwB,EAAAxB,EAAAyB,EAAAJ,EAAAG,EAAAH,EAAAI,IAAA6G,GAAAjH,EAAAkH,KAAAlH,IAAAoG,OAAA,WAAgGpG,IAAAoH,MAAU,SAAS,SAAAM,EAAAhK,EAAAC,EAAAmB,GAAmB,IAAAhB,EAAAJ,EAAQ,GAAG,IAAAK,EAAAD,EAAAoJ,KAAAlJ,EAAAF,EAAAsI,WAA2BW,GAAAhJ,EAAAC,IAAA6J,GAAA9J,EAAAD,IAAAsI,KAAApI,IAAA8J,GAAA/J,EAAAC,IAAA8J,GAAA9J,EAAAD,KAAAJ,EAAAyB,KAAArB,IAAAe,GAAAnB,EAAAyB,KAAAtB,EAAAC,EAAAe,GAAAnB,EAAAyB,KAAApB,EAAAD,EAAAe,GAAAkI,GAAAlJ,GAAAkJ,GAAAlJ,EAAAsI,MAAAtI,EAAAJ,EAAAM,GAAAF,IAAAsI,WAA0HtI,IAAAJ,GAAa,OAAAI,EAAS,SAAA6J,EAAAjK,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,GAAyB,IAAAW,EAAAjB,EAAQ,GAAG,QAAAmB,EAAAF,EAAAyH,UAAsBvH,IAAAF,EAAAuI,MAAW,CAAE,GAAAvI,EAAAZ,IAAAc,EAAAd,GAAAgK,GAAApJ,EAAAE,GAAA,CAAuB,IAAAE,EAAAiJ,GAAArJ,EAAAE,GAAc,OAAAF,EAAA+H,EAAA/H,IAAAyH,MAAArH,EAAA2H,EAAA3H,IAAAqH,MAAAQ,EAAAjI,EAAAhB,EAAAmB,EAAAhB,EAAAC,EAAAC,QAAA4I,EAAA7H,EAAApB,EAAAmB,EAAAhB,EAAAC,EAAAC,GAA0Ea,IAAAuH,KAASzH,IAAAyH,WAASzH,IAAAjB,GAAkP,SAAA8I,EAAA9I,EAAAC,GAAiB,OAAAD,EAAAyC,EAAAxC,EAAAwC,EAAe,SAAAsG,EAAA/I,EAAAC,GAAiB,GAAAA,EAA0C,SAAAD,EAAAC,GAAiB,IAAAmB,EAAAhB,EAAAH,EAAAI,EAAAL,EAAAyC,EAAAnC,EAAAN,EAAA0C,EAAAzB,GAAA,IAA6B,GAAG,GAAAX,GAAAF,EAAAsC,GAAApC,GAAAF,EAAAsI,KAAAhG,EAAA,CAAwB,IAAAvB,EAAAf,EAAAqC,GAAAnC,EAAAF,EAAAsC,IAAAtC,EAAAsI,KAAAjG,EAAArC,EAAAqC,IAAArC,EAAAsI,KAAAhG,EAAAtC,EAAAsC,GAAgD,GAAAvB,GAAAd,GAAAc,EAAAF,EAAA,CAAc,GAAAA,EAAAE,MAAAd,EAAA,CAAc,GAAAC,IAAAF,EAAAsC,EAAA,OAAAtC,EAAoB,GAAAE,IAAAF,EAAAsI,KAAAhG,EAAA,OAAAtC,EAAAsI,KAA8BtH,EAAAhB,EAAAqC,EAAArC,EAAAsI,KAAAjG,EAAArC,IAAAsI,MAAyBtI,IAAAsI,WAAStI,IAAAH,GAAa,IAAAmB,EAAA,YAAkB,GAAAf,IAAAY,EAAA,OAAAG,EAAAoI,KAAuB,IAAAnI,EAAAC,EAAAF,EAAAU,EAAAV,EAAAqB,EAAAV,EAAAX,EAAAsB,EAAAR,EAAA,IAA4B,IAAA9B,EAAAgB,EAAAsH,KAAatI,IAAAkB,GAAMjB,GAAAD,EAAAqC,GAAArC,EAAAqC,GAAAX,GAAAoI,GAAA5J,EAAAyB,EAAA1B,EAAAY,EAAAX,EAAAwB,EAAAC,EAAAzB,EAAAyB,EAAAd,EAAAZ,EAAAC,EAAAF,EAAAqC,EAAArC,EAAAsC,MAAArB,EAAAc,KAAAiC,IAAA9D,EAAAF,EAAAsC,IAAArC,EAAAD,EAAAqC,IAAAP,GAAAb,IAAAa,GAAA9B,EAAAqC,EAAArB,EAAAqB,IAAA2H,GAAAhK,EAAAJ,KAAAoB,EAAAhB,EAAA8B,EAAAb,GAAAjB,IAAAsI,KAAmI,OAAAtH,EAA3fmJ,CAAAvK,EAAAC,GAAA,CAAc,IAAAmB,EAAAkJ,GAAArK,EAAAD,GAAcgJ,EAAA5H,IAAAsH,OAAi8B,SAAAe,EAAAzJ,EAAAC,EAAAmB,EAAAhB,EAAAC,GAAuB,OAAAL,EAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAAoB,GAAAf,GAAAL,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAAAC,EAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAAG,GAAAC,GAAAJ,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,OAAsN,SAAA2I,GAAA5I,GAAe,IAAAC,EAAAD,EAAAoB,EAAApB,EAAY,GAAGC,EAAAwC,EAAArB,EAAAqB,IAAArB,EAAAnB,OAAAyI,WAAwBzI,IAAAD,GAAa,OAAAoB,EAAS,SAAA8I,GAAAlK,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,GAA6B,OAAAd,EAAAY,IAAAhB,EAAAkB,IAAAnB,EAAAiB,IAAAX,EAAAa,IAAA,IAAAnB,EAAAiB,IAAAb,EAAAe,IAAAC,EAAAH,IAAAhB,EAAAkB,IAAA,IAAAC,EAAAH,IAAAX,EAAAa,IAAAd,EAAAY,IAAAb,EAAAe,IAAA,EAAyF,SAAAkJ,GAAArK,EAAAC,GAAiB,OAAAD,EAAA0I,KAAArI,IAAAJ,EAAAI,GAAAL,EAAAwJ,KAAAnJ,IAAAJ,EAAAI,IAA+S,SAAAL,EAAAC,GAAiB,IAAAmB,EAAApB,EAAQ,GAAG,GAAAoB,EAAAf,IAAAL,EAAAK,GAAAe,EAAAsH,KAAArI,IAAAL,EAAAK,GAAAe,EAAAf,IAAAJ,EAAAI,GAAAe,EAAAsH,KAAArI,IAAAJ,EAAAI,GAAA8J,GAAA/I,IAAAsH,KAAA1I,EAAAC,GAAA,SAAmFmB,IAAAsH,WAAStH,IAAApB,GAAa,SAApbwK,CAAAxK,EAAAC,IAAAmK,GAAApK,EAAAC,IAAAmK,GAAAnK,EAAAD,IAAmjB,SAAAA,EAAAC,GAAiB,IAAAmB,EAAApB,EAAAI,GAAA,EAAAC,GAAAL,EAAAyC,EAAAxC,EAAAwC,GAAA,EAAAnC,GAAAN,EAAA0C,EAAAzC,EAAAyC,GAAA,EAAyC,GAAGtB,EAAAsB,EAAApC,GAAAc,EAAAsH,KAAAhG,EAAApC,GAAAD,GAAAe,EAAAsH,KAAAjG,EAAArB,EAAAqB,IAAAnC,EAAAc,EAAAsB,IAAAtB,EAAAsH,KAAAhG,EAAAtB,EAAAsB,GAAAtB,EAAAqB,IAAArC,MAAAgB,IAAAsH,WAAgFtH,IAAApB,GAAa,OAAAI,EAA7sBqK,CAAAzK,EAAAC,GAA2E,SAAAsJ,GAAAvJ,EAAAC,EAAAmB,GAAmB,OAAAnB,EAAAyC,EAAA1C,EAAA0C,IAAAtB,EAAAqB,EAAAxC,EAAAwC,IAAAxC,EAAAwC,EAAAzC,EAAAyC,IAAArB,EAAAsB,EAAAzC,EAAAyC,GAA8C,SAAA2G,GAAArJ,EAAAC,GAAiB,OAAAD,EAAAyC,IAAAxC,EAAAwC,GAAAzC,EAAA0C,IAAAzC,EAAAyC,EAA4B,SAAAyH,GAAAnK,EAAAC,EAAAmB,EAAAhB,GAAqB,SAAAiJ,GAAArJ,EAAAC,IAAAoJ,GAAAjI,EAAAhB,IAAAiJ,GAAArJ,EAAAI,IAAAiJ,GAAAjI,EAAAnB,KAAAsJ,GAAAvJ,EAAAC,EAAAmB,GAAA,GAAAmI,GAAAvJ,EAAAC,EAAAG,GAAA,GAAAmJ,GAAAnI,EAAAhB,EAAAJ,GAAA,GAAAuJ,GAAAnI,EAAAhB,EAAAH,GAAA,EAA+O,SAAAmK,GAAApK,EAAAC,GAAiB,OAAAsJ,GAAAvJ,EAAAwJ,KAAAxJ,IAAA0I,MAAA,EAAAa,GAAAvJ,EAAAC,EAAAD,EAAA0I,OAAA,GAAAa,GAAAvJ,IAAAwJ,KAAAvJ,IAAA,EAAAsJ,GAAAvJ,EAAAC,EAAAD,EAAAwJ,MAAA,GAAAD,GAAAvJ,IAAA0I,KAAAzI,GAAA,EAAwQ,SAAAqK,GAAAtK,EAAAC,GAAiB,IAAAmB,EAAA,IAAAsJ,GAAA1K,EAAAK,EAAAL,EAAAyC,EAAAzC,EAAA0C,GAAAtC,EAAA,IAAAsK,GAAAzK,EAAAI,EAAAJ,EAAAwC,EAAAxC,EAAAyC,GAAArC,EAAAL,EAAA0I,KAAApI,EAAAL,EAAAuJ,KAAkE,OAAAxJ,EAAA0I,KAAAzI,IAAAuJ,KAAAxJ,EAAAoB,EAAAsH,KAAArI,IAAAmJ,KAAApI,EAAAhB,EAAAsI,KAAAtH,IAAAoI,KAAApJ,EAAAE,EAAAoI,KAAAtI,IAAAoJ,KAAAlJ,EAAAF,EAAiF,SAAAgJ,GAAApJ,EAAAC,EAAAmB,EAAAhB,GAAqB,IAAAC,EAAA,IAAAqK,GAAA1K,EAAAC,EAAAmB,GAAoB,OAAAhB,GAAAC,EAAAqI,KAAAtI,EAAAsI,KAAArI,EAAAmJ,KAAApJ,IAAAsI,KAAAc,KAAAnJ,EAAAD,EAAAsI,KAAArI,MAAAmJ,KAAAnJ,IAAAqI,KAAArI,KAA+E,SAAAiJ,GAAAtJ,GAAeA,EAAA0I,KAAAc,KAAAxJ,EAAAwJ,KAAAxJ,EAAAwJ,KAAAd,KAAA1I,EAAA0I,KAAA1I,EAAA0J,QAAA1J,EAAA0J,MAAAC,MAAA3J,EAAA2J,OAAA3J,EAAA2J,QAAA3J,EAAA2J,MAAAD,MAAA1J,EAAA0J,OAAwG,SAAAgB,GAAA1K,EAAAC,EAAAmB,GAAmBb,KAAAF,EAAAL,EAAAO,KAAAkC,EAAAxC,EAAAM,KAAAmC,EAAAtB,EAAAb,KAAAiJ,KAAA,KAAAjJ,KAAAmI,KAAA,KAAAnI,KAAAmF,EAAA,KAAAnF,KAAAmJ,MAAA,KAAAnJ,KAAAoJ,MAAA,KAAApJ,KAAAoI,SAAA,EAAqH,SAAAQ,GAAAnJ,EAAAC,EAAAmB,EAAAhB,GAAqB,QAAAC,EAAA,EAAAC,EAAAL,EAAAgB,EAAAG,EAAAhB,EAAsBE,EAAAc,EAAId,GAAAF,EAAAC,IAAAL,EAAAiB,GAAAjB,EAAAM,KAAAN,EAAAM,EAAA,GAAAN,EAAAiB,EAAA,IAAAA,EAAAX,EAAwC,OAAAD,EAAS,SAAAsK,GAAA3K,EAAAC,GAAiB,IAAAmB,EAAAnB,EAAA2K,GAAAxK,EAAAH,EAAA4K,KAAAxK,EAAA,MAAAJ,EAAA6K,WAAA,GAA2C7K,EAAA6K,WAAAxK,EAAAyK,GAAA/K,EAAAC,GAAwB,aAAAmB,GAAA,MAAAhB,EAAA,CAAyB4K,KAAA,UAAAF,WAAAzK,EAAA4K,SAAA3K,GAAuC,MAAAF,EAAA,CAAU4K,KAAA,UAAAJ,GAAAxJ,EAAA0J,WAAAzK,EAAA4K,SAAA3K,GAA4C,CAAE0K,KAAA,UAAAJ,GAAAxJ,EAAAyJ,KAAAzK,EAAA0K,WAAAzK,EAAA4K,SAAA3K,GAAoD,SAAAyK,GAAA/K,EAAAC,GAAiB,SAAAmB,EAAApB,EAAAC,GAAgBA,EAAAU,QAAAV,EAAAiI,MAAkB,QAAA9G,EAAAE,EAAAtB,EAAA,GAAAA,KAAAI,EAAA,EAAAC,EAAAe,EAAAT,OAAqCP,EAAAC,IAAID,EAAAH,EAAAyB,KAAAL,EAAAD,EAAAhB,OAAsBJ,EAAA,GAAAkL,GAAAjL,EAAAI,GAAa,SAAAD,EAAAJ,GAAc,OAAAqB,EAAArB,GAAY,SAAAK,EAAAL,GAAc,QAAAC,EAAA,GAAAG,EAAA,EAAAC,EAAAL,EAAAW,OAA4BP,EAAAC,IAAID,EAAAgB,EAAApB,EAAAI,GAAAH,GAAc,OAAAA,EAAAU,OAAA,GAAAV,EAAAyB,KAAAzB,EAAA,IAAAA,EAAkC,SAAAK,EAAAN,GAAc,QAAAC,EAAAI,EAAAL,GAAeC,EAAAU,OAAA,GAAWV,EAAAyB,KAAAzB,EAAA,IAAc,OAAAA,EAAS,SAAAgB,EAAAjB,GAAc,OAAAA,EAAA4F,IAAAtF,GAA0Z,IAAAe,EAAA8J,GAAAnL,EAAAoL,WAAA9J,EAAAtB,EAAAqL,KAA+B,OAAza,SAAAlK,EAAAnB,GAAc,IAAAC,EAAAmB,EAAApB,EAAAgL,KAAe,OAAA5J,GAAU,gCAAgC4J,KAAA5J,EAAAkK,WAAAtL,EAAAsL,WAAA1F,IAAAzE,IAAuC,YAAAlB,EAAAG,EAAAJ,EAAAuL,aAA+B,MAAM,iBAAAtL,EAAAD,EAAAuL,YAAA3F,IAAAxF,GAAwC,MAAM,iBAAAH,EAAAI,EAAAL,EAAAqL,MAA6B,MAAM,sBAAApL,EAAAD,EAAAqL,KAAAzF,IAAAvF,GAAsC,MAAM,cAAAJ,EAAAgB,EAAAjB,EAAAqL,MAA0B,MAAM,mBAAApL,EAAAD,EAAAqL,KAAAzF,IAAA3E,GAAmC,MAAM,oBAAoB,OAAO+J,KAAA5J,EAAAmK,YAAAtL,GAAqDkB,CAAAlB,GAA8H,SAAAuL,GAAAxL,EAAAC,GAAyK,SAAAG,EAAAJ,GAAcA,EAAA+E,QAAA,SAAA9E,GAAsBA,EAAA8E,QAAA,SAAA9E,IAAsBK,EAAAL,IAAA,GAAAA,OAAAK,EAAAL,GAAA,KAAAyB,KAAA1B,OAAqCiB,EAAAS,KAAA1B,GAAY,SAAAK,EAAAJ,GAAc,OAApZ,SAAAD,GAAe,QAAAC,EAAAmB,GAAA,EAAAhB,EAAAJ,EAAAW,OAAAN,EAAAL,EAAAI,EAAA,GAAAE,EAAA,IAAuCc,EAAAhB,GAAMH,EAAAI,IAAAL,EAAAoB,GAAAd,GAAAL,EAAA,GAAAI,EAAA,GAAAJ,EAAA,GAAAI,EAAA,GAAmC,OAAA8B,KAAAiC,IAAA9D,GAAqTmL,CAAAV,GAAA/K,EAAA,CAAgBgL,KAAA,UAAAK,KAAA,CAAApL,KAAwBsL,YAAA,IAAkB,IAAAjL,EAAA,GAAQW,EAAA,GAAAE,EAAA,GAAW,OAAAlB,EAAA8E,QAA9V,SAAA3D,EAAApB,GAAc,OAAAA,EAAAgL,MAAe,yBAAAhL,EAAAsL,WAAAvG,QAAA3D,GAAiD,MAAM,cAAAhB,EAAAJ,EAAAqL,MAAwB,MAAM,mBAAArL,EAAAqL,KAAAtG,QAAA3E,MAA4Oa,EAAA8D,QAAA,SAAA/E,GAA0C,IAAAA,EAAAgE,EAAA,CAAS,IAAA/D,EAAA,GAAAmB,EAAA,CAAApB,GAAe,IAAAA,EAAAgE,EAAA,EAAA7C,EAAAO,KAAAzB,GAAoBD,EAAAoB,EAAA8G,OAAUjI,EAAAyB,KAAA1B,KAAA+E,QAAA,SAAA/E,GAAiCA,EAAA+E,QAAA,SAAA/E,GAAsBM,EAAAN,EAAA,GAAAA,KAAA+E,QAAA,SAAA/E,GAAgCA,EAAAgE,IAAAhE,EAAAgE,EAAA,EAAA5C,EAAAM,KAAA1B,aAA8BiB,EAAA8D,QAAA,SAAA/E,UAAwBA,EAAAgE,IAAW,CAAGgH,KAAA,eAAAK,KAAAlK,EAAAyE,IAAA,SAAA3F,GAA2C,IAAAmB,EAAAhB,EAAA,GAAW,GAAAH,EAAA8E,QAAA,SAAA/E,GAAyBA,EAAA+E,QAAA,SAAA/E,GAAsBA,EAAA+E,QAAA,SAAA/E,GAAsBM,EAAAN,EAAA,GAAAA,KAAAW,OAAA,GAAAP,EAAAsB,KAAA1B,SAAoCI,EAAAsL,GAAA1L,EAAAI,IAAAgB,EAAAhB,EAAAO,QAAA,UAAAM,EAAAE,EAAAE,EAAA,EAAAC,EAAAjB,EAAAD,EAAA,IAAqDiB,EAAAD,IAAIC,GAAAJ,EAAAZ,EAAAD,EAAAiB,KAAAC,IAAAH,EAAAf,EAAA,GAAAA,EAAA,GAAAA,EAAAiB,GAAAjB,EAAAiB,GAAAF,EAAAG,EAAAL,GAAiD,OAAAb,KAAmjD,SAAAuL,GAAA3L,EAAAC,EAAAmB,QAAmB,IAAAA,MAAA,IAAmB,IAAAhB,EAAAgB,EAAAwK,sBAAyB,IAAAxL,MAAA,IAAmB,IAAAC,EAAAe,EAAAyK,YAAe,IAAAxL,OAAA,GAAmB,IAAAC,EAAAc,EAAA0K,YAAe,IAAAxL,OAAA,GAAmB,IAAAW,EAAA4G,EAAA7H,EAAAI,GAAaa,EAAAN,OAAAV,EAAAU,OAAA,GAAAgH,EAAA1G,EAAAhB,EAAAU,OAAA,EAAAM,EAAAN,QAA8C,IAAAQ,EAAAE,EAAA0K,GAAA9K,EAAAhB,EAAAU,QAAAW,EAAArB,EAAA2F,IAAA,SAAA5F,GAA2C,OAAA6H,EAAA7H,EAAAI,KAAc0B,EAAA,iBAAA9B,KAA0B,OAAAM,IAAAL,EAAA8H,MAAA,SAAA/H,GAA+B,uBAAAA,MAAyBmB,EAAAlB,EAAAuB,MAAA,IAAAwK,GAAA3K,EAAAC,EAAA,CAA0B2K,OAAA,EAAAJ,OAAAxL,EAAAyL,OAAAxL,EAAA4L,GAAApK,EAAAqK,GAAAhL,IAAi1B,SAAA6K,GAAAhM,EAAAC,EAAAmB,QAAmB,IAAAA,MAAA,IAAmB,IAAAhB,EAAAgB,EAAAyK,OAAAxL,EAAAe,EAAA0K,OAAAxL,EAAAc,EAAA8K,GAAAjL,EAAAG,EAAA+K,GAAAhL,EAAAC,EAAA6K,MAAA5K,EAAAF,EAAAiL,GAAApM,EAAAC,GAAAD,EAAA4F,IAAA,SAAA5F,EAAAC,GAAkF,OAAAA,IAASqB,EAAAD,EAAAuE,IAAA,SAAAxE,EAAAf,GAAwB,OAAAiI,EAAAtI,EAAAoB,GAAAnB,EAAAI,GAAAD,KAAyB,GAAAe,GAAAqD,MAAAsD,QAAAxH,OAAAe,EAAAuE,IAAA,SAAA5F,GAA6C,OAAAM,EAAAN,MAAYK,GAAAD,IAAAoE,MAAAsD,QAAAxH,SAAAqG,KAAA,MAAAnC,MAAAsD,QAAA7G,SAAA0F,KAAA,OAAAtG,EAAA,CAAkF,IAAAyB,EAAA1B,EAAA,SAAAJ,GAAoB,OAAAsB,EAAAsE,IAAA,SAAA3F,GAAyB,OAAAA,EAAAD,KAAY2G,KAAA,MAAY,SAAA3G,GAAa,OAAAsB,EAAAsE,IAAA,SAAA3F,GAAyB,OAAAA,EAAAD,MAAe,OAAAI,IAAAE,GAAAW,GAAA,SAAAjB,GAA6B,OAAAA,EAAA,MAAAM,GAAA,EAAAN,EAAA,MAAAiB,GAAAa,EAAA9B,IAAoC8B,EAAG,OAAA1B,GAAAE,EAAAkE,MAAAsD,QAAAxH,KAAAsF,IAAA,SAAA5F,GAA+C,uBAAAA,OAA4B,GAAAiB,EAAAuD,MAAAsD,QAAA7G,KAAA2E,IAAA,SAAA5F,GAA0C,uBAAAA,OAA4B,GAAAsB,EAAAsE,IAAA,SAAA5F,EAAAC,GAAyB,OAAAK,EAAAL,IAAAgB,EAAAhB,GAAA,SAAAmB,GAA8B,OAAAA,EAAA,MAAAd,EAAAL,IAAA,EAAAmB,EAAA,MAAAH,EAAAhB,IAAAD,EAAAoB,IAA0CpB,KAAGsB,EAAK,SAAA+K,GAAArM,EAAAC,EAAAmB,EAAAhB,EAAAC,GAAuB,OAAAiM,GAA8gB,SAAAtM,EAAAC,EAAAmB,GAAmB,gBAAAhB,GAAmB,IAAAC,EAAA4F,EAAA7F,GAAAE,EAAAsH,GAAAxH,EAAAuB,OAAA,CAAAvB,EAAA,MAAAa,EAAAkB,KAAAoK,MAAAnM,EAAA,MAAAC,EAAA,GAAAD,EAAA,MAAAC,EAAA,IAAAc,EAAA,EAA8E,OAAAf,EAAAwF,IAAA,SAAAvF,EAAAgB,GAA2B,IAAAC,EAAM,OAAAD,IAAAF,GAAAsE,EAAApF,EAAAD,EAAAiB,EAAA,KAAAC,EAAAL,EAAA,EAAAkB,KAAAqK,IAAAlM,EAAAa,EAAAb,EAAAe,EAAAjB,EAAAO,QAAA,CAAAwB,KAAAoB,IAAAjC,GAAAF,EAAApB,EAAAmC,KAAAqB,IAAAlC,GAAAF,EAAAnB,MAAnqBwM,CAAAzM,EAAAC,EAAAmB,GAAAhB,EAA+nC,SAAAJ,EAAAC,EAAAmB,GAAmB,IAAAhB,EAAAJ,EAAAoB,EAAA,IAAAnB,EAAAK,EAAA,IAAAc,EAAA,IAAAA,EAAA,UAAoD,UAAAhB,EAAAE,GAApDN,EAAAoB,GAAA,IAAAnB,EAAoDK,EAAAF,EAAA,IAAtsCsM,CAAA1M,EAAAC,EAAAmB,GAAA,EAAAe,KAAAqK,GAAApL,EAAAf,GAA4H,SAAAsM,GAAA3M,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,GAAyB,OAAAgM,GAA+mB,SAAAtM,EAAAC,EAAAmB,EAAAhB,GAAqB,gBAAAC,GAAmB,IAAAC,EAAA2F,EAAA5F,GAAAY,EAAA2G,GAAAvH,EAAAsB,OAAA,CAAAtB,EAAA,MAAAc,EAAAgB,KAAAoK,MAAAlM,EAAA,MAAAC,EAAA,GAAAD,EAAA,MAAAC,EAAA,IAAAe,EAAA,EAA8EF,EAAA,IAAAA,EAAA,EAAAgB,KAAAqK,GAAArL,GAAqB,IAAAG,EAAAH,GAAA,EAAAgB,KAAAqK,IAAoB,OAAAnM,EAAAuF,IAAA,SAAAtF,EAAAa,GAA2BA,IAAAE,GAAAoE,EAAAnF,EAAAD,EAAAc,EAAA,KAAoB,IAAAW,EAAgE,SAAA9B,GAAe,OAAAA,GAAA,YAAAA,MAAA,WAAAA,EAAA,GAAAA,GAAA,aAAAA,MAAA,OAAAA,EAAA,YAAAA,EAAA,KAA/E4M,EAAAtL,GAAAL,EAAAI,EAAAJ,EAAAE,EAAAd,EAAAM,SAAA,GAAmC,OAAAX,EAAA8B,EAAA,GAAAV,EAAAnB,EAAA6B,EAAA,GAAA1B,MAAh2ByM,CAAA7M,EAAAC,EAAAmB,EAAAhB,GAAAC,EAAykC,SAAAL,EAAAC,EAAAmB,EAAAhB,GAAqB,IAAAC,EAAAL,EAAAoB,EAAAd,EAAAL,EAAAG,EAAgB,UAAAJ,EAAA,IAAAC,EAAA,IAAAI,EAAA,IAAAJ,EAAA,IAAAI,EAAA,IAAAC,EAAA,IAAAN,EAAA,IAAAM,EAAA,IAA9mCwM,CAAA9M,EAAAC,EAAAmB,EAAAhB,GAAA,EAAAgB,EAAA,EAAAhB,EAAAE,GAAgI,SAAAgM,GAAAtM,EAAAC,EAAAmB,EAAAhB,EAAAC,QAAuB,IAAAA,MAAA,IAAmB,IAAAC,EAAAD,EAAAuL,sBAAyB,IAAAtL,MAAA,IAAmB,IAAAW,EAAAZ,EAAAwL,YAAe,IAAA5K,OAAA,GAAmB,IAAAE,EAAAE,EAAAC,EAAAuG,EAAA5H,EAAAK,GAAiB,OAAAyF,EAAA3F,IAAAkB,EAAAX,OAAAP,EAAAE,GAAAqH,EAAArG,EAAAa,KAAAoF,KAAAnH,EAAAE,EAAAgB,EAAAX,SAAAQ,EAAAnB,EAAAsB,GAAAD,EAAAsE,EAAAxE,EAAAG,EAAAL,KAAA,SAAAjB,GAAwF,OAAAA,EAAA,KAAAoB,EAAAC,EAAArB,IAAqBqB,EAAkzB,IAAA8G,GAAA,SAAAnI,GAAmB,QAAAC,EAAAmB,GAAA,EAAAhB,EAAAJ,EAAAW,OAAAN,EAAAL,EAAAI,EAAA,GAAAE,EAAA,IAAuCc,EAAAhB,GAAMH,EAAAI,IAAAL,EAAAoB,GAAAd,GAAAL,EAAA,GAAAI,EAAA,GAAAJ,EAAA,GAAAI,EAAA,GAAmC,OAAAC,EAAA,GAAW6F,GAAA,SAAAnG,GAAgB,QAAAC,EAAAmB,EAAAhB,GAAA,EAAAC,EAAAL,EAAAW,OAAAL,EAAA,EAAAW,EAAA,EAAAE,EAAAnB,EAAAK,EAAA,GAAAgB,EAAA,IAAiDjB,EAAAC,GAAMJ,EAAAkB,IAAAnB,EAAAI,GAAAiB,GAAAD,EAAAnB,EAAA,GAAAkB,EAAA,GAAAA,EAAA,GAAAlB,EAAA,GAAAK,IAAAL,EAAA,GAAAkB,EAAA,IAAAC,EAAAH,IAAAhB,EAAA,GAAAkB,EAAA,IAAAC,EAAuE,OAAAd,GAAAe,GAAA,GAAAJ,EAAAI,IAAsBuG,GAAA,SAAA5H,GAAgB,QAAAC,EAAAmB,EAAAhB,GAAA,EAAAC,EAAAL,EAAAW,OAAAL,EAAAN,EAAAK,EAAA,GAAAY,EAAAX,EAAA,GAAAa,EAAAb,EAAA,GAAAe,EAAA,IAAuDjB,EAAAC,GAAMJ,EAAAgB,EAAAG,EAAAD,EAAAb,EAAAN,EAAAI,GAAAa,EAAAX,EAAA,GAAAa,EAAAb,EAAA,GAAAL,GAAAgB,EAAAG,GAAAD,EAAAE,GAAAc,KAAAC,KAAAnC,IAAAmB,KAA8D,OAAAC,GAASO,GAAA,CAAKtB,EAAA,EAAAwB,EAAA,EAAAT,EAAA,EAAAa,EAAA,EAAAU,EAAA,EAAAxC,EAAA,EAAA8C,EAAA,EAAA/B,EAAA,EAAAnB,EAAA,EAAAwC,EAAA,EAAAkD,EAAA,GAA4CxF,GAAA,yFAAA0D,GAAA,SAAA5D,GAA4G,IAAAC,EAAA,IAAAK,EAAAN,GAAAoB,EAAAnB,EAAAS,IAAuB,IAAAO,EAAAhB,GAASA,EAAAO,MAAAY,IAAAnB,EAAAa,IAAAH,QAAyBW,EAAArB,GAAM,OAAAA,EAAAa,IAAAH,OAAAV,EAAAW,OAAA,GAAAX,EAAAW,OAAAD,SAAA,KAAAR,QAAAF,EAAAW,OAAA,UAAAX,EAAAa,IAAA,+CAAAb,EAAAW,OAAA,IAAAX,EAAAW,OAAA,YAAyKE,IAAAb,EAAAa,IAAA+C,SAAA5D,EAAAW,SAA8BmB,EAAAgL,UAAAC,OAAA,SAAAhN,GAA+B,WAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GAAAO,WAAA0B,MAAA,KAAA1B,KAAAyB,MAAAN,KAAA1B,GAAAO,OAAiHwB,EAAAgL,UAAAE,UAAA,SAAAjN,EAAAC,GAAqC,WAAAD,GAAA,IAAAC,IAAAM,KAAA0B,MAAA,KAAA1B,KAAAyB,MAAAN,KAAA,SAAA1B,EAAAC,KAAAM,MAA2EwB,EAAAgL,UAAAG,MAAA,SAAAlN,EAAAC,GAAiC,WAAAD,GAAA,IAAAC,IAAAM,KAAA0B,MAAA,KAAA1B,KAAAyB,MAAAN,KAAA,CAAA1B,EAAA,IAAAC,EAAA,OAAAM,MAA2EwB,EAAAgL,UAAAI,OAAA,SAAAnN,EAAAC,EAAAmB,GAAoC,IAAAhB,EAAAC,EAAAC,EAAU,WAAAN,IAAAO,KAAA0M,UAAAhN,EAAAmB,GAAAhB,EAAAJ,EAAAmC,KAAAqK,GAAA,IAAAnM,EAAA8B,KAAAoB,IAAAnD,GAAAE,EAAA6B,KAAAqB,IAAApD,GAAAG,KAAAyB,MAAAN,KAAA,CAAArB,EAAAC,KAAAD,EAAA,MAAAE,KAAA0B,MAAA,KAAA1B,KAAA0M,WAAAhN,GAAAmB,IAAAb,MAA2JwB,EAAAgL,UAAAK,MAAA,SAAApN,GAA+B,WAAAA,IAAAO,KAAA0B,MAAA,KAAA1B,KAAAyB,MAAAN,KAAA,KAAAS,KAAAmB,IAAAtD,EAAAmC,KAAAqK,GAAA,cAAAjM,MAA0FwB,EAAAgL,UAAAM,MAAA,SAAArN,GAA+B,WAAAA,IAAAO,KAAA0B,MAAA,KAAA1B,KAAAyB,MAAAN,KAAA,GAAAS,KAAAmB,IAAAtD,EAAAmC,KAAAqK,GAAA,gBAAAjM,MAA0FwB,EAAAgL,UAAAO,QAAA,WAAgC,IAAAtN,EAAAO,KAAW,GAAAA,KAAA0B,MAAA,OAAA1B,KAAA0B,MAAgC,IAAA1B,KAAAyB,MAAArB,OAAA,OAAAJ,KAAA0B,MAAA,cAAA1B,KAAA0B,MAAiE,GAAA1B,KAAA0B,MAAA1B,KAAAyB,MAAA,OAAAzB,KAAAyB,MAAArB,OAAA,OAAAJ,KAAA0B,MAAoE,QAAAhC,EAAA,EAAYA,EAAAM,KAAAyB,MAAArB,OAAoBV,IAAAD,EAAAiC,MAAAH,EAAA9B,EAAAiC,MAAAjC,EAAAgC,MAAA/B,IAAkC,OAAAM,KAAA0B,OAAkBF,EAAAgL,UAAAQ,KAAA,SAAAvN,EAAAC,EAAAmB,GAAkC,IAAAhB,EAAM,OAAAG,KAAAyB,MAAArB,QAAAJ,KAAA0B,QAAA1B,KAAA0B,MAAA1B,KAAA+M,WAAAlN,EAAAG,KAAA0B,MAAA,CAAAjC,EAAAI,EAAA,GAAAH,EAAAG,EAAA,IAAAgB,EAAA,EAAAhB,EAAA,IAAAJ,EAAAI,EAAA,GAAAH,EAAAG,EAAA,IAAAgB,EAAA,EAAAhB,EAAA,OAAAJ,EAAAC,IAA2I,IAAAuN,GAAAzL,EAAA0L,GAAA,CAAaT,QAAA,EAAAE,OAAA,EAAAC,QAAA,EAAAF,WAAA,EAAAG,OAAA,EAAAC,OAAA,GAA4DK,GAAA,yEAAAC,GAAA,SAAwsBtK,GAAA,EAAAlB,KAAAqK,GAAqjBoB,GAAAzL,KAAAqK,GAAA,IAAgBhK,EAAAuK,UAAA3B,UAAA,SAAApL,GAAkC,IAAAC,EAAAkC,KAAAoB,IAAAhD,KAAAoD,GAAAiK,IAAAxM,EAAAe,KAAAqB,IAAAjD,KAAAoD,GAAAiK,IAAAxN,EAAA,CAAAG,KAAAkD,IAAAzD,EAAA,GAAAC,EAAAD,EAAA,GAAAoB,GAAAb,KAAAkD,IAAAzD,EAAA,GAAAC,EAAAD,EAAA,GAAAoB,GAAAb,KAAAmD,KAAA1D,EAAA,GAAAoB,EAAApB,EAAA,GAAAC,GAAAM,KAAAmD,KAAA1D,EAAA,GAAAoB,EAAApB,EAAA,GAAAC,IAAAI,EAAAD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAE,EAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAa,IAAAb,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAAAe,GAAAd,EAAAC,GAAA,EAAoT,GAAAW,EAAA,MAAAE,EAAA,OAAAZ,KAAAkD,GAAAlD,KAAAmD,GAAAvB,KAAAC,KAAAjB,GAAAZ,KAAAoD,GAAA,EAAApD,KAAgE,IAAAc,EAAAjB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAA0Ba,EAAAkB,KAAAC,KAAAnB,GAAe,IAAAK,EAAAH,EAAAF,EAAA,EAAAa,EAAAX,EAAAF,EAAA,EAAoB,OAAAV,KAAAoD,GAAAxB,KAAAiC,IAAA/C,GAAA,OAAAc,KAAAiC,IAAA9C,EAAAhB,GAAA,aAAA6B,KAAA0L,KAAA1L,KAAAiC,IAAA/C,GAAAc,KAAAiC,IAAA9C,EAAAhB,IAAAgB,EAAAjB,GAAAgB,KAAAC,EAAAhB,IAAA6B,KAAAqK,GAAAjM,KAAAoD,IAAA,GAAApD,KAAAkD,GAAAtB,KAAAC,KAAAd,GAAAf,KAAAmD,GAAAvB,KAAAC,KAAAN,KAAAvB,KAAAoD,IAAA,GAAApD,KAAAkD,GAAAtB,KAAAC,KAAAN,GAAAvB,KAAAmD,GAAAvB,KAAAC,KAAAd,IAAAf,MAA8OiC,EAAAuK,UAAAe,aAAA,WAAqC,OAAAvN,KAAAkD,GAAA,MAAAlD,KAAAmD,IAAAnD,KAAAmD,GAAA,MAAAnD,KAAAkD,IAAqD,IAAAsK,GAAAvL,EAASC,EAAAsK,UAAAiB,SAAA,SAAAhO,GAAiC,IAAAC,EAAAmB,EAAAb,KAAaP,EAAAgC,MAAArB,QAAAJ,KAAA0N,QAAA,SAAA7N,EAAAC,EAAAC,EAAAW,GAA+C,IAAAE,EAAAE,EAAAC,EAAAQ,EAAY,OAAA1B,EAAA,IAAa,QAAAe,EAAAnB,EAAAuN,KAAA,EAAAnN,EAAA,OAAAiB,EAAA,IAAAF,EAAA,QAAAA,EAAA,SAAAA,EAAA,GAAAA,EAAA,IAAkE,MAAM,QAAAA,EAAAnB,EAAAuN,KAAAjN,EAAAF,EAAA,OAAAiB,EAAAF,EAAA,KAAAnB,EAAAuN,KAAAjN,EAAAW,GAAA,WAAAE,EAAA,SAAAA,EAAA,GAAAA,EAAA,IAAkF,MAAM,QAAAA,EAAAnB,EAAAuN,KAAAnN,EAAA,SAAAiB,EAAA,IAAAF,EAAA,QAAAA,EAAA,SAAAA,EAAA,GAAAA,EAAA,IAAkE,MAAM,QAAAA,EAAAnB,EAAAuN,KAAAnN,EAAA,GAAAa,GAAA,GAAAI,EAAAF,EAAA,KAAAnB,EAAAuN,KAAAjN,EAAAW,GAAA,WAAAE,EAAA,SAAAA,EAAA,GAAAA,EAAA,IAAkF,MAAM,oBAAAY,EAAA/B,EAAAsN,UAAApL,EAAA6L,GAAA3N,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAgL,UAAArJ,GAAoE,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAAA3B,EAAA,GAAAA,EAAA,YAAAe,EAAAnB,EAAAuN,KAAAnN,EAAA,GAAAA,EAAA,SAAAA,EAAA,UAAAA,EAAA,IAAAA,EAAA,KAAAE,GAAAF,EAAA,KAAAa,GAAA,MAAAb,EAAA,QAAAA,EAAA,QAAAA,EAAA,IAA6IiB,EAAA,OAAAjB,EAAA,WAAAe,EAAA,GAAAA,EAAA,IAAiC,MAAME,EAAAa,EAAA4L,eAAA,OAAA1N,EAAA,WAAAe,EAAA,GAAAA,EAAA,KAAAf,EAAA,GAAA8B,EAAAuB,GAAAvB,EAAAwB,GAAAxB,EAAAyB,GAAAvD,EAAA,GAAAA,EAAA,GAAAe,EAAA,GAAAA,EAAA,IAA4F,MAAM,QAAAW,EAAAzB,EAAA,EAAAc,EAAAnB,EAAAuN,KAAAnN,EAAA,GAAAA,EAAA,GAAA0B,GAAAT,EAAA,KAAAF,EAAA,GAAAA,EAAA,IAAsD,MAAM,YAAAG,EAAAlB,EAAA,GAAAiB,EAAA,CAAAC,GAAAQ,EAAAR,EAAAG,gBAAAH,EAAArB,EAAA,EAAmDA,EAAAG,EAAAO,OAAWV,GAAA,EAAAkB,EAAAnB,EAAAuN,KAAAnN,EAAAH,GAAAG,EAAAH,EAAA,GAAA6B,GAAAT,EAAAK,KAAAP,EAAA,GAAAA,EAAA,IAA+CC,EAAAyC,SAAAxD,GAAAgB,IAAgB,IAAKoB,EAAAsK,UAAAmB,gBAAA,WAAwC,IAAAlO,EAAAC,EAAe,GAAAM,KAAAuD,QAAAnD,OAAA,CAAwB,OAAAJ,KAAAuD,QAAAnD,OAAA,OAAAJ,KAAAyN,SAAAzN,KAAAuD,QAAA,SAAAvD,KAAAuD,QAAA,IAAuF,IAAA9D,EAAAwN,KAAAvN,EAAAM,KAAAuD,QAAAnD,SAAiCV,GAAA,GAAOD,EAAAgN,OAAtKzM,KAAsKuD,QAAA7D,GAAAqN,WAAkC/M,KAAAyN,SAAAhO,GAAAO,KAAAuD,QAAA,KAAkCrB,EAAAsK,UAAAxG,SAAA,WAAiC,IAAAvG,EAAAC,EAAAmB,EAAAb,KAAAH,EAAA,GAAoBG,KAAA2N,kBAAuB,QAAA7N,EAAA,EAAYA,EAAAE,KAAAsD,SAAAlD,OAAuBN,IAAAJ,EAAAmB,EAAAyC,SAAAxD,GAAA,GAAAL,EAAAK,EAAA,SAAAJ,GAAA,MAAAA,OAAAmB,EAAAyC,SAAAxD,EAAA,MAAAD,IAAAuB,OAAA3B,EAAAoB,EAAAyC,SAAAxD,GAAAmB,MAAA,GAAAJ,EAAAyC,SAAAxD,IAA0H,OAAAD,EAAAuG,KAAA,KAAAwH,QAAA,8BAAAA,QAAA,YAAAA,QAAA,cAAkG1L,EAAAsK,UAAAE,UAAA,SAAAjN,EAAAC,GAAqC,OAAAM,KAAAuD,QAAApC,KAAA8L,KAAAP,UAAAjN,EAAAC,GAAA,IAAAM,MAAsDkC,EAAAsK,UAAAG,MAAA,SAAAlN,EAAAC,GAAiC,OAAAM,KAAAuD,QAAApC,KAAA8L,KAAAN,MAAAlN,EAAAC,GAAA,IAAAA,IAAAD,IAAAO,MAA0DkC,EAAAsK,UAAAI,OAAA,SAAAnN,EAAAC,EAAAmB,GAAoC,OAAAb,KAAAuD,QAAApC,KAAA8L,KAAAL,OAAAnN,EAAAC,GAAA,EAAAmB,GAAA,IAAAb,MAAwDkC,EAAAsK,UAAAK,MAAA,SAAApN,GAA+B,OAAAO,KAAAuD,QAAApC,KAAA8L,KAAAJ,MAAApN,IAAAO,MAA6CkC,EAAAsK,UAAAM,MAAA,SAAArN,GAA+B,OAAAO,KAAAuD,QAAApC,KAAA8L,KAAAH,MAAArN,IAAAO,MAA6CkC,EAAAsK,UAAAC,OAAA,SAAAhN,GAAgC,OAAAO,KAAAuD,QAAApC,KAAA8L,KAAAR,OAAAhN,IAAAO,MAA8CkC,EAAAsK,UAAA3B,UAAA,SAAApL,GAAmC,OAAAA,EAAAyG,QAAAlG,KAAAuD,QAAApC,KAAvnI,SAAA1B,GAAwG,IAAAC,EAAAmB,EAAAhB,EAAA,IAAAoN,GAAiB,OAAAxN,EAAAwG,MAAAkH,IAAA3I,QAAA,SAAA/E,GAAuC,GAAAA,EAAAW,OAAA,CAAa,YAAA8M,GAAAzN,GAAA,YAAAC,EAAAD,GAAmC,OAAAoB,EAAApB,EAAAwG,MAAAmH,IAAA/H,IAAA,SAAA5F,GAAqC,OAAAA,GAAA,IAAYC,GAAK,6BAAAmB,EAAAT,QAAAP,EAAA4M,OAAA5L,IAAoD,4BAAAA,EAAAT,OAAAP,EAAA8M,MAAA9L,EAAA,GAAAA,EAAA,QAAAA,EAAAT,QAAAP,EAAA8M,MAAA9L,EAAA,GAAAA,EAAA,KAA0F,6BAAAA,EAAAT,OAAAP,EAAA+M,OAAA/L,EAAA,YAAAA,EAAAT,QAAAP,EAAA+M,OAAA/L,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAiG,gCAAAA,EAAAT,OAAAP,EAAA6M,UAAA7L,EAAA,UAAAA,EAAAT,QAAAP,EAAA6M,UAAA7L,EAAA,GAAAA,EAAA,KAAmG,4BAAAA,EAAAT,QAAAP,EAAAgN,MAAAhM,EAAA,KAAqD,4BAAAA,EAAAT,QAAAP,EAAAiN,MAAAjM,EAAA,SAAuDhB,EAAm7GgO,CAAApO,IAAAO,YAAqDkC,EAAAsK,UAAAsB,MAAA,SAAArO,GAA+B,IAAAC,EAAAmB,EAAA,EAAAhB,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAsB,OAAAN,KAAA,EAAAO,KAAA2N,kBAAA3N,KAAAsD,SAAAkB,QAAA,SAAA9D,GAAuE,IAAAE,EAAAF,EAAA,GAAAQ,gBAAAR,EAAA,GAAgC,OAAAA,EAAA,IAAa,uBAAAE,IAAAF,EAAA,IAAAZ,KAAAY,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,QAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,IAAuF,uBAAAmB,IAAAF,EAAA,IAAAX,KAAAW,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,QAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,IAAuF,uBAAAK,EAAAe,OAAAd,EAAAF,GAAqC,uBAAAe,IAAAF,EAAA,IAAAZ,EAAAY,EAAA,IAAAX,GAAAD,EAAAY,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,GAAAM,EAAAW,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,GAAAoB,EAAAf,EAAAD,EAAAE,EAAAW,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,QAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,IAAoJ,uBAAAmB,IAAAF,EAAA,IAAAZ,EAAAY,EAAA,IAAAX,GAAAD,EAAAY,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,GAAAM,EAAAW,EAAA,GAAAA,EAAA,GAAAqN,QAAAtO,GAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,GAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,GAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,EAAA,GAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,QAAAiB,EAAA,IAAAA,EAAA,GAAAqN,QAAAtO,IAAgN,eAAAC,EAAAgB,EAAAN,OAAAQ,IAAAF,EAAAhB,EAAA,IAAAI,EAAAY,EAAAhB,EAAA,IAAAK,GAAAD,EAAAY,EAAAhB,EAAA,GAAAgB,EAAAhB,EAAA,GAAAqO,QAAAtO,GAAAM,EAAAW,EAAAhB,EAAA,GAAAgB,EAAAhB,EAAA,GAAAqO,QAAAtO,QAAAiB,EAAA8D,QAAA,SAAA9E,EAAAmB,GAAsIA,IAAAH,EAAAG,IAAAH,EAAAG,GAAAkN,QAAAtO,SAA8BO,MAAOkC,EAAAsK,UAAAkB,QAAA,SAAAjO,EAAAC,GAAmC,IAAAmB,EAAAhB,EAAAC,EAAAC,EAAAC,KAAAsD,SAAA5C,EAAA,GAA8BE,GAAA,EAAAE,EAAA,EAAAC,EAAA,EAAAQ,EAAA,EAAAC,EAAA,EAAsB,GAAA9B,GAAAM,KAAA2N,kBAAA5N,EAAAyE,QAAA,SAAA9E,EAAAmB,GAAqD,IAAAhB,EAAAJ,EAAAC,EAAAmB,EAAAC,EAAAC,GAAiBkD,MAAAsD,QAAA1H,KAAAa,EAAAG,GAAAhB,EAAAe,GAAA,GAAgC,IAAAd,EAAAJ,EAAA,KAAAA,EAAA,GAAAwB,cAAgC,OAAAxB,EAAA,IAAa,uBAAAoB,EAAApB,EAAA,IAAAI,EAAAgB,EAAA,GAAAC,EAAArB,EAAA,IAAAI,EAAAiB,EAAA,GAAAQ,EAAAT,OAAAU,EAAAT,GAAmE,4BAAAD,EAAApB,EAAA,IAAAI,EAAAgB,EAAA,IAA4C,4BAAAC,EAAArB,EAAA,IAAAI,EAAAiB,EAAA,IAA4C,uBAAAD,EAAAS,OAAAR,EAAAS,GAAqC,QAAAV,EAAApB,IAAAU,OAAA,IAAAN,EAAAgB,EAAA,GAAAC,EAAArB,IAAAU,OAAA,IAAAN,EAAAiB,EAAA,OAAyDH,EAAA,OAAAZ,KAAiB,IAAAF,EAAA,GAAAe,EAAA,EAAaA,EAAAd,EAAAK,OAAWS,IAAA,YAAAH,EAAAG,GAAA,IAAAhB,EAAA,EAA6BA,EAAAa,EAAAG,GAAAT,OAAcP,IAAAC,EAAAqB,KAAAT,EAAAG,GAAAhB,SAAoBC,EAAAqB,KAAApB,EAAAc,IAAkB,OAAAb,KAAAsD,SAAAxD,EAAAE,MAA4BkC,EAAAsK,UAAA3I,IAAA,WAA4B,OAAA7D,KAAA0N,QAAA,SAAAjO,EAAAC,EAAAmB,EAAAhB,GAAsC,IAAAC,EAAAC,EAAAN,EAAA,GAAAiB,EAAAX,EAAAiO,cAA+B,GAAAjO,IAAAW,EAAA,OAAAjB,EAAA,GAAAiB,EAAAX,GAA0B,oBAAAN,EAAA,IAAAI,GAA6B,eAAAJ,EAAA,IAAAoB,OAAApB,EAAA,IAAAI,GAAqC,YAAAC,EAAA,EAAgBA,EAAAL,EAAAW,OAAWN,IAAAL,EAAAK,MAAA,EAAAe,EAAAhB,KAAmB,GAAAG,MAAUkC,EAAAsK,UAAAyB,IAAA,WAA4B,OAAAjO,KAAA0N,QAAA,SAAAjO,EAAAC,EAAAmB,EAAAhB,GAAsC,IAAAC,EAAAC,EAAAN,EAAA,GAAAiB,EAAAX,EAAAmB,cAA+B,GAAAnB,IAAAW,IAAA,IAAAhB,GAAA,MAAAK,GAAA,OAAAN,EAAA,GAAAiB,EAAAX,GAA4C,oBAAAN,EAAA,IAAAI,GAA6B,eAAAJ,EAAA,IAAAoB,OAAApB,EAAA,IAAAI,GAAqC,YAAAC,EAAA,EAAgBA,EAAAL,EAAAW,OAAWN,IAAAL,EAAAK,MAAA,EAAAe,EAAAhB,KAAmB,GAAAG,MAAUkC,EAAAsK,UAAA0B,MAAA,WAA8B,OAAAlO,KAAA0N,QAAA,SAAAjO,EAAAC,EAAAmB,EAAAhB,GAAsC,IAAAC,EAAAC,EAAAW,EAAAE,EAAA,GAAAE,EAAArB,EAAA,GAAsB,YAAAqB,GAAA,MAAAA,EAAA,YAAAA,GAAAf,EAAAc,EAAApB,EAAA,GAAAiB,EAAAb,EAAAJ,EAAA,KAAAM,EAAAN,EAAA,GAAAiB,EAAAjB,EAAA,SAAAK,EAA9jL,SAAAL,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,GAA6C,IAAAC,EAAAa,KAAAqB,IAAAnC,EAAAgC,GAAA,KAAAvB,EAAAK,KAAAoB,IAAAlC,EAAAgC,GAAA,KAAAtB,EAAAD,GAAA9B,EAAAoB,GAAA,EAAAE,GAAArB,EAAAG,GAAA,EAAA8B,GAAAZ,GAAAtB,EAAAoB,GAAA,EAAAU,GAAA7B,EAAAG,GAAA,EAA2F,OAAA2B,GAAA,IAAAG,EAAA,SAAyB,OAAAjB,GAAA,IAAAE,EAAA,SAAyBF,EAAAkB,KAAAiC,IAAAnD,GAAAE,EAAAgB,KAAAiC,IAAAjD,GAA4B,IAAAqB,EAAAT,KAAAd,KAAAiB,KAAAf,KAA0BqB,EAAA,IAAAvB,GAAAkB,KAAAC,KAAAI,GAAArB,GAAAgB,KAAAC,KAAAI,IAAuC,IAAAC,EAAAH,EAAAtC,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAG,EAAAQ,GAAAY,EAAA,GAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAV,KAAAzB,IAAAyB,KAAAoF,KAAApF,KAAAiC,IAAAxB,IAAAS,GAAA,OAA4FT,GAAAC,EAAK,QAAAC,EAAA,EAAYA,EAAAD,EAAIC,IAAAJ,EAAAhB,KAAAa,EAAAI,EAAAC,IAAAD,GAAAC,EAAwB,OAAAF,EAAAkD,IAAA,SAAA5F,GAAyB,QAAAC,EAAA,EAAYA,EAAAD,EAAAW,OAAWV,GAAA,GAAM,IAAAmB,EAAApB,EAAAC,EAAA,GAAAG,EAAAJ,EAAAC,EAAA,GAAgCI,EAAAyB,GAAVV,GAAAH,GAAUK,GAAVlB,GAAAe,GAAUb,EAAAgB,EAAAF,EAAAU,EAAA1B,EAAwBJ,EAAAC,EAAA,GAAAI,EAAAoC,EAAA,GAAAzC,EAAAC,EAAA,GAAAK,EAAAmC,EAAA,GAA4B,OAAAzC,IAAohK0O,CAAAtN,EAAAhB,EAAAE,EAAAW,EAAAjB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAW,OAAA,QAAAX,EAAA,WAAAA,EAAA,GAAAA,EAAA,MAAAK,EAAA0E,QAAA,SAAA/E,GAAqLmB,EAAAO,KAAA,KAAA1B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAA4CmB,MAAMZ,MAAOkC,EAAAsK,UAAA4B,QAAA,WAAgC,IAAA3O,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAC,KAAAsD,SAA8B,OAAAtD,KAAA0N,QAAA,SAAAhN,EAAAE,EAAAE,EAAAC,GAAsC,IAAAQ,EAAAC,EAAAd,EAAA,GAAAiB,EAAAH,EAAAwM,cAA+BpN,IAAA,MAAAe,GAAAJ,EAAA,MAAAC,EAAA,OAAAX,EAAAd,EAAAa,EAAA,QAAAnB,EAAAoB,EAAA,GAAAC,EAAApB,EAAAmB,EAAA,GAAAE,GAAA,MAAAF,EAAA,IAAApB,EAAAoB,EAAA,GAAAA,EAAA,GAAAnB,EAAAmB,EAAA,GAAAA,EAAA,KAAApB,EAAA,EAAAC,EAAA,GAAAG,GAAAJ,EAAAK,GAAAJ,EAAA6B,IAAA1B,GAAAiB,EAAAhB,GAAAiB,GAAAhB,EAAAa,GAAA,CAAAW,EAAA,QAAA1B,EAAAC,EAAAY,EAAA,GAAAA,EAAA,WAAAiB,IAAAJ,EAAA,MAAAC,EAAA,OAAAX,EAAAd,EAAAa,EAAA,QAAAnB,EAAAoB,EAAA,GAAAC,EAAApB,EAAAmB,EAAA,GAAAE,GAAA,MAAAF,EAAA,IAAApB,EAAAoB,EAAA,GAAAA,EAAA,GAAAnB,EAAAmB,EAAA,GAAAA,EAAA,KAAApB,EAAA,EAAAC,EAAA,GAAAG,GAAAJ,EAAAK,GAAAJ,EAAA6B,IAAA1B,GAAAiB,EAAAhB,GAAAiB,GAAAhB,EAAAa,GAAA,CAAAW,EAAA,QAAA1B,EAAAC,EAAAY,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,QAAsVV,MAAQ,IAAA8F,GAAA5D,EAAAmM,GAAA,CAAmBtO,EAAA,EAAAwB,EAAA,EAAAT,EAAA,EAAAa,EAAA,EAAAU,EAAA,EAAAM,EAAA,EAAA/B,EAAA,EAAAnB,EAAA,EAAAwC,EAAA,EAAAkD,EAAA,GAAwCmJ,GAAA,mCAAAC,GAAA,SAAA9O,GAAsD,IAAAC,EAAA,GAAS,OAAAD,EAAAmO,QAAAU,GAAA,SAAA7O,EAAAoB,EAAAhB,GAAoC,IAAAC,EAAAe,EAAAK,cAAsB,IAAArB,EAAv10B,SAAAJ,GAAc,IAAAC,EAAAD,EAAAiM,MAAA8C,IAAkB,OAAA9O,IAAA2F,IAAAoJ,QAAA,GAAuz0BtM,CAAAtC,GAAA,MAAAC,GAAAD,EAAAO,OAAA,IAAAV,EAAAyB,KAAA,CAAAN,GAAAO,OAAAvB,EAAAyB,OAAA,OAAAxB,EAAA,IAAAe,EAAA,MAAAA,EAAA,SAA4FhB,EAAAO,QAAA,GAAY,CAAE,GAAAP,EAAAO,SAAAiO,GAAAvO,GAAA,OAAAD,EAAA6O,QAAA7N,GAAAnB,EAAAyB,KAAAtB,GAAkD,GAAAA,EAAAO,OAAAiO,GAAAvO,GAAA,UAAA6O,MAAA,uBAAyDjP,EAAAyB,KAAA,CAAAN,GAAAO,OAAAvB,EAAAyB,OAAA,EAAA+M,GAAAvO,SAAuCJ,GAAI8O,GAAA,oCAAA/J,GAAA,SAAAhF,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,GAAqE,WAAAwB,EAAA3C,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,IAA+BwB,EAAAoK,UAAA,CAAaoC,YAAAxM,EAAAwB,KAAA,WAA8B5D,KAAAI,OAAAJ,KAAAwD,aAAA,CAAAxD,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,KAA2GuC,eAAA,WAA2B,OAAA1E,KAAAI,QAAmB6G,iBAAA,SAAAxH,GAA8B,IAAAC,EAAA6C,EAAA9C,EAAAO,KAAAI,OAAAJ,KAAAwD,aAAA,CAAAxD,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,IAAqH,OAAAnC,KAAA0D,SAAA,CAAA1D,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,GAAAzC,IAAoGmP,mBAAA,SAAApP,GAAgC,IAAAC,EAAA6C,EAAA9C,EAAAO,KAAAI,OAAAJ,KAAAwD,aAAA,CAAAxD,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,IAAAtB,EAAAb,KAAA2D,cAAA,CAAA3D,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,GAAAzC,GAAAG,EAAA+B,KAAAC,KAAAhB,EAAAqB,EAAArB,EAAAqB,EAAArB,EAAAsB,EAAAtB,EAAAsB,GAAsP,OAAAtC,EAAA,GAAYqC,EAAArB,EAAAqB,EAAArC,EAAAsC,EAAAtB,EAAAsB,EAAAtC,GAAgB,CAAEqC,EAAA,EAAAC,EAAA,IAAS2M,sBAAA,SAAArP,GAAmC,IAAAC,EAAAmB,EAAA0B,EAAA9C,EAAAO,KAAAI,OAAAJ,KAAAwD,aAAA,CAAAxD,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,IAAAtC,EAAAG,KAAA2D,cAAA,CAAA3D,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,GAAAtB,GAAAf,EAAA8B,KAAAC,KAAAhC,EAAAqC,EAAArC,EAAAqC,EAAArC,EAAAsC,EAAAtC,EAAAsC,GAAwPzC,EAAAI,EAAA,GAAOoC,EAAArC,EAAAqC,EAAApC,EAAAqC,EAAAtC,EAAAsC,EAAArC,GAAgB,CAC3v+BoC,EAAA,EAAAC,EAAA,GAAS,IAAApC,EAAAC,KAAA0D,SAAA,CAAA1D,KAAAD,EAAAmC,EAAAlC,KAAAwC,EAAAN,EAAAlC,KAAAuB,EAAAW,EAAAlC,KAAAoC,EAAAF,GAAA,CAAAlC,KAAAD,EAAAoC,EAAAnC,KAAAwC,EAAAL,EAAAnC,KAAAuB,EAAAY,EAAAnC,KAAAoC,EAAAD,GAAAtB,GAAmG,OAAOqB,EAAAnC,EAAAmC,EAAAC,EAAApC,EAAAoC,EAAA4M,SAAArP,EAAAwC,EAAA8M,SAAAtP,EAAAyC,KAAyC,IAAA+B,GAAA,0yKAAAC,GAAA,qhLAAAH,GAAA,8BAAAiL,GAAA,EAAArN,KAAAqK,GAAA1H,GAAA,SAAA9E,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,GAAs5V,IAAAC,EAAAa,KAAAqB,IAAAnD,EAAAmP,GAAA,KAAA1N,EAAAK,KAAAoB,IAAAlD,EAAAmP,GAAA,KAAAzN,EAAAD,GAAA9B,EAAAmB,GAAA,EAAAG,GAAArB,EAAAoB,GAAA,EAAAa,GAAAZ,GAAAtB,EAAAmB,GAAA,EAAAW,GAAA7B,EAAAoB,GAAA,EAA2F,OAAAU,GAAA,IAAAG,EAAA,SAAyB,OAAAd,GAAA,IAAAhB,EAAA,SAAyBgB,EAAAe,KAAAiC,IAAAhD,GAAAhB,EAAA+B,KAAAiC,IAAAhE,GAA4B,IAAAkC,EAAAP,KAAAX,KAAAc,KAAA9B,KAA0BkC,EAAA,IAAAlB,GAAAe,KAAAC,KAAAE,GAAAlC,GAAA+B,KAAAC,KAAAE,IAAuC,IAAAC,EADz3L,SAAAvC,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,EAAAC,GAAgC,IAAAQ,EAAAR,GAAAtB,EAAAoB,GAAA,EAAAC,GAAApB,EAAAG,GAAA,EAAA2B,GAAAV,GAAArB,EAAAoB,GAAA,EAAAE,GAAArB,EAAAG,GAAA,EAAA8B,EAAAjB,IAAAqB,EAAAnB,IAAAoB,EAAAT,IAAAU,EAAAT,IAAAU,EAAAP,EAAAI,EAAAJ,EAAAM,EAAAF,EAAAC,EAAuFE,EAAA,IAAAA,EAAA,GAAAA,GAAAP,EAAAM,EAAAF,EAAAC,EAAkD,IAAAG,GAAlDD,EAAAN,KAAAC,KAAAK,IAAApC,IAAAC,GAAA,MAAkDW,EAAAE,EAAAY,EAAAY,EAAAF,GAAAtB,EAAAF,EAAAa,EAAAc,EAAAtB,EAAAoB,EAAArB,EAAAsB,GAAA3C,EAAAoB,GAAA,EAAAyB,EAAAxB,EAAAqB,EAAApB,EAAAqB,GAAA1C,EAAAG,GAAA,EAAA0C,GAAAhB,EAAAY,GAAAzB,EAAA8B,GAAAhB,EAAAY,GAAAxB,EAAA6B,IAAAlB,EAAAY,GAAAzB,EAAAgC,IAAAlB,EAAAY,GAAAxB,EAAA+B,EAAAyB,EAAA,IAAA7B,EAAAC,GAAAI,EAAAwB,EAAA7B,EAAAC,EAAAC,EAAAC,GAAiI,WAAA3C,GAAA6C,EAAA,IAAAA,GAAAqM,IAAA,IAAAlP,GAAA6C,EAAA,IAAAA,GAAAqM,IAAA,CAAA5M,EAAAC,EAAAK,EAAAC,GAC+kLsM,CAAAzP,EAAAC,EAAAkB,EAAAE,EAAAf,EAAAW,EAAAG,EAAAhB,EAAAkB,EAAAQ,GAAAU,EAAA,GAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAR,KAAAzB,IAAAyB,KAAAoF,KAAApF,KAAAiC,IAAA1B,IAAA8M,GAAA,OAA4F9M,GAAAC,EAAK,QAAAC,EAAA,EAAYA,EAAAD,EAAIC,IAAAJ,EAAAd,KAAAkD,EAAAnC,EAAAC,IAAAD,GAAAC,EAAwB,OAAAF,EAAAoD,IAAA,SAAA5F,GAAyB,QAAAC,EAAA,EAAYA,EAAAD,EAAAW,OAAWV,GAAA,GAAM,IAAAI,EAAAL,EAAAC,EAAA,GAAAK,EAAAN,EAAAC,EAAA,GAAgCgB,EAAAa,GAAVzB,GAAAe,GAAUE,GAAVhB,GAAAF,GAAUe,EAAAG,EAAAjB,EAAAyB,EAAAxB,EAAwBN,EAAAC,EAAA,GAAAgB,EAAAsB,EAAA,GAAAvC,EAAAC,EAAA,GAAAkB,EAAAoB,EAAA,GAA4B,OAAAvC,KAAW0P,GAAA,SAAA1P,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,GAAgC,WAAAwD,EAAA7E,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,EAAAW,EAAAE,EAAAE,IAAiCwD,EAAAkI,UAAA,CAAaoC,YAAAtK,EAAAV,KAAA,aAA+Bc,eAAA,WAA2B,OAAA1E,KAAAI,QAAmB6G,iBAAA,SAAAxH,GAAyCA,EAAA,EAAAA,EAAA,EAAAA,EAAAO,KAAAI,SAAAX,EAAAO,KAAAI,QAAuC,QAAAS,EAAAb,KAAA2E,eAAAvE,OAAA,EAAuCJ,KAAA2E,eAAA9D,IAAApB,GAAAO,KAAA2E,eAAA9D,GAAA,GAAoDA,IAAKA,EAAAb,KAAA2E,eAAAvE,OAAA,GAAAS,IAAoC,QAAAhB,EAAA,EAAAC,EAAA,EAAgBA,EAAAe,EAAIf,IAAAD,GAA1MG,KAA0M2E,eAAA7E,GAA2B,OAAAE,KAAA4E,OAAA/D,GAAAoG,iBAAAxH,EAAAI,IAA4CgP,mBAAA,SAAApP,GAA2CA,EAAA,EAAAA,EAAA,EAAAA,EAAAO,KAAAI,SAAAX,EAAAO,KAAAI,QAAuC,QAAAS,EAAAb,KAAA2E,eAAAvE,OAAA,EAAuCJ,KAAA2E,eAAA9D,IAAApB,GAAAO,KAAA2E,eAAA9D,GAAA,GAAoDA,IAAKA,EAAAb,KAAA2E,eAAAvE,OAAA,GAAAS,IAAoC,QAAAhB,EAAA,EAAAC,EAAA,EAAgBA,EAAAe,EAAIf,IAAAD,GAA1MG,KAA0M2E,eAAA7E,GAA2B,OAAAE,KAAA4E,OAAA/D,GAAAgO,mBAAApP,EAAAI,IAA8CiP,sBAAA,SAAArP,GAAmC,IAAAC,EAAAM,KAAA6O,mBAAApP,GAAAoB,EAAAb,KAAAiH,iBAAAxH,GAA4D,OAAOyC,EAAArB,EAAAqB,EAAAC,EAAAtB,EAAAsB,EAAA4M,SAAArP,EAAAwC,EAAA8M,SAAAtP,EAAAyC,KAAyC,IAAAiN,GAAA,SAAA3P,EAAAC,EAAAmB,EAAAhB,GAAyB,WAAAgF,EAAApF,EAAAC,EAAAmB,EAAAhB,IAAuBgF,EAAA2H,UAAA9H,eAAA,WAAsC,OAAA9C,KAAAC,KAAAD,KAAAkC,IAAA9D,KAAA8E,GAAA9E,KAAA+E,GAAA,GAAAnD,KAAAkC,IAAA9D,KAAAgF,GAAAhF,KAAAiF,GAAA,KAA0EJ,EAAA2H,UAAAvF,iBAAA,SAAAxH,GAA0C,IAAAC,EAAAD,EAAAmC,KAAAC,KAAAD,KAAAkC,IAAA9D,KAAA8E,GAAA9E,KAAA+E,GAAA,GAAAnD,KAAAkC,IAAA9D,KAAAgF,GAAAhF,KAAAiF,GAAA,IAAApE,GAAAb,KAAA+E,GAAA/E,KAAA8E,IAAApF,EAAAG,GAAAG,KAAAiF,GAAAjF,KAAAgF,IAAAtF,EAAuH,OAAOwC,EAAAlC,KAAA8E,GAAAjE,EAAAsB,EAAAnC,KAAAgF,GAAAnF,IAAyBgF,EAAA2H,UAAAqC,mBAAA,WAA2C,IAAApP,EAAAmC,KAAAC,MAAA7B,KAAA+E,GAAA/E,KAAA8E,KAAA9E,KAAA+E,GAAA/E,KAAA8E,KAAA9E,KAAAiF,GAAAjF,KAAAgF,KAAAhF,KAAAiF,GAAAjF,KAAAgF,KAAyF,OAAO9C,GAAAlC,KAAA+E,GAAA/E,KAAA8E,IAAArF,EAAA0C,GAAAnC,KAAAiF,GAAAjF,KAAAgF,IAAAvF,IAA6CoF,EAAA2H,UAAAsC,sBAAA,SAAArP,GAA+C,IAAAC,EAAAM,KAAAiH,iBAAAxH,GAAAoB,EAAAb,KAAA6O,qBAA2D,OAAO3M,EAAAxC,EAAAwC,EAAAC,EAAAzC,EAAAyC,EAAA4M,SAAAlO,EAAAqB,EAAA8M,SAAAnO,EAAAsB,IAAwC,IAAA2E,GAAA,SAAArH,GAAmB,SAAAC,EAAAD,GAAc,IAAAA,EAAA,YAAkB,QAAAM,EAAAW,EAAA6N,GAAA9O,GAAAmB,EAAA,MAAAE,EAAA,MAAAC,EAAA,EAAsCA,EAAAL,EAAAN,OAAWW,IAAA,MAAAL,EAAAK,GAAA,IAAAH,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAjB,EAAAqB,KAAA,aAAAT,EAAAK,GAAA,IAAAH,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,IAAAd,EAAAqB,KAAA,aAAAT,EAAAK,GAAA,IAAAF,GAAAe,KAAAC,KAAAD,KAAAkC,IAAAlD,EAAA,GAAAF,EAAAK,GAAA,MAAAa,KAAAkC,IAAAlD,EAAA,GAAAF,EAAAK,GAAA,OAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,KAAAH,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,WAAAL,EAAAK,GAAA,IAAAF,GAAAe,KAAAC,KAAAD,KAAAkC,IAAApD,EAAAK,GAAA,MAAAa,KAAAkC,IAAApD,EAAAK,GAAA,OAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,KAAAA,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,WAAAF,EAAAK,GAAA,IAAAF,GAAAe,KAAAiC,IAAAjD,EAAA,GAAAF,EAAAK,GAAA,IAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAF,EAAAK,GAAA,UAAAL,EAAAK,GAAA,IAAAF,GAAAe,KAAAiC,IAAAnD,EAAAK,GAAA,IAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,UAAAF,EAAAK,GAAA,IAAAF,GAAAe,KAAAiC,IAAAjD,EAAA,GAAAF,EAAAK,GAAA,IAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,KAAAH,EAAA,GAAAF,EAAAK,GAAA,UAAAL,EAAAK,GAAA,IAAAF,GAAAe,KAAAiC,IAAAnD,EAAAK,GAAA,IAAAjB,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,KAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,UAAAF,EAAAK,GAAA,UAAAL,EAAAK,GAAA,IAAAF,GAAAe,KAAAC,KAAAD,KAAAkC,IAAApD,EAAA,MAAAE,EAAA,MAAAgB,KAAAkC,IAAApD,EAAA,MAAAE,EAAA,OAAAd,EAAAqB,KAAA,IAAAiO,GAAAxO,EAAA,GAAAF,EAAA,MAAAE,EAAA,GAAAF,EAAA,QAAAE,EAAA,CAAAF,EAAA,MAAAA,EAAA,cAAAA,EAAAK,GAAA,IAAAhB,EAAA,IAAA0E,GAAA7D,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAjB,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAA,IAAA0E,GAAA7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,IAAAd,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAAgB,EAAA,qBAAAnB,QAAAc,EAAAK,EAAA,cAAA0D,GAAA7D,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAF,EAAAK,EAAA,GAAAL,EAAAK,EAAA,GAAAX,OAAA,KAAAQ,EAAA,GAAAF,EAAAK,EAAA,GAAAL,EAAAK,EAAA,GAAAX,OAAA,GAAAM,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,QAAA0D,GAAA7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAjB,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAAgB,EAAA,qBAAAnB,QAAAc,EAAAK,EAAA,cAAA0D,GAAA7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAb,EAAAqC,EAAAF,EAAAnC,EAAAwB,EAAAW,EAAAtB,EAAA,GAAAb,EAAAqC,EAAAD,EAAApC,EAAAwB,EAAAY,EAAAvB,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,QAAA0D,GAAA7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,IAAAd,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAA,IAAA0E,GAAA7D,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA5E,EAAAqB,KAAApB,GAAAa,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAD,EAAA,CAAAJ,EAAAK,GAAA,GAAAL,EAAAK,GAAA,WAAAL,EAAAK,GAAA,IAAAhB,EAAA,IAAA0E,GAAA7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA5D,EAAA,CAAAF,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAH,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,IAAAd,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAAgB,EAAA,qBAAAnB,QAAAc,EAAAK,EAAA,cAAA0D,GAAA7D,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAE,EAAA,KAAAF,EAAA,GAAAE,EAAA,GAAAJ,EAAAK,GAAA,GAAAL,EAAAK,GAAA,QAAAqO,GAAAxO,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAjB,EAAAqB,KAAApB,GAAAc,GAAAd,EAAA2E,iBAAA5D,EAAA,GAAAF,EAAA,GAAAE,EAAA,KAAAF,EAAA,GAAAE,EAAA,IAAAF,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,WAAAL,EAAAK,GAAA,IAAAhB,EAAAgB,EAAA,qBAAAnB,QAAAc,EAAAK,EAAA,cAAA0D,GAAA7D,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAE,EAAA,KAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,QAAAqO,GAAAxO,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA5D,EAAA,GAAAF,EAAA,GAAAE,EAAA,KAAAF,EAAA,GAAAE,EAAA,IAAAF,EAAA,CAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,IAAAd,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,IAAAhB,EAAA,IAAAoP,GAAAvO,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,IAAAjB,EAAAqB,KAAApB,IAAA,MAAAW,EAAAK,GAAA,KAAAhB,EAAA,IAAAoP,GAAAvO,EAAA,GAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAL,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAF,GAAAd,EAAA2E,iBAAA9D,EAAA,CAAAA,EAAA,GAAAF,EAAAK,GAAA,GAAAH,EAAA,GAAAF,EAAAK,GAAA,IAAAjB,EAAAqB,KAAApB,IAAAF,EAAAsB,KAAAN,GAAo7F,OAAAnB,EAAS,IAAAmB,EAAA,EAAAhB,EAAA,GAAAC,EAAA,GAAkBJ,EAAAgF,eAAA,WAA4B,OAAA7D,GAASnB,EAAAuH,iBAAA,SAAAxH,GAAgC,IAAAC,EAAAK,EAAAN,GAAW,OAAAK,EAAAJ,EAAAI,GAAAmH,iBAAAvH,EAAA2P,WAA2C3P,EAAAmP,mBAAA,SAAApP,GAAkC,IAAAC,EAAAK,EAAAN,GAAW,OAAAK,EAAAJ,EAAAI,GAAA+O,mBAAAnP,EAAA2P,WAA6C3P,EAAAoP,sBAAA,SAAArP,GAAqC,IAAAC,EAAAK,EAAAN,GAAW,OAAAK,EAAAJ,EAAAI,GAAAgP,sBAAApP,EAAA2P,WAAiD,IAAAtP,EAAA,SAAAN,GAAkBA,EAAA,EAAAA,EAAA,EAAAA,EAAAoB,IAAApB,EAAAoB,GAAmB,QAAAnB,EAAAG,EAAAO,OAAA,EAAqBP,EAAAH,IAAAD,GAAAI,EAAAH,GAAA,GAAgBA,IAAK,OAAY2P,SAAA5P,EAAAI,IAAZH,EAAY,GAAAI,EAAAJ,IAAwB,OAAAA,EAAAD,IAAYgH,GAAA,uPAAA6I,GAAA,uNAAAtH,GAAA,SAAAvI,EAAAC,GAAse,QAAAmB,EAAAhB,EAAAC,EAAAC,EAAAN,EAAAW,OAAAM,EAAA,IAAAE,EAAA,EAAmCA,EAAAb,EAAIa,KAAA,SAAAd,GAAiBD,EAAA,EAAAH,EAAA8E,QAAA,SAAA9E,EAAAmB,GAA4B,IAAAH,EAAAwE,EAAAzF,GAAAK,EAAAe,GAAAd,GAAAL,GAAsBG,GAAAa,MAAOb,EAAAa,MAAAb,EAAAgB,EAAAf,GAA1E,CAA2Fc,GAAIC,IAAAf,EAAAL,EAAA6B,OAAA,EAAAT,GAAApB,EAAA6B,OAAAiO,MAAA9P,EAAA,CAAAA,EAAAW,OAAA,GAAAgB,OAAAtB,MAA6V0P,GAAAvH,EAAOA,EAAAwH,UAAA,SAAAhQ,EAAAC,EAAAmB,EAAAhB,GAA+B,IAAAC,EAAAJ,KAAAU,OAAAL,EAAAD,EAAAJ,EAAA,GAAAmB,EAAApB,EAAAW,OAAAM,EAAAkB,KAAAiC,IAAA+E,GAAAnJ,EAAA,EAAAM,EAAAc,IAA8D,GAAAf,EAAA,QAAAc,EAAA,EAAAE,EAAApB,EAAAU,OAA4BQ,EAAAE,EAAIF,IAAA,CAAK,IAAAG,EAAArB,EAAAkB,GAAAC,EAAAU,EAAAX,EAAAE,EAAA,EAAApB,EAAAkB,EAAA,GAAAC,EAAApB,EAAAW,OAAuCM,GAAAkB,KAAAiC,IAAA+E,GAAAnJ,EAAAsB,EAAAQ,EAAAV,IAAyB,IAAAW,EAAA,EAAQ,IAAAZ,EAAA,EAAQA,EAAAf,EAAAO,OAAWQ,GAAA,GAAM,IAAAe,EAAA9B,EAAAe,GAAAC,EAAAkB,EAAAlC,EAAAe,EAAA,GAAAC,EAAAmB,EAAAnC,EAAAe,EAAA,GAAAC,EAAmCW,GAAAI,KAAAiC,KAAApE,EAAAkC,GAAAlC,EAAAuC,KAAAvC,EAAAsC,EAAA,GAAAtC,EAAAkC,EAAA,KAAAlC,EAAAkC,GAAAlC,EAAAsC,KAAAtC,EAAAuC,EAAA,GAAAvC,EAAAkC,EAAA,KAAqE,WAAAjB,GAAA,IAAAc,EAAA,EAAAI,KAAAiC,KAAArC,EAAAd,OAAwCuH,EAAAyH,QAAA,SAAAjQ,GAAwB,QAAAC,EAAAD,EAAA,MAAAW,OAAAS,EAAA,CAA4B8O,SAAA,GAAAC,MAAA,GAAAC,WAAAnQ,GAAkCG,EAAA,EAAAC,EAAA,EAASA,EAAAL,EAAAW,OAAWN,IAAA,CAAK,QAAAC,EAAA,EAAYA,EAAAN,EAAAK,GAAAM,OAAcL,IAAA,QAAAW,EAAA,EAAgBA,EAAAhB,EAAIgB,IAAAG,EAAA8O,SAAAxO,KAAA1B,EAAAK,GAAAC,GAAAW,IAAgCZ,EAAA,IAAAD,GAAAJ,EAAAK,EAAA,GAAAM,OAAAS,EAAA+O,MAAAzO,KAAAtB,IAAwC,OAAAgB,GAAU,IAAAiP,GAAA,SAAArQ,GAAmB,OAAAA,GAASmL,GAAA,SAAAnL,GAAgB,SAAAA,EAAA,OAAAqQ,GAAqB,IAAApQ,EAAAmB,EAAAhB,EAAAJ,EAAAkN,MAAA,GAAA7M,EAAAL,EAAAkN,MAAA,GAAA5M,EAAAN,EAAAiN,UAAA,GAAAhM,EAAAjB,EAAAiN,UAAA,GAAoE,gBAAAjN,EAAAmB,GAAqBA,IAAAlB,EAAAmB,EAAA,GAAW,IAAAC,EAAA,EAAAC,EAAAtB,EAAAW,OAAAmB,EAAA,IAAA0C,MAAAlD,GAAkC,IAAAQ,EAAA,IAAA7B,GAAAD,EAAA,IAAAI,EAAAE,EAAAwB,EAAA,IAAAV,GAAApB,EAAA,IAAAK,EAAAY,EAA0CI,EAAAC,GAAIQ,EAAAT,GAAArB,EAAAqB,OAAe,OAAAS,IAAUoJ,GAAA,SAAAlL,EAAAC,GAAkB,QAAAmB,EAAAhB,EAAAJ,EAAAW,OAAAN,EAAAD,EAAAH,EAA2BI,IAAAD,GAAMgB,EAAApB,EAAAK,GAAAL,EAAAK,KAAAL,EAAAI,GAAAJ,EAAAI,GAAAgB,GAA2BkP,GAAA,SAAAtQ,EAAAC,GAAkB,6BAAAA,EAAA+K,KAAA,CAAqCA,KAAA,oBAAAuF,SAAAtQ,EAAAqL,WAAA1F,IAAA,SAAA3F,GAA+D,OAAA0K,GAAA3K,EAAAC,MAAiB0K,GAAA3K,EAAAC,IAASyL,GAAA,SAAA1L,EAAAC,GAAkB,SAAAmB,EAAAnB,GAAc,IAAAmB,EAAAhB,EAAAJ,EAAAqL,KAAApL,EAAA,GAAAA,KAAAI,EAAAD,EAAA,GAAgC,OAAAJ,EAAAoL,WAAAhK,EAAA,MAAAhB,EAAA2E,QAAA,SAAA/E,GAAkDoB,EAAA,IAAApB,EAAA,GAAAoB,EAAA,IAAApB,EAAA,MAAsBoB,EAAAhB,IAAAO,OAAA,GAAAV,EAAA,GAAAmB,EAAAf,GAAA,CAAAA,EAAAe,GAAmC,SAAAhB,EAAAJ,EAAAC,GAAgB,QAAAmB,KAAApB,EAAA,CAAgB,IAAAI,EAAAJ,EAAAoB,UAAWnB,EAAAG,EAAAoQ,cAAApQ,EAAAoQ,aAAApQ,EAAAqQ,IAAArQ,EAAA2E,QAAA,SAAA/E,GAAoEK,EAAAL,EAAA,GAAAA,KAAA,IAAcmB,EAAAO,KAAAtB,IAAa,IAAAC,EAAA,GAAQC,EAAA,GAAKW,EAAA,GAAKE,EAAA,GAAAE,GAAA,EAAW,OAAApB,EAAA8E,QAAA,SAAA3D,EAAAhB,GAA+B,IAAAC,EAAAC,EAAAN,EAAAqL,KAAAjK,EAAA,GAAAA,KAAyBd,EAAAK,OAAA,IAAAL,EAAA,QAAAA,EAAA,QAAAD,EAAAJ,IAAAoB,GAAApB,EAAAoB,GAAAD,EAAAnB,EAAAG,GAAAC,KAAyDJ,EAAA8E,QAAA,SAAA/E,GAAwB,IAAAC,EAAAG,EAAAC,EAAAe,EAAApB,GAAAmB,EAAAd,EAAA,GAAAgB,EAAAhB,EAAA,GAA6B,GAAAJ,EAAAgB,EAAAE,GAAA,UAAAF,EAAAhB,EAAAwQ,KAAAxQ,EAAAyB,KAAA1B,GAAAC,EAAAwQ,IAAApP,EAAAjB,EAAAE,EAAAe,GAAA,QAAuDf,EAAAF,EAAAoQ,OAAkB,IAAAlP,EAAAlB,IAAAH,MAAA0B,OAAAvB,GAA0BE,EAAAgB,EAAAkP,MAAAvQ,EAAAuQ,OAAAvP,EAAAK,EAAAmP,IAAArQ,EAAAqQ,KAAAnP,OAAoChB,EAAAL,EAAAuQ,OAAAvP,EAAAhB,EAAAwQ,KAAAxQ,OAA2B,GAAAA,EAAAK,EAAAe,GAAA,UAAAf,EAAAL,EAAAuQ,OAAAvQ,EAAAgP,QAAAjP,GAAAC,EAAAuQ,MAAArP,EAAAf,EAAAa,EAAAE,GAAA,QAAmEF,EAAAb,EAAAqQ,KAAgB,IAAA3O,EAAA1B,IAAAH,IAAAG,EAAAuB,OAAA1B,GAA0BK,EAAAwB,EAAA0O,MAAApQ,EAAAoQ,OAAAvP,EAAAa,EAAA2O,IAAAxQ,EAAAwQ,KAAA3O,OAAoCxB,EAAAL,EAAAuQ,OAAAvP,EAAAhB,EAAAwQ,KAAAxQ,OAA2BK,GAAAL,EAAA,CAAAD,IAAAwQ,MAAArP,GAAAF,EAAAhB,EAAAwQ,IAAApP,GAAApB,IAAqCG,EAAAa,EAAAX,GAAAF,EAAAE,EAAAW,GAAAhB,EAAA8E,QAAA,SAAA/E,GAAsCK,EAAAL,EAAA,GAAAA,MAAAmB,EAAAO,KAAA,CAAA1B,MAAyBmB,GAAIuP,GAAA,SAAA1Q,EAAAC,GAAkB,QAAAmB,EAAA,EAAAhB,EAAAJ,EAAAW,OAAuBS,EAAAhB,GAAI,CAAE,IAAAC,EAAAe,EAAAhB,IAAA,EAAcJ,EAAAK,GAAAJ,EAAAmB,EAAAf,EAAA,EAAAD,EAAAC,EAAiB,OAAAe,GAASuP,GAAA,SAAA3Q,GAAgB,SAAAC,EAAAD,EAAAC,GAAgBD,EAAA+E,QAAA,SAAA/E,GAAsBA,EAAA,IAAAA,MAAY,IAAAoB,EAAAf,EAAAL,GAAWoB,IAAAM,KAAAzB,GAAAI,EAAAL,GAAA,CAAAC,KAAuB,SAAAmB,EAAApB,EAAAoB,GAAgBpB,EAAA+E,QAAA,SAAA/E,GAAsBC,EAAAD,EAAAoB,KAAkI,IAAAf,EAAA,GAAQC,EAAAN,EAAA4F,IAAA,WAAoB,WAAS3E,EAAA,CAAK2P,WAAA3Q,EAAA4Q,gBAAAzP,EAAA0P,QAAA1P,EAAA2P,aAAA,SAAA/Q,EAAAC,GAAoED,EAAA+E,QAAA,SAAA/E,GAAsBoB,EAAApB,EAAAC,OAAwB,QAAAkB,KAAbnB,EAAA+E,QAAxQ,SAAA3E,EAAAJ,EAAAC,GAAgB,uBAAAD,EAAAgL,KAAAhL,EAAAsL,WAAAvG,QAAA,SAAA/E,GAA+DI,EAAAJ,EAAAC,KAAOD,EAAAgL,QAAA/J,KAAAjB,EAAAgL,MAAAhL,EAAAqL,KAAApL,KAA+LI,EAAA,QAAAgB,EAAAhB,EAAAc,GAAAG,EAAAD,EAAAV,OAAAmB,EAAA,EAA6CA,EAAAR,IAAIQ,EAAA,QAAAC,EAAAD,EAAA,EAAkBC,EAAAT,IAAIS,EAAA,CAAK,IAAAG,EAAAI,EAAAjB,EAAAS,GAAAS,EAAAlB,EAAAU,IAAoBG,EAAA5B,EAAAgC,IAAAnB,EAAAuP,GAAAxO,EAAAK,SAAAL,EAAAL,OAAAV,EAAA,EAAAoB,IAAAL,EAAA5B,EAAAiC,IAAApB,EAAAuP,GAAAxO,EAAAI,SAAAJ,EAAAL,OAAAV,EAAA,EAAAmB,GAAkF,OAAAhC,GAAS0Q,GAAA,SAAAhR,EAAAC,GAAkB,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAgR,KAA+BC,GAAA,SAAAlR,GAAgB,WAAAA,EAAAW,SAAAX,EAD1gJ,SAAAA,GAAe,gBAAAC,EAAAmB,GAAqB,OAAA4P,GAAAhR,EAAAC,GAAAmB,IACs+I+P,CAAAnR,IAAA,CAAgCoR,KAAA,SAAAnR,EAAAmB,EAAAhB,EAAAC,GAAuB,UAAAD,MAAA,SAAAC,MAAAJ,EAAAU,QAAyCP,EAAAC,GAAI,CAAE,IAAAC,EAAAF,EAAAC,IAAA,EAAcL,EAAAC,EAAAK,GAAAc,GAAA,EAAAhB,EAAAE,EAAA,EAAAD,EAAAC,EAAsB,OAAAF,GAASiR,MAAA,SAAApR,EAAAmB,EAAAhB,EAAAC,GAAyB,UAAAD,MAAA,SAAAC,MAAAJ,EAAAU,QAAyCP,EAAAC,GAAI,CAAE,IAAAC,EAAAF,EAAAC,IAAA,EAAcL,EAAAC,EAAAK,GAAAc,GAAA,EAAAf,EAAAC,EAAAF,EAAAE,EAAA,EAAsB,OAAAF,KAAW2L,IAAAmF,GAAAF,IAAAK,MAAAlP,KAAAC,KAAA,IAAAD,KAAAC,KAAA,IAAAD,KAAAC,KAAA,YAAApC,EAAAC,GAA+E,OADzyI,SAAAD,EAAAC,GAAiB,QAAAmB,EAAApB,EAAAsR,QAAAC,UAAAjG,WAAAlL,EAAA8Q,GAAA,SAAAlR,GAA0D,OAAAA,EAAAwR,OAAcJ,KAAOhQ,EAAAT,OAAAV,IAAW,WAAa,IAAAA,EAAAmB,EAAA,GAAAf,EAAAsQ,GAAAvP,GAAA,MAAAd,EAAAc,EAAAf,GAAAY,EAAAuK,GAAAxL,EAAA,CAAAC,EAAAK,IAA8CW,EAAAuQ,KAAAvR,EAAAuR,KAAAlR,EAAAkR,KAAAvQ,EAAA+J,KAAA,UAAA/J,EAAAoK,KAAApK,EAAAoK,KAAA,GAAAjK,EAAAS,OAAAxB,EAAA,GAAAe,EAAAqQ,QAAArQ,EAAAS,OAAAzB,EAAAgB,EAAAH,EAAAuQ,MAAA,EAAAvQ,GAA3D,GAAuK,GAAAhB,EAAAmB,EAAAT,OAAA,UAAA+Q,WAAA,gCAAAzR,EAAA,YAAiF,OAAAqQ,GAAAtQ,IAAAsR,QAAAC,WAAAhB,SAAA3K,IAAA,SAAA5F,GAA0D,OAAAA,EAAAiL,SAAAM,YAAA,GAAArD,MAAAlI,EAAAiL,SAAAM,YAAA,KAC44HoG,CAD5yJ,SAAA3R,EAAAC,GAAiB,IAAAmB,EAAA,GAAQhB,EAAA,CAAI4K,KAAA,WAAAsG,QAAA,CAAyBC,UAAA,CAAWvG,KAAA,qBAAAM,WAAA,KAAyCD,KAAA,IAAU,OAAArL,EAAA+E,QAAA,SAAA/E,GAA6B,IAAAK,EAAA,GAASL,EAAA+E,QAAA,SAAA/E,EAAAM,GAAwB,IAAAW,EAAAjB,EAAA,GAAAA,EAAA,GAAAA,EAAA2G,KAAA,KAAA3G,EAAA,OAAAA,EAAA,GAAAmB,EAAAnB,EAAA4F,IAAA,SAAA5F,GAA8D,OAAAC,EAAAD,KAAciB,KAAAG,EAAAf,EAAAqB,MAAAN,EAAAH,KAAAZ,EAAAqB,KAAAN,EAAAH,GAAAb,EAAAiL,KAAA1K,QAAAP,EAAAiL,KAAA3J,KAAAP,MAAiEf,EAAAkR,QAAAC,UAAAjG,WAAA5J,KAAA,CAAuCsJ,KAAA,UAAAwG,KAAArP,KAAAiC,IAAA+D,GAAAnI,EAAA4F,IAAA,SAAA5F,GAAkD,OAAAC,EAAAD,EAAA,QAAeqL,KAAA,CAAAhL,OAAeD,EAAAkR,QAAAC,UAAAjG,WAAAzC,KAAA,SAAA7I,EAAAC,GAAoD,OAAAD,EAAAwR,KAAAvR,EAAAuR,OAAqBpR,EAC6yIwR,CADz0H,SAAA5R,GAAe,QAAAC,EAAA8P,GAAA/P,EAAA6R,OAAA,SAAA7R,EAAAC,GAAoC,OAAAD,EAAA2B,OAAA,CAAA1B,EAAA,KAAAA,EAAA,MAA+B,KAAAmB,EAAA,GAAAhB,EAAA,EAAAC,EAAAJ,EAAAU,OAA0BP,EAAAC,EAAID,GAAA,EAAAgB,EAAAM,KAAA,EAAAzB,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAG,EAAA,GAAAH,EAAAG,EAAA,KAAAH,EAAAG,EAAA,GAAAH,EAAAG,MAA2D,OAAAgB,EAC8pH0Q,CAAA9R,MAAAC,KAAyBmM,GAAA,SAAApM,EAAAC,GAAmB,GAAAD,EAAAW,OAAA,SAAAX,EAAA4F,IAAA,SAAA5F,EAAAC,GAAyC,OAAAA,IAAW,IAAAmB,EAAApB,EAAA4F,IAAA,SAAA5F,GAAwB,OAAAC,EAAA2F,IAAA,SAAA3F,GAAyB,OAD5/G,SAAAD,EAAAC,GAAiB,IAAAmB,EAAAqE,EAAAQ,EAAAjG,GAAAiG,EAAAhG,IAAmB,OAAAmB,IACw9G2Q,CAAA/R,EAAAC,OAAmB,OADzzH,SAAAD,EAAAC,EAAAmB,GAAiP,IAAAf,EAAA,IAAAC,EAAAN,EAAA4F,IAAA,SAAA5F,EAAAC,GAAgC,OAAAA,IAAW,OAAzQ,SAAAG,EAAAJ,EAAAC,EAAAgB,QAAkB,IAAAhB,MAAA,aAAAgB,MAAA,GAAqC,QAAAE,EAAA,EAAYA,EAAAnB,EAAAW,OAAWQ,IAAA,CAAK,IAAAE,EAAArB,EAAA6B,OAAAV,EAAA,GAAAG,EAAAF,EAAAC,EAAA,IAAApB,EAAAU,QAAwCM,EAAAK,EAAAjB,IAAAL,EAAAW,OAAAP,EAAAJ,EAAAwB,QAAAvB,EAAA0B,OAAAN,GAAAJ,EAAAK,IAAAjB,EAAAY,EAAAK,EAAAhB,EAAAL,EAAA0B,OAAAN,KAAArB,EAAAW,QAAAX,EAAA6B,OAAAV,EAAA,EAAAE,EAAA,KAA8IjB,CAAAE,KAC6hH0R,CAAAhS,EAAAC,EAAAmB,IAAkBpB,EAAAiS,YAA5iH,SAAAjS,EAAAC,EAAAmB,QAAoB,IAAAA,MAAA,IAAmB,IAAAhB,EAAAgB,EAAAwK,sBAAyB,IAAAxL,MAAA,IAAmB,IAAAC,EAAAe,EAAAyK,YAAe,IAAAxL,OAAA,GAAmB,IAAAC,EAAAuH,EAAA7H,EAAAI,GAAAa,EAAA4G,EAAA5H,EAAAG,GAAAe,EAAAmH,EAAAhI,EAAAW,EAAAZ,GAAkC,OAAAA,GAAA,iBAAAL,GAAA,iBAAAC,EAAAkB,EAAA,SAAAC,GAA+D,OAAAA,EAAA,uBAAApB,IAAA,EAAAoB,EAAA,uBAAAnB,IAAAkB,EAAAC,KAAs1GpB,EAAAkS,SAAAvG,GAAA3L,EAAAmS,QADrlG,SAAAnS,EAAAC,EAAAmB,QAAmB,IAAAA,MAAA,IAAmB,IAAAhB,EAAAgB,EAAAwK,sBAAyB,IAAAxL,MAAA,IAAmB,IAAAC,EAAAe,EAAAyK,YAAe,IAAAxL,OAAA,GAAmB,IAAAC,EAAAc,EAAA0K,YAAe,IAAAxL,OAAA,GAAmB,IAAAW,EAAA0K,GAAA1L,EAAAD,EAAA,CAAc4L,iBAAAxL,EAAAyL,OAAAxL,EAAAyL,OAAAxL,IAAuC,OAAAA,EAAA,SAAAN,GAAqB,OAAAiB,EAAA,EAAAjB,IAAciB,EAAA2E,IAAA,SAAA5F,GAAmB,gBAAAC,GAAmB,OAAAD,EAAA,EAAAC,OACi0FD,EAAAoS,eADhzF,SAAApS,EAAAC,EAAAmB,QAAmB,IAAAA,MAAA,IAAmB,IAAAhB,EAAAgB,EAAAwK,sBAAyB,IAAAxL,MAAA,IAAmB,IAAAC,EAAAe,EAAAyK,YAAe,IAAAxL,OAAA,GAAmB,IAAAC,EAAAc,EAAA0K,OAAe,YAAAxL,OAAA,IAAAkE,MAAAsD,QAAA9H,KAAAwE,MAAAsD,QAAA7H,IAAAD,EAAAW,SAAAV,EAAAU,SAAAX,EAAAW,OAAA,UAAAoG,UAAA8I,IAAmH,IAAA5O,EAAAE,EAAAE,EAAA,SAAArB,GAAsB,OAAA6H,EAAA7H,EAAAI,IAAckB,EAAAtB,EAAA4F,IAAAvE,GAAAS,EAAA7B,EAAA2F,IAAAvE,GAAuB,OAAAf,GAAAN,EAAA+H,MAAA,SAAA/H,GAA8B,uBAAAA,MAAyBiB,EAAAjB,EAAAwB,MAAA,IAAAvB,EAAA8H,MAAA,SAAA/H,GAAsC,uBAAAA,MAAyBmB,EAAAlB,EAAAuB,MAAA,MAAAP,EAAAjB,EAAAwB,MAAA,GAAAL,EAAAlB,EAAAuB,MAAA,IAAAwK,GAAA1K,EAAAQ,EAAA,CAAuD+J,OAAAxL,EAAAyL,OAAAxL,EAAA4L,GAAAjL,EAAAkL,GAAAhL,EAAA8K,OAAA,KACk1EjM,EAAAqS,gBADvvb,SAAArS,GAAc,OAAAsG,EAAAF,EAAApG,KACyubA,EAAAsS,aAAAxM,EAAA9F,EAAAuS,WAAAlG,GAAArM,EAAAwS,SADh/C,SAAAxS,EAAAC,EAAAmB,EAAAhB,EAAAC,GAAuB,IAAAC,EAAA+L,GAAApM,EAAAmB,EAAAhB,EAAAJ,EAAAK,GAAoB,gBAAAL,GAAmB,OAAAM,EAAA,EAAAN,KACk7CA,EAAAyS,SAAA9F,GAAA3M,EAAA0S,OAD31C,SAAA1S,EAAAC,EAAAmB,EAAAhB,EAAAC,EAAAC,GAAyB,IAAAW,EAAA0L,GAAA1M,EAAAmB,EAAAhB,EAAAC,EAAAL,EAAAM,GAAsB,gBAAAN,GAAmB,OAAAiB,EAAA,EAAAjB,KACyxC2S,OAAAC,eAAA5S,EAAA,cAAmM6S,OAAA,IADt7pB5S,CAAA6S,qCCA5D,ICAQC,EAAA,SAAAzS,EAAAyC,GACf,OAAAzC,EAAAyC,GAAA,EAAAzC,EAAAyC,EAAA,EAAAzC,GAAAyC,EAAA,EAAAkO,KCCe+B,EAAA,SAAAC,GA0Bf,IAAAlR,EAxBA,OADA,IAAAkR,EAAAtS,SAyBAoB,EAzBAkR,IA0BA,SAAAtQ,EAAAF,GACA,OAAWsQ,EAAShR,EAAAY,GAAAF,KA1BpB,CACA2O,KAAA,SAAA9Q,EAAAmC,EAAAyQ,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAA7S,EAAAK,QACAuS,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAA3S,EAAA8S,GAAA3Q,GAAA,EAAAyQ,EAAAE,EAAA,EACAD,EAAAC,EAEA,OAAAF,GAEA7B,MAAA,SAAA/Q,EAAAmC,EAAAyQ,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAA7S,EAAAK,QACAuS,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAF,EAAA3S,EAAA8S,GAAA3Q,GAAA,EAAA0Q,EAAAC,EACAF,EAAAE,EAAA,EAEA,OAAAF,KCpBA,IAAAG,EAAsBL,EAASD,GACxBM,EAAAhC,MACAgC,EAAAjC,KCHQ,ICFXkC,EAAK9O,MAAAuI,UAEUuG,EAAK9R,MACP8R,EAAK1N,ICHtBzD,KAAAC,KAAA,IACAD,KAAAC,KAAA,IACAD,KAAAC,KAAA,GCFe,ICAAmR,EAAA,SAAAC,GAQf,IAPA,IACA5Q,EAGA6Q,EACAC,EALAzT,EAAAuT,EAAA7S,OAEAN,GAAA,EACA4H,EAAA,IAIA5H,EAAAJ,GAAAgI,GAAAuL,EAAAnT,GAAAM,OAGA,IAFA8S,EAAA,IAAAjP,MAAAyD,KAEAhI,GAAA,GAGA,IADA2C,GADA8Q,EAAAF,EAAAvT,IACAU,SACAiC,GAAA,GACA6Q,IAAAxL,GAAAyL,EAAA9Q,GAIA,OAAA6Q,GCnBgBjP,MAAAuI,UAAAvL,MCAhB,IAAAmS,EAAA,CAAYd,MAAA,cAEZ,SAAAe,IACA,QAA8C5T,EAA9CK,EAAA,EAAAJ,EAAA4T,UAAAlT,OAAAqD,EAAA,GAAkD3D,EAAAJ,IAAOI,EAAA,CACzD,KAAAL,EAAA6T,UAAAxT,GAAA,KAAAL,KAAAgE,EAAA,UAAAkL,MAAA,iBAAAlP,GACAgE,EAAAhE,GAAA,GAEA,WAAA8T,EAAA9P,GAGA,SAAA8P,EAAA9P,GACAzD,KAAAyD,IAGA,SAAA+P,EAAAC,EAAAC,GACA,OAAAD,EAAAvN,OAAAD,MAAA,SAAAZ,IAAA,SAAA5F,GACA,IAAAkU,EAAA,GAAA7T,EAAAL,EAAAG,QAAA,KAEA,GADAE,GAAA,IAAA6T,EAAAlU,EAAAwB,MAAAnB,EAAA,GAAAL,IAAAwB,MAAA,EAAAnB,IACAL,IAAAiU,EAAAE,eAAAnU,GAAA,UAAAkP,MAAA,iBAAAlP,GACA,OAAYgL,KAAAhL,EAAAkU,UA6CZ,SAAAE,EAAApJ,EAAAkJ,GACA,QAAApS,EAAAzB,EAAA,EAAAJ,EAAA+K,EAAArK,OAAqCN,EAAAJ,IAAOI,EAC5C,IAAAyB,EAAAkJ,EAAA3K,IAAA6T,SACA,OAAApS,EAAA+Q,MAKA,SAAAwB,EAAArJ,EAAAkJ,EAAAI,GACA,QAAAjU,EAAA,EAAAJ,EAAA+K,EAAArK,OAAkCN,EAAAJ,IAAOI,EACzC,GAAA2K,EAAA3K,GAAA6T,SAAA,CACAlJ,EAAA3K,GAAAsT,EAAA3I,IAAAxJ,MAAA,EAAAnB,GAAAsB,OAAAqJ,EAAAxJ,MAAAnB,EAAA,IACA,MAIA,OADA,MAAAiU,GAAAtJ,EAAAtJ,KAAA,CAAmCwS,OAAArB,MAAAyB,IACnCtJ,EAzDA8I,EAAA/G,UAAA6G,EAAA7G,UAAA,CACAoC,YAAA2E,EACAlQ,GAAA,SAAA2Q,EAAAD,GACA,IAEAtU,EAFAgE,EAAAzD,KAAAyD,EACAoB,EAAA2O,EAAAQ,EAAA,GAAAvQ,GAEA3D,GAAA,EACAJ,EAAAmF,EAAAzE,OAGA,KAAAkT,UAAAlT,OAAA,IAOA,SAAA2T,GAAA,mBAAAA,EAAA,UAAApF,MAAA,qBAAAoF,GACA,OAAAjU,EAAAJ,GACA,GAAAD,GAAAuU,EAAAnP,EAAA/E,IAAA2K,KAAAhH,EAAAhE,GAAAqU,EAAArQ,EAAAhE,GAAAuU,EAAAL,KAAAI,QACA,SAAAA,EAAA,IAAAtU,KAAAgE,IAAAhE,GAAAqU,EAAArQ,EAAAhE,GAAAuU,EAAAL,KAAA,MAGA,OAAA3T,KAZA,OAAAF,EAAAJ,GAAA,IAAAD,GAAAuU,EAAAnP,EAAA/E,IAAA2K,QAAAhL,EAAAoU,EAAApQ,EAAAhE,GAAAuU,EAAAL,OAAA,OAAAlU,GAcAwU,KAAA,WACA,IAAAA,EAAA,GAAiBxQ,EAAAzD,KAAAyD,EACjB,QAAAhE,KAAAgE,EAAAwQ,EAAAxU,GAAAgE,EAAAhE,GAAAwB,QACA,WAAAsS,EAAAU,IAEAC,KAAA,SAAAzJ,EAAA0J,GACA,IAAAzU,EAAA4T,UAAAlT,OAAA,aAAAV,EAAAD,EAAA2U,EAAA,IAAAnQ,MAAAvE,GAAAI,EAAA,EAAkFA,EAAAJ,IAAOI,EAAAsU,EAAAtU,GAAAwT,UAAAxT,EAAA,GACzF,IAAAE,KAAAyD,EAAAmQ,eAAAnJ,GAAA,UAAAkE,MAAA,iBAAAlE,GACA,IAAA3K,EAAA,EAAAJ,GAAAD,EAAAO,KAAAyD,EAAAgH,IAAArK,OAA+CN,EAAAJ,IAAOI,EAAAL,EAAAK,GAAAwS,MAAA/C,MAAA4E,EAAAC,IAEtD7E,MAAA,SAAA9E,EAAA0J,EAAAC,GACA,IAAApU,KAAAyD,EAAAmQ,eAAAnJ,GAAA,UAAAkE,MAAA,iBAAAlE,GACA,QAAAhL,EAAAO,KAAAyD,EAAAgH,GAAA3K,EAAA,EAAAJ,EAAAD,EAAAW,OAAmDN,EAAAJ,IAAOI,EAAAL,EAAAK,GAAAwS,MAAA/C,MAAA4E,EAAAC,KAuB3C,IAAAC,EAAA,ECnFRC,EAAA,+BAEQC,EAAA,CACfC,IAAA,6BACAF,QACAG,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCCLeC,EAAA,SAAAjB,GACf,IAAAkB,EAAAlB,GAAA,GAAA7T,EAAA+U,EAAAjV,QAAA,KAEA,OADAE,GAAA,cAAA+U,EAAAlB,EAAA1S,MAAA,EAAAnB,MAAA6T,IAAA1S,MAAAnB,EAAA,IACSyU,EAAUX,eAAAiB,GAAA,CAA2BC,MAAOP,EAAUM,GAAAE,MAAApB,GAAsBA,GCctE,IAAAqB,EAAA,SAAArB,GACf,IAAAsB,EAAiBL,EAASjB,GAC1B,OAAAsB,EAAAF,MARA,SAAAE,GACA,kBACA,OAAAjV,KAAAkV,cAAAtO,gBAAAqO,EAAAH,MAAAG,EAAAF,SAZA,SAAApB,GACA,kBACA,IAAAhN,EAAA3G,KAAAkV,cACAC,EAAAnV,KAAAoV,aACA,OAAAD,IAAmBb,GAAK3N,EAAA0O,gBAAAD,eAA8Cd,EACtE3N,EAAA2O,cAAA3B,GACAhN,EAAAC,gBAAAuO,EAAAxB,MAcAsB,ICvBA,SAAAM,KAEe,IAAAC,EAAA,SAAAC,GACf,aAAAA,EAAAF,EAAA,WACA,OAAAvV,KAAA0V,cAAAD,KCJA,SAASE,IACT,SAGe,IAAAC,EAAA,SAAAH,GACf,aAAAA,EAA4BE,EAAK,WACjC,OAAA3V,KAAA6V,iBAAAJ,KCNeK,EAAA,SAAAL,GACf,kBACA,OAAAzV,KAAA+V,QAAAN,KCFeO,EAAA,SAAAC,GACf,WAAAhS,MAAAgS,EAAA7V,SCMO,SAAA8V,EAAAC,EAAAC,GACPpW,KAAAkV,cAAAiB,EAAAjB,cACAlV,KAAAoV,aAAAe,EAAAf,aACApV,KAAAqW,MAAA,KACArW,KAAAsW,QAAAH,EACAnW,KAAAuW,SAAAH,EAGAF,EAAA1J,UAAA,CACAoC,YAAAsH,EACAM,YAAA,SAAAC,GAAgC,OAAAzW,KAAAsW,QAAAI,aAAAD,EAAAzW,KAAAqW,QAChCK,aAAA,SAAAD,EAAAtO,GAAuC,OAAAnI,KAAAsW,QAAAI,aAAAD,EAAAtO,IACvCuN,cAAA,SAAAD,GAAqC,OAAAzV,KAAAsW,QAAAZ,cAAAD,IACrCI,iBAAA,SAAAJ,GAAwC,OAAAzV,KAAAsW,QAAAT,iBAAAJ,KCpBzB,ICIfkB,EAAA,IAEA,SAAAC,EAAAT,EAAAU,EAAAC,EAAAb,EAAAc,EAAAtW,GASA,IARA,IACAuW,EADAlX,EAAA,EAEAmX,EAAAJ,EAAAzW,OACA8W,EAAAzW,EAAAL,OAKQN,EAAAoX,IAAgBpX,GACxBkX,EAAAH,EAAA/W,KACAkX,EAAAT,SAAA9V,EAAAX,GACAmW,EAAAnW,GAAAkX,GAEAF,EAAAhX,GAAA,IAAqBoW,EAASC,EAAA1V,EAAAX,IAK9B,KAAQA,EAAAmX,IAAiBnX,GACzBkX,EAAAH,EAAA/W,MACAiX,EAAAjX,GAAAkX,GAKA,SAAAG,EAAAhB,EAAAU,EAAAC,EAAAb,EAAAc,EAAAtW,EAAA2W,GACA,IAAAtX,EACAkX,EAKAK,EAJAC,EAAA,GACAL,EAAAJ,EAAAzW,OACA8W,EAAAzW,EAAAL,OACAmX,EAAA,IAAAtT,MAAAgT,GAKA,IAAAnX,EAAA,EAAaA,EAAAmX,IAAiBnX,GAC9BkX,EAAAH,EAAA/W,MACAyX,EAAAzX,GAAAuX,EAAAV,EAAAS,EAAAlD,KAAA8C,IAAAT,SAAAzW,EAAA+W,GACAQ,KAAAC,EACAP,EAAAjX,GAAAkX,EAEAM,EAAAD,GAAAL,GAQA,IAAAlX,EAAA,EAAaA,EAAAoX,IAAgBpX,GAE7BkX,EAAAM,EADAD,EAAAV,EAAAS,EAAAlD,KAAAiC,EAAA1V,EAAAX,KAAAW,MAEAwV,EAAAnW,GAAAkX,EACAA,EAAAT,SAAA9V,EAAAX,GACAwX,EAAAD,GAAA,MAEAP,EAAAhX,GAAA,IAAqBoW,EAASC,EAAA1V,EAAAX,IAK9B,IAAAA,EAAA,EAAaA,EAAAmX,IAAiBnX,GAC9BkX,EAAAH,EAAA/W,KAAAwX,EAAAC,EAAAzX,MAAAkX,IACAD,EAAAjX,GAAAkX,GClDA,SAASQ,EAASzX,EAAAyC,GAClB,OAAAzC,EAAAyC,GAAA,EAAAzC,EAAAyC,EAAA,EAAAzC,GAAAyC,EAAA,EAAAkO,ICpBA,SAAA+G,EAAA9D,GACA,kBACA3T,KAAA0X,gBAAA/D,IAIA,SAAAgE,EAAA1C,GACA,kBACAjV,KAAA4X,kBAAA3C,EAAAH,MAAAG,EAAAF,QAIA,SAAA8C,EAAAlE,EAAArB,GACA,kBACAtS,KAAA8X,aAAAnE,EAAArB,IAIA,SAAAyF,EAAA9C,EAAA3C,GACA,kBACAtS,KAAA6G,eAAAoO,EAAAH,MAAAG,EAAAF,MAAAzC,IAIA,SAAA0F,EAAArE,EAAArB,GACA,kBACA,IAAArQ,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACA,MAAArR,EAAAjC,KAAA0X,gBAAA/D,GACA3T,KAAA8X,aAAAnE,EAAA1R,IAIA,SAAAgW,EAAAhD,EAAA3C,GACA,kBACA,IAAArQ,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACA,MAAArR,EAAAjC,KAAA4X,kBAAA3C,EAAAH,MAAAG,EAAAF,OACA/U,KAAA6G,eAAAoO,EAAAH,MAAAG,EAAAF,MAAA9S,IAIe,IC1CAiW,EAAA,SAAAlB,GACf,OAAAA,EAAA9B,eAAA8B,EAAA9B,cAAAiD,aACAnB,EAAArQ,UAAAqQ,GACAA,EAAAmB,aCDA,SAAAC,EAAAzE,GACA,kBACA3T,KAAAqY,MAAAC,eAAA3E,IAIA,SAAA4E,EAAA5E,EAAArB,EAAAkG,GACA,kBACAxY,KAAAqY,MAAAI,YAAA9E,EAAArB,EAAAkG,IAIA,SAAAE,EAAA/E,EAAArB,EAAAkG,GACA,kBACA,IAAAvW,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACA,MAAArR,EAAAjC,KAAAqY,MAAAC,eAAA3E,GACA3T,KAAAqY,MAAAI,YAAA9E,EAAA1R,EAAAuW,IAaO,SAAAG,EAAA3B,EAAArD,GACP,OAAAqD,EAAAqB,MAAAO,iBAAAjF,IACSuE,EAAWlB,GAAA6B,iBAAA7B,EAAA,MAAA4B,iBAAAjF,GCjCpB,SAAAmF,EAAAnF,GACA,yBACA3T,KAAA2T,IAIA,SAAAoF,EAAApF,EAAArB,GACA,kBACAtS,KAAA2T,GAAArB,GAIA,SAAA0G,EAAArF,EAAArB,GACA,kBACA,IAAArQ,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACA,MAAArR,SAAAjC,KAAA2T,GACA3T,KAAA2T,GAAA1R,GChBA,SAAAgX,EAAA3N,GACA,OAAAA,EAAApF,OAAAD,MAAA,SAGA,SAAAiT,EAAAlC,GACA,OAAAA,EAAAkC,WAAA,IAAAC,EAAAnC,GAGA,SAAAmC,EAAAnC,GACAhX,KAAAoZ,MAAApC,EACAhX,KAAAqZ,OAAAJ,EAAAjC,EAAAsC,aAAA,cAuBA,SAAAC,EAAAvC,EAAAwC,GAEA,IADA,IAAAC,EAAAP,EAAAlC,GAAAlX,GAAA,EAAAJ,EAAA8Z,EAAApZ,SACAN,EAAAJ,GAAA+Z,EAAAC,IAAAF,EAAA1Z,IAGA,SAAA6Z,EAAA3C,EAAAwC,GAEA,IADA,IAAAC,EAAAP,EAAAlC,GAAAlX,GAAA,EAAAJ,EAAA8Z,EAAApZ,SACAN,EAAAJ,GAAA+Z,EAAAG,OAAAJ,EAAA1Z,IAGA,SAAA+Z,EAAAL,GACA,kBACAD,EAAAvZ,KAAAwZ,IAIA,SAAAM,EAAAN,GACA,kBACAG,EAAA3Z,KAAAwZ,IAIA,SAAAO,EAAAP,EAAAlH,GACA,mBACAA,EAAA/C,MAAAvP,KAAAsT,WAAAiG,EAAAI,GAAA3Z,KAAAwZ,IA5CAL,EAAA3M,UAAA,CACAkN,IAAA,SAAA/F,GACA3T,KAAAqZ,OAAAzZ,QAAA+T,GACA,IACA3T,KAAAqZ,OAAAlY,KAAAwS,GACA3T,KAAAoZ,MAAAtB,aAAA,QAAA9X,KAAAqZ,OAAAjT,KAAA,QAGAwT,OAAA,SAAAjG,GACA,IAAA7T,EAAAE,KAAAqZ,OAAAzZ,QAAA+T,GACA7T,GAAA,IACAE,KAAAqZ,OAAA/X,OAAAxB,EAAA,GACAE,KAAAoZ,MAAAtB,aAAA,QAAA9X,KAAAqZ,OAAAjT,KAAA,QAGA4T,SAAA,SAAArG,GACA,OAAA3T,KAAAqZ,OAAAzZ,QAAA+T,IAAA,IC7BA,SAAAsG,IACAja,KAAAka,YAAA,GAGA,SAAAC,EAAA7H,GACA,kBACAtS,KAAAka,YAAA5H,GAIA,SAAA8H,GAAA9H,GACA,kBACA,IAAArQ,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACAtT,KAAAka,YAAA,MAAAjY,EAAA,GAAAA,GCbA,SAAAoY,KACAra,KAAAsa,UAAA,GAGA,SAAAC,GAAAjI,GACA,kBACAtS,KAAAsa,UAAAhI,GAIA,SAAAkI,GAAAlI,GACA,kBACA,IAAArQ,EAAAqQ,EAAA/C,MAAAvP,KAAAsT,WACAtT,KAAAsa,UAAA,MAAArY,EAAA,GAAAA,GCbA,SAAAwY,KACAza,KAAA0a,aAAA1a,KAAA2a,WAAAnE,YAAAxW,MCDA,SAAA4a,KACA5a,KAAA6a,iBAAA7a,KAAA2a,WAAAjE,aAAA1W,UAAA2a,WAAAG,YCEA,SAAAC,KACA,YCJA,SAASC,KACT,IAAA7E,EAAAnW,KAAA2a,WACAxE,KAAA8E,YAAAjb,MCFA,SAAAkb,KACA,OAAAlb,KAAA2a,WAAAjE,aAAA1W,KAAAmb,WAAA,GAAAnb,KAAA0a,aAGA,SAAAU,KACA,OAAApb,KAAA2a,WAAAjE,aAAA1W,KAAAmb,WAAA,GAAAnb,KAAA0a,aAGe,ICRfW,GAAA,GAEWC,GAAK,KAEhB,oBAAA3U,WAEA,iBADaA,SAAA0O,kBAEbgG,GAAA,CAAoBE,WAAA,YAAAC,WAAA,cAIpB,SAAAC,GAAAC,EAAAzb,EAAA4W,GAEA,OADA6E,EAAAC,GAAAD,EAAAzb,EAAA4W,GACA,SAAA+E,GACA,IAAAC,EAAAD,EAAAE,cACAD,QAAA7b,MAAA,EAAA6b,EAAAE,wBAAA/b,QACA0b,EAAAxH,KAAAlU,KAAA4b,IAKA,SAAAD,GAAAD,EAAAzb,EAAA4W,GACA,gBAAAmF,GACA,IAAAC,EAAiBX,GACbA,GAAKU,EACT,IACAN,EAAAxH,KAAAlU,UAAAuW,SAAAtW,EAAA4W,GACK,QACCyE,GAAKW,IAKX,SAASC,GAAczI,GACvB,OAAAA,EAAAvN,OAAAD,MAAA,SAAAZ,IAAA,SAAA5F,GACA,IAAAkU,EAAA,GAAA7T,EAAAL,EAAAG,QAAA,KAEA,OADAE,GAAA,IAAA6T,EAAAlU,EAAAwB,MAAAnB,EAAA,GAAAL,IAAAwB,MAAA,EAAAnB,IACA,CAAY2K,KAAAhL,EAAAkU,UAIZ,SAAAwI,GAAAnI,GACA,kBACA,IAAA3Q,EAAArD,KAAAoc,KACA,GAAA/Y,EAAA,CACA,QAAA3C,EAAAgH,EAAA,EAAA5H,GAAA,EAAAuC,EAAAgB,EAAAjD,OAA6CsH,EAAArF,IAAOqF,EACpDhH,EAAA2C,EAAAqE,GAAAsM,EAAAvJ,MAAA/J,EAAA+J,OAAAuJ,EAAAvJ,MAAA/J,EAAAiT,OAAAK,EAAAL,KAGAtQ,IAAAvD,GAAAY,EAFAV,KAAAqc,oBAAA3b,EAAA+J,KAAA/J,EAAAgb,SAAAhb,EAAA4b,WAKAxc,EAAAuD,EAAAjD,OAAAN,SACAE,KAAAoc,OAIA,SAAAG,GAAAvI,EAAA1B,EAAAgK,GACA,IAAAE,EAAAnB,GAAAzH,eAAAI,EAAAvJ,MAAAgR,GAAAE,GACA,gBAAAvZ,EAAAtC,EAAA+W,GACA,IAAAnW,EAAA2C,EAAArD,KAAAoc,KAAAV,EAAAc,EAAAlK,EAAAxS,EAAA+W,GACA,GAAAxT,EAAA,QAAAqE,EAAA,EAAArF,EAAAgB,EAAAjD,OAA0CsH,EAAArF,IAAOqF,EACjD,IAAAhH,EAAA2C,EAAAqE,IAAA+C,OAAAuJ,EAAAvJ,MAAA/J,EAAAiT,OAAAK,EAAAL,KAIA,OAHA3T,KAAAqc,oBAAA3b,EAAA+J,KAAA/J,EAAAgb,SAAAhb,EAAA4b,SACAtc,KAAAyc,iBAAA/b,EAAA+J,KAAA/J,EAAAgb,WAAAhb,EAAA4b,gBACA5b,EAAA4R,SAIAtS,KAAAyc,iBAAAzI,EAAAvJ,KAAAiR,EAAAY,GACA5b,EAAA,CAAS+J,KAAAuJ,EAAAvJ,KAAAkJ,KAAAK,EAAAL,KAAArB,QAAAoJ,WAAAY,WACTjZ,EACAA,EAAAlC,KAAAT,GADAV,KAAAoc,KAAA,CAAA1b,ICrEA,SAAAgc,GAAA1F,EAAAvM,EAAAkS,GACA,IAAAjW,EAAewR,EAAWlB,GAC1B4E,EAAAlV,EAAAkW,YAEA,mBAAAhB,EACAA,EAAA,IAAAA,EAAAnR,EAAAkS,IAEAf,EAAAlV,EAAAC,SAAAkW,YAAA,SACAF,GAAAf,EAAAkB,UAAArS,EAAAkS,EAAAI,QAAAJ,EAAAK,YAAApB,EAAAqB,OAAAN,EAAAM,QACArB,EAAAkB,UAAArS,GAAA,OAGAuM,EAAA0F,cAAAd,GAee,ICGJsB,GAAI,OAER,SAAAC,GAAAC,EAAAC,GACPrd,KAAAsd,QAAAF,EACApd,KAAAud,SAAAF,EAGA,SAASG,KACT,WAAAL,GAAA,EAAAxW,SAAA0O,kBAAqD6H,IAGrDC,GAAA3Q,UAAsBgR,GAAShR,UAAA,CAC/BoC,YAAAuO,GACAM,OC1Ce,SAAAA,GACf,mBAAAA,MAA6CjI,EAAQiI,IAErD,QAAAL,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,IAAAzZ,MAAA5B,GAAAqF,EAAA,EAAqFA,EAAArF,IAAOqF,EAC5F,QAAAsP,EAAA2G,EAAA9G,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAwd,EAAAF,EAAAhW,GAAA,IAAAzD,MAAAvE,GAAAI,EAAA,EAA+GA,EAAAJ,IAAOI,GACtHkX,EAAAH,EAAA/W,MAAA6d,EAAAF,EAAAvJ,KAAA8C,IAAAT,SAAAzW,EAAA+W,MACA,aAAAG,IAAA2G,EAAApH,SAAAS,EAAAT,UACAqH,EAAA9d,GAAA6d,GAKA,WAAaR,GAASO,EAAA1d,KAAAud,WD+BtBM,UE3Ce,SAAAJ,GACf,mBAAAA,MAA6C7H,EAAW6H,IAExD,QAAAL,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,GAAAL,EAAA,GAAA3V,EAAA,EAAyFA,EAAArF,IAAOqF,EAChG,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAN,EAAA,EAA8DA,EAAAJ,IAAOI,GACrEkX,EAAAH,EAAA/W,MACA4d,EAAAvc,KAAAsc,EAAAvJ,KAAA8C,IAAAT,SAAAzW,EAAA+W,IACAwG,EAAAlc,KAAA6V,IAKA,WAAamG,GAASO,EAAAL,IFgCtBlX,OG5Ce,SAAAuF,GACf,mBAAAA,MAA2CoK,EAAOpK,IAElD,QAAA0R,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,IAAAzZ,MAAA5B,GAAAqF,EAAA,EAAqFA,EAAArF,IAAOqF,EAC5F,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAwd,EAAAF,EAAAhW,GAAA,GAAA5H,EAAA,EAA4FA,EAAAJ,IAAOI,GACnGkX,EAAAH,EAAA/W,KAAA4L,EAAAwI,KAAA8C,IAAAT,SAAAzW,EAAA+W,IACA+G,EAAAzc,KAAA6V,GAKA,WAAamG,GAASO,EAAA1d,KAAAud,WHkCtB9c,KhB4Be,SAAA6R,EAAA8E,GACf,IAAA9E,EAGA,OAFA7R,EAAA,IAAAwD,MAAAjE,KAAA8d,QAAApW,GAAA,EACA1H,KAAA+d,KAAA,SAAA3b,GAA2B3B,IAAAiH,GAAAtF,IAC3B3B,EAGA,IDnFeyB,ECmFf8b,EAAA5G,EAAAD,EAAAP,EACAyG,EAAArd,KAAAud,SACAH,EAAApd,KAAAsd,QAEA,mBAAAhL,IDvFepQ,ECuFoCoQ,EAAnDA,EDtFA,WACA,OAAApQ,ICuFA,QAAAG,EAAA+a,EAAAhd,OAAA6V,EAAA,IAAAhS,MAAA5B,GAAAyU,EAAA,IAAA7S,MAAA5B,GAAA0U,EAAA,IAAA9S,MAAA5B,GAAAqF,EAAA,EAAsGA,EAAArF,IAAOqF,EAAA,CAC7G,IAAAyO,EAAAkH,EAAA3V,GACAmP,EAAAuG,EAAA1V,GACAuP,EAAAJ,EAAAzW,OACAK,EAAA6R,EAAA4B,KAAAiC,OAAAI,SAAA7O,EAAA2V,GACAnG,EAAAzW,EAAAL,OACA6d,EAAAnH,EAAApP,GAAA,IAAAzD,MAAAiT,GACAgH,EAAAjI,EAAAvO,GAAA,IAAAzD,MAAAiT,GAGA8G,EAAA7H,EAAAU,EAAAoH,EAAAC,EAFAnH,EAAArP,GAAA,IAAAzD,MAAAgT,GAEAxW,EAAA2W,GAKA,QAAA+G,EAAAhW,EAAAiW,EAAA,EAAAC,EAAA,EAA4CD,EAAAlH,IAAiBkH,EAC7D,GAAAD,EAAAF,EAAAG,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAjW,EAAA+V,EAAAG,SAAAnH,IACAiH,EAAA9H,MAAAlO,GAAA,MAQA,OAHA8N,EAAA,IAAekH,GAASlH,EAAAoH,IACxBiB,OAAAxH,EACAb,EAAAsI,MAAAxH,EACAd,GgBnEAa,MlB9Ce,WACf,WAAaqG,GAASnd,KAAAse,QAAAte,KAAAsd,QAAAjY,IAAiC2Q,GAAMhW,KAAAud,WkB8C7DxG,KI/Ce,WACf,WAAaoG,GAASnd,KAAAue,OAAAve,KAAAsd,QAAAjY,IAAgC2Q,GAAMhW,KAAAud,WJ+C5DnX,KKnDe,SAAAoY,EAAAC,EAAAC,GACf,IAAA5H,EAAA9W,KAAA8W,QAAAb,EAAAjW,KAAA+W,EAAA/W,KAAA+W,OAIA,OAHAD,EAAA,mBAAA0H,IAAA1H,KAAA6H,OAAAH,EAAA,IACA,MAAAC,IAAAxI,EAAAwI,EAAAxI,IACA,MAAAyI,EAAA3H,EAAA6C,SAAoC8E,EAAA3H,GACpCD,GAAAb,EAAAa,EAAA8H,MAAA3I,GAAA4I,QAAA5I,GL+CA2I,MMlDe,SAAAE,GAEf,QAAAC,EAAA/e,KAAAsd,QAAA0B,EAAAF,EAAAxB,QAAA2B,EAAAF,EAAA3e,OAAA8e,EAAAF,EAAA5e,OAAAiC,EAAAT,KAAAud,IAAAF,EAAAC,GAAAE,EAAA,IAAAnb,MAAAgb,GAAAvX,EAAA,EAA8JA,EAAArF,IAAOqF,EACrK,QAAAsP,EAAAqI,EAAAN,EAAArX,GAAA4X,EAAAN,EAAAtX,GAAAhI,EAAA2f,EAAAjf,OAAAwe,EAAAQ,EAAA1X,GAAA,IAAAzD,MAAAvE,GAAAI,EAAA,EAAwHA,EAAAJ,IAAOI,GAC/HkX,EAAAqI,EAAAvf,IAAAwf,EAAAxf,MACA8e,EAAA9e,GAAAkX,GAKA,KAAQtP,EAAAuX,IAAQvX,EAChB0X,EAAA1X,GAAAqX,EAAArX,GAGA,WAAayV,GAASiC,EAAApf,KAAAud,WNqCtBsB,MOrDe,WAEf,QAAAzB,EAAApd,KAAAsd,QAAA5V,GAAA,EAAArF,EAAA+a,EAAAhd,SAA4DsH,EAAArF,GAC5D,QAAA2U,EAAAH,EAAAuG,EAAA1V,GAAA5H,EAAA+W,EAAAzW,OAAA,EAAA+H,EAAA0O,EAAA/W,KAA4EA,GAAA,IAC5EkX,EAAAH,EAAA/W,MACAqI,GAAA,EAAA6O,EAAA+E,wBAAA5T,MAAAwS,WAAAjE,aAAAM,EAAA7O,GACAA,EAAA6O,GAKA,OAAAhX,MP2CAsI,KfpDe,SAAAoK,GAGf,SAAA6M,EAAAxf,EAAAyC,GACA,OAAAzC,GAAAyC,EAAAkQ,EAAA3S,EAAAwW,SAAA/T,EAAA+T,WAAAxW,GAAAyC,EAHAkQ,MAA0B8E,GAM1B,QAAA4F,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAof,EAAA,IAAAvb,MAAA5B,GAAAqF,EAAA,EAAsFA,EAAArF,IAAOqF,EAAA,CAC7F,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAqf,EAAAD,EAAA9X,GAAA,IAAAzD,MAAAvE,GAAAI,EAAA,EAAwGA,EAAAJ,IAAOI,GAC/GkX,EAAAH,EAAA/W,MACA2f,EAAA3f,GAAAkX,GAGAyI,EAAAnX,KAAAiX,GAGA,WAAapC,GAASqC,EAAAxf,KAAAud,UAAAsB,SeqCtB3K,KQvDe,WACf,IAAAH,EAAAT,UAAA,GAGA,OAFAA,UAAA,GAAAtT,KACA+T,EAAAxE,MAAA,KAAA+D,WACAtT,MRoDA0f,MSxDe,WACf,IAAAA,EAAA,IAAAzb,MAAAjE,KAAA8d,QAAAhe,GAAA,EAEA,OADAE,KAAA+d,KAAA,WAAwB2B,IAAA5f,GAAAE,OACxB0f,GTsDA1I,KUzDe,WAEf,QAAAoG,EAAApd,KAAAsd,QAAA5V,EAAA,EAAArF,EAAA+a,EAAAhd,OAA2DsH,EAAArF,IAAOqF,EAClE,QAAAmP,EAAAuG,EAAA1V,GAAA5H,EAAA,EAAAJ,EAAAmX,EAAAzW,OAAwDN,EAAAJ,IAAOI,EAAA,CAC/D,IAAAkX,EAAAH,EAAA/W,GACA,GAAAkX,EAAA,OAAAA,EAIA,aViDA8G,KW1De,WACf,IAAAA,EAAA,EAEA,OADA9d,KAAA+d,KAAA,aAAwBD,IACxBA,GXwDA6B,MY3De,WACf,OAAA3f,KAAAgX,QZ2DA+G,Ka5De,SAAAhK,GAEf,QAAAqJ,EAAApd,KAAAsd,QAAA5V,EAAA,EAAArF,EAAA+a,EAAAhd,OAA2DsH,EAAArF,IAAOqF,EAClE,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAA5H,EAAA,EAAAJ,EAAAmX,EAAAzW,OAA8DN,EAAAJ,IAAOI,GACrEkX,EAAAH,EAAA/W,KAAAiU,EAAAG,KAAA8C,IAAAT,SAAAzW,EAAA+W,GAIA,OAAA7W,MbqDA4f,KdnBe,SAAAjM,EAAArB,GACf,IAAA2C,EAAiBL,EAASjB,GAE1B,GAAAL,UAAAlT,OAAA,GACA,IAAA4W,EAAAhX,KAAAgX,OACA,OAAA/B,EAAAF,MACAiC,EAAA6I,eAAA5K,EAAAH,MAAAG,EAAAF,OACAiC,EAAAsC,aAAArE,GAGA,OAAAjV,KAAA+d,MAAA,MAAAzL,EACA2C,EAAAF,MAAA4C,EAAAF,EAAA,mBAAAnF,EACA2C,EAAAF,MAAAkD,EAAAD,EACA/C,EAAAF,MAAAgD,EAAAF,GAAA5C,EAAA3C,KcOA+F,MZxCe,SAAA1E,EAAArB,EAAAkG,GACf,OAAAlF,UAAAlT,OAAA,EACAJ,KAAA+d,MAAA,MAAAzL,EACA8F,EAAA,mBAAA9F,EACAoG,EACAH,GAAA5E,EAAArB,EAAA,MAAAkG,EAAA,GAAAA,IACAG,EAAA3Y,KAAAgX,OAAArD,IYmCAmM,SX3Ce,SAAAnM,EAAArB,GACf,OAAAgB,UAAAlT,OAAA,EACAJ,KAAA+d,MAAA,MAAAzL,EACAwG,EAAA,mBAAAxG,EACA0G,EACAD,GAAApF,EAAArB,IACAtS,KAAAgX,OAAArD,IWsCAoM,QVHe,SAAApM,EAAArB,GACf,IAAAkH,EAAAP,EAAAtF,EAAA,IAEA,GAAAL,UAAAlT,OAAA,GAEA,IADA,IAAAqZ,EAAAP,EAAAlZ,KAAAgX,QAAAlX,GAAA,EAAAJ,EAAA8Z,EAAApZ,SACAN,EAAAJ,GAAA,IAAA+Z,EAAAO,SAAAR,EAAA1Z,IAAA,SACA,SAGA,OAAAE,KAAA+d,MAAA,mBAAAzL,EACAyH,EAAAzH,EACAuH,EACAC,GAAAN,EAAAlH,KURA0N,KThDe,SAAA1N,GACf,OAAAgB,UAAAlT,OACAJ,KAAA+d,KAAA,MAAAzL,EACA2H,GAAA,mBAAA3H,EACA8H,GACAD,GAAA7H,IACAtS,KAAAgX,OAAAkD,aS2CA+F,KRjDe,SAAA3N,GACf,OAAAgB,UAAAlT,OACAJ,KAAA+d,KAAA,MAAAzL,EACA+H,IAAA,mBAAA/H,EACAkI,GACAD,IAAAjI,IACAtS,KAAAgX,OAAAsD,WQ4CAG,MP/De,WACf,OAAAza,KAAA+d,KAAAtD,KO+DAG,MNhEe,WACf,OAAA5a,KAAA+d,KAAAnD,KMgEA+D,OcnEe,SAAAhL,GACf,IAAAuM,EAAA,mBAAAvM,IAAmDqB,EAAOrB,GAC1D,OAAA3T,KAAAyd,OAAA,WACA,OAAAzd,KAAAwW,YAAA0J,EAAA3Q,MAAAvP,KAAAsT,ediEA6M,OL/De,SAAAxM,EAAAyM,GACf,IAAAF,EAAA,mBAAAvM,IAAmDqB,EAAOrB,GAC1D8J,EAAA,MAAA2C,EAAArF,GAAA,mBAAAqF,IAAuF5K,EAAQ4K,GAC/F,OAAApgB,KAAAyd,OAAA,WACA,OAAAzd,KAAA0W,aAAAwJ,EAAA3Q,MAAAvP,KAAAsT,WAAAmK,EAAAlO,MAAAvP,KAAAsT,YAAA,SK4DAsG,OJlEe,WACf,OAAA5Z,KAAA+d,KAAmB/C,KIkEnBqF,MHhEe,SAAAC,GACf,OAAAtgB,KAAAyd,OAAA6C,EAAAlF,GAAAF,KGgEA9E,MezEe,SAAA9D,GACf,OAAAgB,UAAAlT,OACAJ,KAAA8f,SAAA,WAAAxN,GACAtS,KAAAgX,OAAAT,UfuEAlT,GFEe,SAAA2Q,EAAA1B,EAAAgK,GACf,IAAgCxc,EAAAL,EAAhCgU,EAAkByI,GAAclI,EAAA,IAAAtU,EAAA+T,EAAArT,OAEhC,KAAAkT,UAAAlT,OAAA,IAcA,IAFAiD,EAAAiP,EAAAiK,GAAAJ,GACA,MAAAG,OAAA,GACAxc,EAAA,EAAaA,EAAAJ,IAAOI,EAAAE,KAAA+d,KAAA1a,EAAAoQ,EAAA3T,GAAAwS,EAAAgK,IACpB,OAAAtc,KAdA,IAAAqD,EAAArD,KAAAgX,OAAAoF,KACA,GAAA/Y,EAAA,QAAA3C,EAAAgH,EAAA,EAAArF,EAAAgB,EAAAjD,OAA6CsH,EAAArF,IAAOqF,EACpD,IAAA5H,EAAA,EAAAY,EAAA2C,EAAAqE,GAA4B5H,EAAAJ,IAAOI,EACnC,IAAAL,EAAAgU,EAAA3T,IAAA2K,OAAA/J,EAAA+J,MAAAhL,EAAAkU,OAAAjT,EAAAiT,KACA,OAAAjT,EAAA4R,OETAe,SD9Ce,SAAA5I,EAAAkS,GACf,OAAA3c,KAAA+d,MAAA,mBAAApB,EAPA,SAAAlS,EAAAkS,GACA,kBACA,OAAAD,GAAA1c,KAAAyK,EAAAkS,EAAApN,MAAAvP,KAAAsT,cARA,SAAA7I,EAAAkS,GACA,kBACA,OAAAD,GAAA1c,KAAAyK,EAAAkS,MAaAlS,EAAAkS,MC8Ce,IAAA4D,GAAA,GgB5EAC,GAAA,SAAA/K,GACf,uBAAAA,EACA,IAAY0H,GAAS,EAAAxW,SAAA+O,cAAAD,KAAA,CAAA9O,SAAA0O,kBACrB,IAAY8H,GAAS,EAAA1H,IAAeyH,KCLpCuD,GAAA,EAMA,SAAAC,KACA1gB,KAAAyD,EAAA,OAAAgd,IAAAza,SAAA,IAGA0a,GAAAlU,UARe,WACf,WAAAkU,IAOAlU,UAAA,CACAoC,YAAA8R,GACA7M,IAAA,SAAAmD,GAEA,IADA,IAAA3M,EAAArK,KAAAyD,IACA4G,KAAA2M,IAAA,KAAAA,IAAA2D,YAAA,OACA,OAAA3D,EAAA3M,IAEAyJ,IAAA,SAAAkD,EAAA1E,GACA,OAAA0E,EAAAhX,KAAAyD,GAAA6O,GAEAsH,OAAA,SAAA5C,GACA,OAAAhX,KAAAyD,KAAAuT,YAAAhX,KAAAyD,IAEAuC,SAAA,WACA,OAAAhG,KAAAyD,ICtBe,ICAAkd,GAAA,SAAAlL,GACf,uBAAAA,EACA,IAAY0H,GAAS,CAAAxW,SAAAkP,iBAAAJ,IAAA,CAAA9O,SAAA0O,kBACrB,IAAY8H,GAAS,OAAA1H,EAAA,GAAAA,GAAqCyH,KCL3C,SAAA0D,GAAAC,EAAApW,EAAAqW,EAAAzW,EAAA0W,EAAA7e,EAAAC,EAAA6e,EAAAC,EAAA5N,GACfrT,KAAA6gB,SACA7gB,KAAAyK,OACAzK,KAAA8gB,UACA9gB,KAAAkhB,WAAA7W,EACArK,KAAA+gB,SACA/gB,KAAAkC,IACAlC,KAAAmC,IACAnC,KAAAghB,KACAhhB,KAAAihB,KACAjhB,KAAAyD,EAAA4P,EAGAuN,GAAApU,UAAAnJ,GAAA,WACA,IAAAiP,EAAAtS,KAAAyD,EAAAJ,GAAAkM,MAAAvP,KAAAyD,EAAA6P,WACA,OAAAhB,IAAAtS,KAAAyD,EAAAzD,KAAAsS,GCSe,ICxBA6O,GAAA,SAAAvS,EAAAwS,EAAA5U,GACfoC,EAAApC,UAAA4U,EAAA5U,YACAA,EAAAoC,eAGO,SAAAyS,GAAAlL,EAAAmL,GACP,IAAA9U,EAAA4F,OAAA8N,OAAA/J,EAAA3J,WACA,QAAA4K,KAAAkK,EAAA9U,EAAA4K,GAAAkK,EAAAlK,GACA,OAAA5K,ECNO,SAAA+U,MAEA,IAGPC,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,IAAAC,OAAA,WAAAN,UAAA,QACAO,GAAA,IAAAD,OAAA,WAAAJ,UAAA,QACAM,GAAA,IAAAF,OAAA,YAAAN,SAAAC,IAAA,QACAQ,GAAA,IAAAH,OAAA,YAAAJ,SAAAD,IAAA,QACAS,GAAA,IAAAJ,OAAA,WAAAL,GAAAC,OAAA,QACAS,GAAA,IAAAL,OAAA,YAAAL,GAAAC,MAAAD,IAAA,QAEAW,GAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACA9nB,IAAA,SACA+nB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAee,SAASC,GAAKC,GAC7B,IAAAppB,EAEA,OADAopB,KAAA,IAAAvlB,OAAAhF,eACAmB,EAAAsf,GAAA+J,KAAAD,IAAA,IAAAE,IAAAtpB,EAAAupB,SAAAvpB,EAAA,cAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,IACAA,EAAAuf,GAAA8J,KAAAD,IAAAI,GAAAD,SAAAvpB,EAAA,SACAA,EAAAwf,GAAA6J,KAAAD,IAAA,IAAAE,GAAAtpB,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAA0f,GAAA2J,KAAAD,IAAA,IAAAE,GAAA,IAAAtpB,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAA2f,GAAA0J,KAAAD,IAAAK,GAAAzpB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA4f,GAAAyJ,KAAAD,IAAAK,GAAA,IAAAzpB,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA6f,GAAAwJ,KAAAD,IAAAM,GAAA1pB,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA8f,GAAAuJ,KAAAD,IAAAM,GAAA1pB,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACA+f,GAAAxO,eAAA6X,GAAAI,GAAAzJ,GAAAqJ,IACA,gBAAAA,EAAA,IAAAE,GAAAjb,YAAA,GACA,KAGA,SAAAmb,GAAAnsB,GACA,WAAAisB,GAAAjsB,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,SAAAosB,GAAAjsB,EAAAmC,EAAAQ,EAAAzC,GAEA,OADAA,GAAA,IAAAF,EAAAmC,EAAAQ,EAAAkO,KACA,IAAAib,GAAA9rB,EAAAmC,EAAAQ,EAAAzC,GAGO,SAAAisB,GAAAtrB,GAEP,OADAA,aAAA6gB,KAAA7gB,EAAiC8qB,GAAK9qB,IACtCA,EAEA,IAAAirB,IADAjrB,IAAAurB,OACApsB,EAAAa,EAAAsB,EAAAtB,EAAA8B,EAAA9B,EAAAwrB,SAFA,IAAAP,GAKO,SAASQ,GAAGtsB,EAAAmC,EAAAQ,EAAA0pB,GACnB,WAAA5Y,UAAAlT,OAAA4rB,GAAAnsB,GAAA,IAAA8rB,GAAA9rB,EAAAmC,EAAAQ,EAAA,MAAA0pB,EAAA,EAAAA,GAGO,SAAAP,GAAA9rB,EAAAmC,EAAAQ,EAAA0pB,GACPlsB,KAAAH,KACAG,KAAAgC,KACAhC,KAAAwC,KACAxC,KAAAksB,WAkCA,SAAAE,GAAA9Z,GAEA,QADAA,EAAA1Q,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,IAAAvd,KAAAkM,MAAAwE,IAAA,KACA,WAAAA,EAAAtM,SAAA,IAGA,SAAA+lB,GAAAjrB,EAAAF,EAAAe,EAAA5B,GAIA,OAHAA,GAAA,EAAAe,EAAAF,EAAAe,EAAA+O,IACA/O,GAAA,GAAAA,GAAA,EAAAb,EAAAF,EAAA8P,IACA9P,GAAA,IAAAE,EAAA4P,KACA,IAAA2b,GAAAvrB,EAAAF,EAAAe,EAAA5B,GA6BO,SAAAusB,GAAAxrB,EAAAF,EAAAe,EAAAuqB,GACP,WAAA5Y,UAAAlT,OA3BO,SAAAM,GACP,GAAAA,aAAA2rB,GAAA,WAAAA,GAAA3rB,EAAAI,EAAAJ,EAAAE,EAAAF,EAAAiB,EAAAjB,EAAAwrB,SAEA,GADAxrB,aAAA6gB,KAAA7gB,EAAiC8qB,GAAK9qB,KACtCA,EAAA,WAAA2rB,GACA,GAAA3rB,aAAA2rB,GAAA,OAAA3rB,EAEA,IAAAb,GADAa,IAAAurB,OACApsB,EAAA,IACAmC,EAAAtB,EAAAsB,EAAA,IACAQ,EAAA9B,EAAA8B,EAAA,IACA2c,EAAAvd,KAAAud,IAAAtf,EAAAmC,EAAAQ,GACArC,EAAAyB,KAAAzB,IAAAN,EAAAmC,EAAAQ,GACA1B,EAAA4P,IACA9P,EAAAT,EAAAgf,EACAxd,GAAAxB,EAAAgf,GAAA,EAUA,OATAve,GACAE,EAAAjB,IAAAM,GAAA6B,EAAAQ,GAAA5B,EAAA,GAAAoB,EAAAQ,GACAR,IAAA7B,GAAAqC,EAAA3C,GAAAe,EAAA,GACAf,EAAAmC,GAAApB,EAAA,EACAA,GAAAe,EAAA,GAAAxB,EAAAgf,EAAA,EAAAhf,EAAAgf,EACAre,GAAA,IAEAF,EAAAe,EAAA,GAAAA,EAAA,IAAAb,EAEA,IAAAurB,GAAAvrB,EAAAF,EAAAe,EAAAjB,EAAAwrB,SAIAK,CAAAzrB,GAAA,IAAAurB,GAAAvrB,EAAAF,EAAAe,EAAA,MAAAuqB,EAAA,EAAAA,GAGA,SAAAG,GAAAvrB,EAAAF,EAAAe,EAAAuqB,GACAlsB,KAAAc,KACAd,KAAAY,KACAZ,KAAA2B,KACA3B,KAAAksB,WAiCA,SAAAM,GAAA1rB,EAAAoe,EAAAuN,GACA,OAGA,KAHA3rB,EAAA,GAAAoe,GAAAuN,EAAAvN,GAAApe,EAAA,GACAA,EAAA,IAAA2rB,EACA3rB,EAAA,IAAAoe,GAAAuN,EAAAvN,IAAA,IAAApe,GAAA,GACAoe,GAzKAiC,GAAMI,GAAQiK,GAAK,CACnBkB,YAAA,WACA,OAAA1sB,KAAAisB,MAAAS,eAEAN,IAAA,WACA,OAAApsB,KAAAisB,MAAAG,OAEApmB,SAAA,WACA,OAAAhG,KAAAisB,MAAA,MA+CA9K,GAAMwK,GAAMQ,GAAK9K,GAAME,GAAA,CACvBoL,SAAA,SAAA/pB,GAEA,OADAA,EAAA,MAAAA,EA9NO,EADA,GA+NPhB,KAAAkC,IA9NO,EADA,GA+NPlB,GACA,IAAA+oB,GAAA3rB,KAAAH,EAAA+C,EAAA5C,KAAAgC,EAAAY,EAAA5C,KAAAwC,EAAAI,EAAA5C,KAAAksB,UAEAU,OAAA,SAAAhqB,GAEA,OADAA,EAAA,MAAAA,EAnOO,GAmOPhB,KAAAkC,IAnOO,GAmOPlB,GACA,IAAA+oB,GAAA3rB,KAAAH,EAAA+C,EAAA5C,KAAAgC,EAAAY,EAAA5C,KAAAwC,EAAAI,EAAA5C,KAAAksB,UAEAD,IAAA,WACA,OAAAjsB,MAEA0sB,YAAA,WACA,WAAA1sB,KAAAH,GAAAG,KAAAH,EAAA,QACA,IAAAG,KAAAgC,GAAAhC,KAAAgC,EAAA,QACA,IAAAhC,KAAAwC,GAAAxC,KAAAwC,EAAA,OACA,GAAAxC,KAAAksB,SAAAlsB,KAAAksB,SAAA,GAEAE,IAAA,WACA,UAAAA,GAAApsB,KAAAH,GAAAusB,GAAApsB,KAAAgC,GAAAoqB,GAAApsB,KAAAwC,IAEAwD,SAAA,WACA,IAAAjG,EAAAC,KAAAksB,QACA,YADyBnsB,EAAA8sB,MAAA9sB,GAAA,EAAA6B,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,EAAApf,KACzB,gBACA6B,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,IAAAvd,KAAAkM,MAAA9N,KAAAH,IAAA,SACA+B,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,IAAAvd,KAAAkM,MAAA9N,KAAAgC,IAAA,SACAJ,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,IAAAvd,KAAAkM,MAAA9N,KAAAwC,IAAA,KACA,IAAAzC,EAAA,SAAAA,EAAA,SAqDAohB,GAAMkL,GAAAC,GAAWjL,GAAME,GAAA,CACvBoL,SAAA,SAAA/pB,GAEA,OADAA,EAAA,MAAAA,EA9SO,EADA,GA+SPhB,KAAAkC,IA9SO,EADA,GA+SPlB,GACA,IAAAypB,GAAArsB,KAAAc,EAAAd,KAAAY,EAAAZ,KAAA2B,EAAAiB,EAAA5C,KAAAksB,UAEAU,OAAA,SAAAhqB,GAEA,OADAA,EAAA,MAAAA,EAnTO,GAmTPhB,KAAAkC,IAnTO,GAmTPlB,GACA,IAAAypB,GAAArsB,KAAAc,EAAAd,KAAAY,EAAAZ,KAAA2B,EAAAiB,EAAA5C,KAAAksB,UAEAD,IAAA,WACA,IAAAnrB,EAAAd,KAAAc,EAAA,SAAAd,KAAAc,EAAA,GACAF,EAAAisB,MAAA/rB,IAAA+rB,MAAA7sB,KAAAY,GAAA,EAAAZ,KAAAY,EACAe,EAAA3B,KAAA2B,EACA8qB,EAAA9qB,KAAA,GAAAA,EAAA,EAAAA,GAAAf,EACAse,EAAA,EAAAvd,EAAA8qB,EACA,WAAAd,GACAa,GAAA1rB,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAoe,EAAAuN,GACAD,GAAA1rB,EAAAoe,EAAAuN,GACAD,GAAA1rB,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAoe,EAAAuN,GACAzsB,KAAAksB,UAGAQ,YAAA,WACA,UAAA1sB,KAAAY,GAAAZ,KAAAY,GAAA,GAAAisB,MAAA7sB,KAAAY,KACA,GAAAZ,KAAA2B,GAAA3B,KAAA2B,GAAA,GACA,GAAA3B,KAAAksB,SAAAlsB,KAAAksB,SAAA,MC1UO,IAAAY,GAAAlrB,KAAAqK,GAAA,IACA8gB,GAAA,IAAAnrB,KAAAqK,GCKP8D,GAAA,OACA5E,GAAA,EACAmE,GAAA,OACI0d,GAAE,KACFC,GAAE,KACFC,GAAE,EAAOD,GAAKA,GAClBE,GAASF,GAAKA,GAAKA,GAEnB,SAAAG,GAAA1sB,GACA,GAAAA,aAAA2sB,GAAA,WAAAA,GAAA3sB,EAAAiB,EAAAjB,EAAAX,EAAAW,EAAA8B,EAAA9B,EAAAwrB,SACA,GAAAxrB,aAAA4sB,GAAA,OAAAC,GAAA7sB,GACAA,aAAqBirB,KAAGjrB,EAAOsrB,GAAUtrB,IACzC,IAGAwB,EAAAiD,EAHAtF,EAAA2tB,GAAA9sB,EAAAb,GACAmC,EAAAwrB,GAAA9sB,EAAAsB,GACAQ,EAAAgrB,GAAA9sB,EAAA8B,GACAL,EAAAsrB,IAAA,SAAA5tB,EAAA,SAAAmC,EAAA,SAAAQ,GAAA2I,IAKA,OAJAtL,IAAAmC,OAAAQ,EAAAN,EAAAiD,EAAAhD,GACAD,EAAAurB,IAAA,SAAA5tB,EAAA,SAAAmC,EAAA,SAAAQ,GAAAuN,IACA5K,EAAAsoB,IAAA,SAAA5tB,EAAA,SAAAmC,EAAA,SAAAQ,GAAA8M,KAEA,IAAA+d,GAAA,IAAAlrB,EAAA,QAAAD,EAAAC,GAAA,KAAAA,EAAAgD,GAAAzE,EAAAwrB,SAOe,SAAAwB,GAAA/rB,EAAA5B,EAAAyC,EAAA0pB,GACf,WAAA5Y,UAAAlT,OAAAgtB,GAAAzrB,GAAA,IAAA0rB,GAAA1rB,EAAA5B,EAAAyC,EAAA,MAAA0pB,EAAA,EAAAA,GAGO,SAAAmB,GAAA1rB,EAAA5B,EAAAyC,EAAA0pB,GACPlsB,KAAA2B,KACA3B,KAAAD,KACAC,KAAAwC,KACAxC,KAAAksB,WA0BA,SAAAuB,GAAAhuB,GACA,OAAAA,EAAA0tB,GAAAvrB,KAAAkC,IAAArE,EAAA,KAAAA,EAA2CytB,GAAKF,GAGhD,SAAAW,GAAAluB,GACA,OAAAA,EAAawtB,GAAExtB,MAAeytB,IAAEztB,EAAQutB,IAGxC,SAAAY,GAAA1rB,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAN,KAAAkC,IAAA5B,EAAA,aAGA,SAAAsrB,GAAAtrB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAN,KAAAkC,KAAA5B,EAAA,iBAGA,SAAA2rB,GAAAntB,GACA,GAAAA,aAAA4sB,GAAA,WAAAA,GAAA5sB,EAAAI,EAAAJ,EAAAa,EAAAb,EAAAiB,EAAAjB,EAAAwrB,SAEA,GADAxrB,aAAA2sB,KAAA3sB,EAAA0sB,GAAA1sB,IACA,IAAAA,EAAAX,GAAA,IAAAW,EAAA8B,EAAA,WAAA8qB,GAAA5c,IAAA,EAAAhQ,EAAAiB,GAAAjB,EAAAiB,EAAA,MAAA+O,IAAAhQ,EAAAiB,EAAAjB,EAAAwrB,SACA,IAAAprB,EAAAc,KAAAoK,MAAAtL,EAAA8B,EAAA9B,EAAAX,GAAiCgtB,GACjC,WAAAO,GAAAxsB,EAAA,EAAAA,EAAA,IAAAA,EAAAc,KAAAC,KAAAnB,EAAAX,EAAAW,EAAAX,EAAAW,EAAA8B,EAAA9B,EAAA8B,GAAA9B,EAAAiB,EAAAjB,EAAAwrB,SAOO,SAAA4B,GAAAhtB,EAAAS,EAAAI,EAAAuqB,GACP,WAAA5Y,UAAAlT,OAAAytB,GAAA/sB,GAAA,IAAAwsB,GAAAxsB,EAAAS,EAAAI,EAAA,MAAAuqB,EAAA,EAAAA,GAGO,SAAAoB,GAAAxsB,EAAAS,EAAAI,EAAAuqB,GACPlsB,KAAAc,KACAd,KAAAuB,KACAvB,KAAA2B,KACA3B,KAAAksB,WAGA,SAAAqB,GAAA7sB,GACA,GAAAmsB,MAAAnsB,EAAAI,GAAA,WAAAusB,GAAA3sB,EAAAiB,EAAA,IAAAjB,EAAAwrB,SACA,IAAAprB,EAAAJ,EAAAI,EAAgBgsB,GAChB,WAAAO,GAAA3sB,EAAAiB,EAAAC,KAAAoB,IAAAlC,GAAAJ,EAAAa,EAAAK,KAAAqB,IAAAnC,GAAAJ,EAAAa,EAAAb,EAAAwrB,SAjEA/K,GAAMkM,GAAAK,GAAWrM,GAAOE,GAAK,CAC7BoL,SAAA,SAAA/pB,GACA,WAAAyqB,GAAArtB,KAAA2B,EAzCA,IAyCA,MAAAiB,EAAA,EAAAA,GAAA5C,KAAAD,EAAAC,KAAAwC,EAAAxC,KAAAksB,UAEAU,OAAA,SAAAhqB,GACA,WAAAyqB,GAAArtB,KAAA2B,EA5CA,IA4CA,MAAAiB,EAAA,EAAAA,GAAA5C,KAAAD,EAAAC,KAAAwC,EAAAxC,KAAAksB,UAEAD,IAAA,WACA,IAAA9pB,GAAAnC,KAAA2B,EAAA,QACAO,EAAA2qB,MAAA7sB,KAAAD,GAAAoC,IAAAnC,KAAAD,EAAA,IACAoF,EAAA0nB,MAAA7sB,KAAAwC,GAAAL,IAAAnC,KAAAwC,EAAA,IAIA,WAAempB,GACfiC,GAAA,WAJA1rB,EAAA6N,GAAA4d,GAAAzrB,IAIA,WAHAC,EAAAgJ,GAAAwiB,GAAAxrB,IAGA,UAFAgD,EAAAmK,GAAAqe,GAAAxoB,KAGAyoB,IAAA,SAAA1rB,EAAA,UAAAC,EAAA,QAAAgD,GACAyoB,GAAA,SAAA1rB,EAAA,SAAAC,EAAA,UAAAgD,GACAnF,KAAAksB,aAkDA/K,GAAMmM,GAAAQ,GAAWzM,GAAOE,GAAK,CAC7BoL,SAAA,SAAA/pB,GACA,WAAA0qB,GAAAttB,KAAAc,EAAAd,KAAAuB,EAAAvB,KAAA2B,EA7GA,IA6GA,MAAAiB,EAAA,EAAAA,GAAA5C,KAAAksB,UAEAU,OAAA,SAAAhqB,GACA,WAAA0qB,GAAAttB,KAAAc,EAAAd,KAAAuB,EAAAvB,KAAA2B,EAhHA,IAgHA,MAAAiB,EAAA,EAAAA,GAAA5C,KAAAksB,UAEAD,IAAA,WACA,OAAAsB,GAAAvtB,MAAAisB,UCpHA,IAEA5nB,IAAA,OACI0pB,IAAC,OACDC,GAAC,QACLC,GAASD,GAAID,GACbG,GALK,QAKIF,GACTG,GANK,QAMQ9pB,KAPR,OAOe0pB,GAgBL,SAASK,GAASttB,EAAAF,EAAAe,EAAAuqB,GACjC,WAAA5Y,UAAAlT,OAfA,SAAAM,GACA,GAAAA,aAAA2tB,GAAA,WAAAA,GAAA3tB,EAAAI,EAAAJ,EAAAE,EAAAF,EAAAiB,EAAAjB,EAAAwrB,SACAxrB,aAAqBirB,KAAGjrB,EAAOsrB,GAAUtrB,IACzC,IAAAb,EAAAa,EAAAb,EAAA,IACAmC,EAAAtB,EAAAsB,EAAA,IACAQ,EAAA9B,EAAA8B,EAAA,IACAb,GAAAwsB,GAAA3rB,EAAAyrB,GAAApuB,EAAAquB,GAAAlsB,IAAAmsB,GAAAF,GAAAC,IACAI,EAAA9rB,EAAAb,EACAiB,GAAWorB,IAAChsB,EAAAL,GAAA0C,GAAAiqB,GAAuBP,GACnCntB,EAAAgB,KAAAC,KAAAe,IAAA0rB,MAAwCN,GAACrsB,GAAA,EAAAA,IACzCb,EAAAF,EAAAgB,KAAAoK,MAAApJ,EAAA0rB,GAAkCvB,GAAO,IAAArc,IACzC,WAAA2d,GAAAvtB,EAAA,EAAAA,EAAA,IAAAA,EAAAF,EAAAe,EAAAjB,EAAAwrB,SAIAqC,CAAAztB,GAAA,IAAAutB,GAAAvtB,EAAAF,EAAAe,EAAA,MAAAuqB,EAAA,EAAAA,GAGO,SAAAmC,GAAAvtB,EAAAF,EAAAe,EAAAuqB,GACPlsB,KAAAc,KACAd,KAAAY,KACAZ,KAAA2B,KACA3B,KAAAksB,WCnCO,SAAAsC,GAAA5iB,EAAA6iB,EAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAjjB,IAAAuhB,EAAA0B,EAAAjjB,EACA,YAAAA,EAAA,EAAAijB,EAAA1B,GAAAsB,GACA,IAAAI,EAAA,EAAA1B,GAAAuB,GACA,IAAA9iB,EAAA,EAAAijB,EAAA,EAAA1B,GAAAwB,EACAxB,EAAAyB,GAAA,EDiCAzN,GAAMkN,GAAYD,GAAW/M,GAAOE,GAAK,CACzCoL,SAAA,SAAA/pB,GAEA,OADAA,EAAA,MAAAA,EHnCO,EADA,GGoCqBhB,KAAAkC,IHnCrB,EADA,GGoCyClB,GAChD,IAAAyrB,GAAAruB,KAAAc,EAAAd,KAAAY,EAAAZ,KAAA2B,EAAAiB,EAAA5C,KAAAksB,UAEAU,OAAA,SAAAhqB,GAEA,OADAA,EAAA,MAAAA,EHxCO,GGwCmBhB,KAAAkC,IHxCnB,GGwCqClB,GAC5C,IAAAyrB,GAAAruB,KAAAc,EAAAd,KAAAY,EAAAZ,KAAA2B,EAAAiB,EAAA5C,KAAAksB,UAEAD,IAAA,WACA,IAAAnrB,EAAA+rB,MAAA7sB,KAAAc,GAAA,GAAAd,KAAAc,EAAA,KAAiDgsB,GACjDnrB,GAAA3B,KAAA2B,EACA5B,EAAA8sB,MAAA7sB,KAAAY,GAAA,EAAAZ,KAAAY,EAAAe,GAAA,EAAAA,GACAmtB,EAAAltB,KAAAoB,IAAAlC,GACAiuB,EAAAntB,KAAAqB,IAAAnC,GACA,WAAe6qB,GACf,KAAAhqB,EAAA5B,IAlDK,OAkDkB+uB,EAjDlB,QAiD6BC,IAClC,KAAAptB,EAAA5B,GAAAsE,GAAAyqB,EAAiCf,GAACgB,IAClC,KAAAptB,EAAA5B,GAAsBiuB,GAACc,IACvB9uB,KAAAksB,aCjDe,ICRA8C,GAAA,SAAA9sB,GACf,kBACA,OAAAA,ICAA,SAAA+sB,GAAAlvB,EAAAqC,GACA,gBAAA3C,GACA,OAAAM,EAAAN,EAAA2C,GAUO,SAAS8sB,GAAGnvB,EAAAyC,GACnB,IAAAJ,EAAAI,EAAAzC,EACA,OAAAqC,EAAA6sB,GAAAlvB,EAAAqC,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAR,KAAAkM,MAAA1L,EAAA,KAAAA,GAAkF4sB,GAAQnC,MAAA9sB,GAAAyC,EAAAzC,GAGnF,SAAAovB,GAAAhtB,GACP,WAAAA,MAAAitB,GAAA,SAAArvB,EAAAyC,GACA,OAAAA,EAAAzC,EAbA,SAAAA,EAAAyC,EAAAL,GACA,OAAApC,EAAA6B,KAAAkC,IAAA/D,EAAAoC,GAAAK,EAAAZ,KAAAkC,IAAAtB,EAAAL,GAAApC,EAAAoC,EAAA,EAAAA,EAAA,SAAA1C,GACA,OAAAmC,KAAAkC,IAAA/D,EAAAN,EAAA+C,EAAAL,IAWAktB,CAAAtvB,EAAAyC,EAAAL,GAA0C6sB,GAAQnC,MAAA9sB,GAAAyC,EAAAzC,IAInC,SAAAqvB,GAAArvB,EAAAyC,GACf,IAAAJ,EAAAI,EAAAzC,EACA,OAAAqC,EAAA6sB,GAAAlvB,EAAAqC,GAA4B4sB,GAAQnC,MAAA9sB,GAAAyC,EAAAzC,GCtBrB,IAAAuvB,GAAA,SAAAC,EAAAptB,GACf,IAAAqtB,EAAcL,GAAKhtB,GAEnB,SAAA8pB,EAAAhc,EAAAC,GACA,IAAArQ,EAAA2vB,GAAAvf,EAA2Bkc,GAAQlc,IAAApQ,GAAAqQ,EAAmBic,GAAQjc,IAAArQ,GAC9DmC,EAAAwtB,EAAAvf,EAAAjO,EAAAkO,EAAAlO,GACAQ,EAAAgtB,EAAAvf,EAAAzN,EAAA0N,EAAA1N,GACA0pB,EAAkBkD,GAAOnf,EAAAic,QAAAhc,EAAAgc,SACzB,gBAAAzsB,GAKA,OAJAwQ,EAAApQ,IAAAJ,GACAwQ,EAAAjO,IAAAvC,GACAwQ,EAAAzN,IAAA/C,GACAwQ,EAAAic,UAAAzsB,GACAwQ,EAAA,IAMA,OAFAgc,EAAAkD,MAAAI,EAEAtD,EAnBe,CAoBd,GAED,SAAAwD,GAAAC,GACA,gBAAAC,GACA,IAIA7vB,EAAA0vB,EAJA9vB,EAAAiwB,EAAAvvB,OACAP,EAAA,IAAAoE,MAAAvE,GACAsC,EAAA,IAAAiC,MAAAvE,GACA8C,EAAA,IAAAyB,MAAAvE,GAEA,IAAAI,EAAA,EAAeA,EAAAJ,IAAOI,EACtB0vB,EAAcrD,GAAQwD,EAAA7vB,IACtBD,EAAAC,GAAA0vB,EAAA3vB,GAAA,EACAmC,EAAAlC,GAAA0vB,EAAAxtB,GAAA,EACAQ,EAAA1C,GAAA0vB,EAAAhtB,GAAA,EAMA,OAJA3C,EAAA6vB,EAAA7vB,GACAmC,EAAA0tB,EAAA1tB,GACAQ,EAAAktB,EAAAltB,GACAgtB,EAAAtD,QAAA,EACA,SAAAzsB,GAIA,OAHA+vB,EAAA3vB,IAAAJ,GACA+vB,EAAAxtB,IAAAvC,GACA+vB,EAAAhtB,IAAA/C,GACA+vB,EAAA,KAKO,IAAAI,GAAAH,GH7CQ,SAAAI,GACf,IAAAnwB,EAAAmwB,EAAAzvB,OAAA,EACA,gBAAAX,GACA,IAAAK,EAAAL,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAC,EAAA,GAAAkC,KAAAkuB,MAAArwB,EAAAC,GACAgvB,EAAAmB,EAAA/vB,GACA6uB,EAAAkB,EAAA/vB,EAAA,GACA2uB,EAAA3uB,EAAA,EAAA+vB,EAAA/vB,EAAA,KAAA4uB,EAAAC,EACAC,EAAA9uB,EAAAJ,EAAA,EAAAmwB,EAAA/vB,EAAA,KAAA6uB,EAAAD,EACA,OAAAF,IAAA/uB,EAAAK,EAAAJ,KAAA+uB,EAAAC,EAAAC,EAAAC,MIhBemB,IDsDRN,GEpDQ,SAAAI,GACf,IAAAnwB,EAAAmwB,EAAAzvB,OACA,gBAAAX,GACA,IAAAK,EAAA8B,KAAAkuB,QAAArwB,GAAA,OAAAA,KAAAC,GACA+uB,EAAAoB,GAAA/vB,EAAAJ,EAAA,GAAAA,GACAgvB,EAAAmB,EAAA/vB,EAAAJ,GACAivB,EAAAkB,GAAA/vB,EAAA,GAAAJ,GACAkvB,EAAAiB,GAAA/vB,EAAA,GAAAJ,GACA,OAAW8uB,IAAK/uB,EAAAK,EAAAJ,KAAA+uB,EAAAC,EAAAC,EAAAC,MDVD,SAAA7uB,EAAAyC,GACf,OAAAA,GAAAzC,KAAA,SAAAN,GACA,OAAAM,EAAAyC,EAAA/C,KEAAuwB,GAAA,8CACAC,GAAA,IAAAnO,OAAAkO,GAAAE,OAAA,KAce,ICffC,GACAC,GACAC,GACAC,GDYeC,GAAA,SAAAxwB,EAAAyC,GACf,IACAguB,EACAC,EACAC,EAHAC,EAAAX,GAAAY,UAAAX,GAAAW,UAAA,EAIA9wB,GAAA,EACAc,EAAA,GACA+B,EAAA,GAMA,IAHA5C,GAAA,GAAAyC,GAAA,IAGAguB,EAAAR,GAAAtE,KAAA3rB,MACA0wB,EAAAR,GAAAvE,KAAAlpB,MACAkuB,EAAAD,EAAAxwB,OAAA0wB,IACAD,EAAAluB,EAAAvB,MAAA0vB,EAAAD,GACA9vB,EAAAd,GAAAc,EAAAd,IAAA4wB,EACA9vB,IAAAd,GAAA4wB,IAEAF,IAAA,OAAAC,IAAA,IACA7vB,EAAAd,GAAAc,EAAAd,IAAA2wB,EACA7vB,IAAAd,GAAA2wB,GAEA7vB,IAAAd,GAAA,KACA6C,EAAAxB,KAAA,CAAcrB,IAAAoC,EAAS6tB,GAAMS,EAAAC,MAE7BE,EAAAV,GAAAW,UAYA,OARAD,EAAAnuB,EAAApC,SACAswB,EAAAluB,EAAAvB,MAAA0vB,GACA/vB,EAAAd,GAAAc,EAAAd,IAAA4wB,EACA9vB,IAAAd,GAAA4wB,GAKA9vB,EAAAR,OAAA,EAAAuC,EAAA,GA7CA,SAAAH,GACA,gBAAA/C,GACA,OAAA+C,EAAA/C,GAAA,IA4CAoxB,CAAAluB,EAAA,GAAAT,GApDA,SAAaM,GACb,kBACA,OAAAA,GAmDQsuB,CAAItuB,IACZA,EAAAG,EAAAvC,OAAA,SAAAX,GACA,QAAAiB,EAAAZ,EAAA,EAA4BA,EAAA0C,IAAO1C,EAAAc,GAAAF,EAAAiC,EAAA7C,OAAAY,EAAAwB,EAAAzC,GACnC,OAAAmB,EAAAwF,KAAA,OE7DA2qB,GAAA,IAAAnvB,KAAAqK,GAEW+kB,GAAQ,CACnBC,WAAA,EACAC,WAAA,EACAtkB,OAAA,EACAC,MAAA,EACAskB,OAAA,EACAC,OAAA,GAGeC,GAAA,SAAAtxB,EAAAyC,EAAAjB,EAAAa,EAAAvB,EAAAW,GACf,IAAA2vB,EAAAC,EAAAvkB,EAKA,OAJAskB,EAAAvvB,KAAAC,KAAA9B,IAAAyC,QAAAzC,GAAAoxB,EAAA3uB,GAAA2uB,IACAtkB,EAAA9M,EAAAwB,EAAAiB,EAAAJ,KAAAb,GAAAxB,EAAA8M,EAAAzK,GAAAI,EAAAqK,IACAukB,EAAAxvB,KAAAC,KAAAN,IAAAa,QAAAb,GAAA6vB,EAAAhvB,GAAAgvB,EAAAvkB,GAAAukB,GACArxB,EAAAqC,EAAAI,EAAAjB,IAAAxB,KAAAyC,KAAAqK,KAAAskB,MACA,CACAF,WAAApwB,EACAqwB,WAAA1vB,EACAoL,OAAAhL,KAAAoK,MAAAxJ,EAAAzC,GAAAgxB,GACAlkB,MAAAjL,KAAA0L,KAAAT,GAAAkkB,GACAI,SACAC,WCpBA,SAAAE,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,SAAA/pB,EAAA/G,GACA,OAAAA,EAAAR,OAAAQ,EAAA+G,MAAA,OAsCA,gBAAA5H,EAAAyC,GACA,IAAA5B,EAAA,GACA+B,EAAA,GAOA,OANA5C,EAAAwxB,EAAAxxB,GAAAyC,EAAA+uB,EAAA/uB,GAtCA,SAAAmvB,EAAAC,EAAAC,EAAAC,EAAAlxB,EAAA+B,GACA,GAAAgvB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAAhyB,EAAAc,EAAAO,KAAA,kBAAAqwB,EAAA,KAAAC,GACA9uB,EAAAxB,KAAA,CAAcrB,IAAA,EAAAoC,EAAa6tB,GAAM4B,EAAAE,IAAS,CAAG/xB,IAAA,EAAAoC,EAAa6tB,GAAM6B,EAAAE,UAC3DD,GAAAC,IACLlxB,EAAAO,KAAA,aAAA0wB,EAAAL,EAAAM,EAAAL,GAkCA/kB,CAAA3M,EAAAkxB,WAAAlxB,EAAAmxB,WAAA1uB,EAAAyuB,WAAAzuB,EAAA0uB,WAAAtwB,EAAA+B,GA9BA,SAAA5C,EAAAyC,EAAA5B,EAAA+B,GACA5C,IAAAyC,GACAzC,EAAAyC,EAAA,IAAAA,GAAA,IAAgCA,EAAAzC,EAAA,MAAAA,GAAA,KAChC4C,EAAAxB,KAAA,CAAcrB,EAAAc,EAAAO,KAAAwG,EAAA/G,GAAA,eAAA8wB,GAAA,EAAAxvB,EAAsD6tB,GAAMhwB,EAAAyC,MACrEA,GACL5B,EAAAO,KAAAwG,EAAA/G,GAAA,UAAA4B,EAAAkvB,GA0BA9kB,CAAA7M,EAAA6M,OAAApK,EAAAoK,OAAAhM,EAAA+B,GAtBA,SAAA5C,EAAAyC,EAAA5B,EAAA+B,GACA5C,IAAAyC,EACAG,EAAAxB,KAAA,CAAcrB,EAAAc,EAAAO,KAAAwG,EAAA/G,GAAA,cAAA8wB,GAAA,EAAAxvB,EAAqD6tB,GAAMhwB,EAAAyC,KACpEA,GACL5B,EAAAO,KAAAwG,EAAA/G,GAAA,SAAA4B,EAAAkvB,GAmBA7kB,CAAA9M,EAAA8M,MAAArK,EAAAqK,MAAAjM,EAAA+B,GAfA,SAAAgvB,EAAAC,EAAAC,EAAAC,EAAAlxB,EAAA+B,GACA,GAAAgvB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAAhyB,EAAAc,EAAAO,KAAAwG,EAAA/G,GAAA,4BACA+B,EAAAxB,KAAA,CAAcrB,IAAA,EAAAoC,EAAa6tB,GAAM4B,EAAAE,IAAS,CAAG/xB,IAAA,EAAAoC,EAAa6tB,GAAM6B,EAAAE,UAC3D,IAAAD,GAAA,IAAAC,GACLlxB,EAAAO,KAAAwG,EAAA/G,GAAA,SAAAixB,EAAA,IAAAC,EAAA,KAWAnlB,CAAA5M,EAAAoxB,OAAApxB,EAAAqxB,OAAA5uB,EAAA2uB,OAAA3uB,EAAA4uB,OAAAxwB,EAAA+B,GACA5C,EAAAyC,EAAA,KACA,SAAA/C,GAEA,IADA,IAAAiB,EAAAZ,GAAA,EAAAJ,EAAAiD,EAAAvC,SACAN,EAAAJ,GAAAkB,GAAAF,EAAAiC,EAAA7C,OAAAY,EAAAwB,EAAAzC,GACA,OAAAmB,EAAAwF,KAAA,MAKO,IAAA2rB,GAAAT,GFtDA,SAAAhf,GACP,eAAAA,EAA+B0e,IAC/Bb,QAAAxpB,SAAA2O,cAAA,OAAA8a,GAAAzpB,SAAA0O,gBAAAgb,GAAA1pB,SAAAwR,aACAgY,GAAA9X,MAAAxN,UAAAyH,EACAA,EAAA+d,GAAAxX,iBAAAuX,GAAA5Z,YAAA2Z,IAAA,MAAAvX,iBAAA,aACAwX,GAAAnV,YAAAkV,IACA7d,IAAArR,MAAA,MAAAgF,MAAA,KACSorB,IAAS/e,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,ME+CgD,qBAC3D0f,GAAAV,GF7CA,SAAAhf,GACP,aAAAA,EAA4B0e,IAC5BV,QAAA3pB,SAAAC,gBAAA,mCACA0pB,GAAAxY,aAAA,YAAAxF,IACAA,EAAAge,GAAAzlB,UAAAonB,QAAAC,gBACA5f,IAAA7F,OACS4kB,GAAS/e,EAAAvS,EAAAuS,EAAA9P,EAAA8P,EAAA/Q,EAAA+Q,EAAAlQ,EAAAkQ,EAAAzR,EAAAyR,EAAA9Q,IAF+CwvB,KEyCC,cC9DlEpvB,KAAAuwB,MCGA,SAASC,GAAGC,GACZ,gBAAApiB,EAAAC,GACA,IAAApP,EAAAuxB,GAAApiB,EAAyBqc,GAAQrc,IAAAnP,GAAAoP,EAAmBoc,GAAQpc,IAAApP,GAC5DF,EAAYwuB,GAAKnf,EAAArP,EAAAsP,EAAAtP,GACjBe,EAAYytB,GAAKnf,EAAAtO,EAAAuO,EAAAvO,GACjBuqB,EAAkBkD,GAAKnf,EAAAic,QAAAhc,EAAAgc,SACvB,gBAAAzsB,GAKA,OAJAwQ,EAAAnP,IAAArB,GACAwQ,EAAArP,IAAAnB,GACAwQ,EAAAtO,IAAAlC,GACAwQ,EAAAic,UAAAzsB,GACAwQ,EAAA,KAKemiB,GAAIlD,IACEkD,GAAIhD,ICjBzB,SAASkD,GAAGD,GACZ,gBAAApiB,EAAAC,GACA,IAAApP,EAAAuxB,GAAApiB,EAAyB6d,GAAQ7d,IAAAnP,GAAAoP,EAAmB4d,GAAQ5d,IAAApP,GAC5DS,EAAY6tB,GAAKnf,EAAA1O,EAAA2O,EAAA3O,GACjBI,EAAYytB,GAAKnf,EAAAtO,EAAAuO,EAAAvO,GACjBuqB,EAAkBkD,GAAKnf,EAAAic,QAAAhc,EAAAgc,SACvB,gBAAAzsB,GAKA,OAJAwQ,EAAAnP,IAAArB,GACAwQ,EAAA1O,IAAA9B,GACAwQ,EAAAtO,IAAAlC,GACAwQ,EAAAic,UAAAzsB,GACAwQ,EAAA,KAKeqiB,GAAIpD,IACEoD,GAAIlD,ICjBzB,SAASmD,GAASF,GAClB,gBAAAG,EAAArwB,GAGA,SAAAswB,EAAAxiB,EAAAC,GACA,IAAApP,EAAAuxB,GAAApiB,EAA2Bme,GAAcne,IAAAnP,GAAAoP,EAAmBke,GAAcle,IAAApP,GAC1EF,EAAcwuB,GAAKnf,EAAArP,EAAAsP,EAAAtP,GACnBe,EAAcytB,GAAKnf,EAAAtO,EAAAuO,EAAAvO,GACnBuqB,EAAoBkD,GAAKnf,EAAAic,QAAAhc,EAAAgc,SACzB,gBAAAzsB,GAKA,OAJAwQ,EAAAnP,IAAArB,GACAwQ,EAAArP,IAAAnB,GACAwQ,EAAAtO,IAAAC,KAAAkC,IAAArE,EAAA0C,IACA8N,EAAAic,UAAAzsB,GACAwQ,EAAA,IAMA,OAlBA9N,KAgBAswB,EAAAtD,MAAAqD,EAEAC,EAnBA,CAoBG,GAGYF,GAAUrD,IAAV,IACRwD,GAAoBH,GAAUnD,IC5BtB,ICIfuD,GACAC,GALIC,GAAK,EACTC,GAAA,EACIC,GAAQ,EACZC,GAAA,IAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,iBAAAC,yBAAAC,IAAAD,YAAAE,KACAC,GAAA,iBAAA9sB,eAAA+sB,sBAAA/sB,OAAA+sB,sBAAAzV,KAAAtX,QAAA,SAAAlF,GAAqIkyB,WAAAlyB,EAAA,KAE9H,SAAA8xB,KACP,OAAAJ,KAAAM,GAAAG,IAAAT,GAAAE,GAAAE,MAAAH,IAGA,SAAAQ,KACAT,GAAA,EAGO,SAAAU,KACP5zB,KAAA6zB,MACA7zB,KAAA8zB,MACA9zB,KAAAqW,MAAA,KA0BO,SAAA0d,GAAAhgB,EAAAigB,EAAAC,GACP,IAAAx0B,EAAA,IAAAm0B,GAEA,OADAn0B,EAAAy0B,QAAAngB,EAAAigB,EAAAC,GACAx0B,EAcA,SAAA00B,KACAjB,IAAAD,GAAAG,GAAAE,OAAAH,GACEN,GAAKC,GAAA,EACP,KAdO,WACPQ,OACIT,GAEJ,IADA,IAAAhyB,EAAApB,EAAAkzB,GACAlzB,IACAoB,EAAAqyB,GAAAzzB,EAAAq0B,QAAA,GAAAr0B,EAAAo0B,MAAA3f,KAAA,KAAArT,GACApB,IAAA4W,QAEIwc,GAOJuB,GACG,QACCvB,GAAK,EAWT,WACA,IAAAlnB,EAAAkjB,EAAAjjB,EAAA+mB,GAAAsB,EAAAI,IACA,KAAAzoB,GACAA,EAAAioB,OACAI,EAAAroB,EAAAkoB,QAAAG,EAAAroB,EAAAkoB,OACAnoB,EAAAC,MAAAyK,QAEAwY,EAAAjjB,EAAAyK,MAAAzK,EAAAyK,MAAA,KACAzK,EAAAD,IAAA0K,MAAAwY,EAAA8D,GAAA9D,GAGA+D,GAAAjnB,EACA2oB,GAAAL,GAtBAM,GACArB,GAAA,GAIA,SAAAsB,KACA,IAAAlB,EAAAF,GAAAE,MAAAU,EAAAV,EAAAL,GACAe,EAAAhB,KAAAG,IAAAa,EAAAf,GAAAK,GAkBA,SAAAgB,GAAAL,GACMpB,KACNC,QAAA2B,aAAA3B,KACAmB,EAAAf,GACA,IACAe,EAAAI,MAAAvB,GAAAY,WAAAS,GAAAF,EAAAb,GAAAE,MAAAH,KACQJ,KAAUA,GAAQ2B,cAAiB3B,OAElCA,KAAQE,GAAAG,GAAAE,MAA2BP,GAAQ4B,YAAAH,GAAAxB,KAChDH,GAAK,EAAAW,GAAAW,MAjFTP,GAAApnB,UAAAunB,GAAAvnB,UAAA,CACAoC,YAAAglB,GACAM,QAAA,SAAAngB,EAAAigB,EAAAC,GACA,sBAAAlgB,EAAA,UAAAvN,UAAA,8BACAytB,GAAA,MAAAA,EAAAX,MAAAW,IAAA,MAAAD,EAAA,GAAAA,GACAh0B,KAAAqW,OAAAuc,KAAA5yB,OACA4yB,MAAAvc,MAAArW,KACA2yB,GAAA3yB,KACA4yB,GAAA5yB,MAEAA,KAAA6zB,MAAA9f,EACA/T,KAAA8zB,MAAAG,EACAK,MAEAM,KAAA,WACA50B,KAAA6zB,QACA7zB,KAAA6zB,MAAA,KACA7zB,KAAA8zB,MAAAO,IACAC,QC1Ce,IAAAO,GAAA,SAAA9gB,EAAAigB,EAAAC,GACf,IAAAx0B,EAAA,IAAcm0B,GAMd,OALAI,EAAA,MAAAA,EAAA,GAAAA,EACAv0B,EAAAy0B,QAAA,SAAAY,GACAr1B,EAAAm1B,OACA7gB,EAAA+gB,EAAAd,IACGA,EAAAC,GACHx0B,GCNAs1B,GAAc1gB,EAAQ,oCACtB2gB,GAAA,GAEOC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEQC,GAAA,SAAAxe,EAAArD,EAAAtJ,EAAApK,EAAA4W,EAAA4e,GACf,IAAAC,EAAA1e,EAAA2e,aACA,GAAAD,GACA,GAAArrB,KAAAqrB,EAAA,YADA1e,EAAA2e,aAAA,IAmCA,SAAe3e,EAAA3M,EAAAurB,GACf,IACAC,EADAH,EAAA1e,EAAA2e,aAgBA,SAAA1lB,EAAA6kB,GACA,IAAAh1B,EAAA4H,EAAAhI,EAAAgB,EAGA,GAAAk1B,EAAAE,QAAAZ,GAAA,OAAAN,IAEA,IAAA90B,KAAA41B,EAEA,IADAh1B,EAAAg1B,EAAA51B,IACA6T,OAAAiiB,EAAAjiB,KAAA,CAKA,GAAAjT,EAAAo1B,QAAAV,GAAA,OAAsCP,GAAO5kB,GAG7CvP,EAAAo1B,QAAAT,IACA30B,EAAAo1B,MAAAP,GACA70B,EAAAqzB,MAAAa,OACAl0B,EAAA2C,GAAA6Q,KAAA,YAAA8C,IAAAT,SAAA7V,EAAAT,MAAAS,EAAAmW,cACA6e,EAAA51B,KAIAA,EAAAuK,IACA3J,EAAAo1B,MAAAP,GACA70B,EAAAqzB,MAAAa,OACAl0B,EAAA2C,GAAA6Q,KAAA,SAAA8C,IAAAT,SAAA7V,EAAAT,MAAAS,EAAAmW,cACA6e,EAAA51B,IAoBA,GAZI+0B,GAAO,WACXe,EAAAE,QAAAV,KACAQ,EAAAE,MAAAT,GACAO,EAAA7B,MAAAG,QAAA6B,EAAAH,EAAA5B,MAAA4B,EAAA3B,MACA8B,EAAAjB,MAMAc,EAAAE,MAAAX,GACAS,EAAAvyB,GAAA6Q,KAAA,QAAA8C,IAAAT,SAAAqf,EAAA31B,MAAA21B,EAAA/e,OACA+e,EAAAE,QAAAX,GAAA,CAKA,IAJAS,EAAAE,MAAAV,GAGAS,EAAA,IAAA5xB,MAAAvE,EAAAk2B,EAAAC,MAAAz1B,QACAN,EAAA,EAAA4H,GAAA,EAAuB5H,EAAAJ,IAAOI,GAC9BY,EAAAk1B,EAAAC,MAAA/1B,GAAAwS,MAAA4B,KAAA8C,IAAAT,SAAAqf,EAAA31B,MAAA21B,EAAA/e,UACAgf,IAAAnuB,GAAAhH,GAGAm1B,EAAAz1B,OAAAsH,EAAA,GAGA,SAAAquB,EAAAjB,GAKA,IAJA,IAAAr1B,EAAAq1B,EAAAc,EAAAI,SAAAJ,EAAAK,KAAA/hB,KAAA,KAAA4gB,EAAAc,EAAAI,WAAAJ,EAAA7B,MAAAG,QAAAU,GAAAgB,EAAAE,MAAAR,GAAA,GACAx1B,GAAA,EACAJ,EAAAm2B,EAAAz1B,SAEAN,EAAAJ,GACAm2B,EAAA/1B,GAAAoU,KAAA8C,EAAAvX,GAIAm2B,EAAAE,QAAAR,KACAM,EAAAvyB,GAAA6Q,KAAA,MAAA8C,IAAAT,SAAAqf,EAAA31B,MAAA21B,EAAA/e,OACA+d,KAIA,SAAAA,IAIA,QAAA90B,KAHA81B,EAAAE,MAAAP,GACAK,EAAA7B,MAAAa,cACAc,EAAArrB,GACAqrB,EAAA,cACA1e,EAAA2e,aA7FAD,EAAArrB,GAAAurB,EACAA,EAAA7B,MAAeA,GAEf,SAAAe,GACAc,EAAAE,MAAAZ,GACAU,EAAA7B,MAAAG,QAAAjkB,EAAA2lB,EAAA5B,MAAA4B,EAAA3B,MAGA2B,EAAA5B,OAAAc,GAAA7kB,EAAA6kB,EAAAc,EAAA5B,QAPoB,EAAA4B,EAAA3B,MAxClBiC,CAAMlf,EAAA3M,EAAA,CACRsJ,OACA1T,QACA4W,QACAxT,GAAA0xB,GACAc,MAAAb,GACAf,KAAAwB,EAAAxB,KACAD,MAAAyB,EAAAzB,MACAgC,SAAAP,EAAAO,SACAC,KAAAR,EAAAQ,KACAlC,MAAA,KACA+B,MAAAb,MAIO,SAASkB,GAAInf,EAAA3M,GACpB,IAAA+rB,EAAiBC,GAAGrf,EAAA3M,GACpB,GAAA+rB,EAAAN,MAAAb,GAAA,UAAAtmB,MAAA,+BACA,OAAAynB,EAGO,SAASE,GAAGtf,EAAA3M,GACnB,IAAA+rB,EAAiBC,GAAGrf,EAAA3M,GACpB,GAAA+rB,EAAAN,MAAAV,GAAA,UAAAzmB,MAAA,6BACA,OAAAynB,EAGO,SAASC,GAAGrf,EAAA3M,GACnB,IAAA+rB,EAAApf,EAAA2e,aACA,IAAAS,SAAA/rB,IAAA,UAAAsE,MAAA,wBACA,OAAAynB,EC9Ce,IAAAG,GAAA,SAAAvf,EAAArD,GACf,IACAyiB,EACArV,EAEAjhB,EAJA41B,EAAA1e,EAAA2e,aAGAhW,GAAA,EAGA,GAAA+V,EAAA,CAIA,IAAA51B,KAFA6T,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAEA+hB,GACAU,EAAAV,EAAA51B,IAAA6T,UACAoN,EAAAqV,EAAAN,MAA8BX,IAAQiB,EAAAN,MAAqBR,GAC3Dc,EAAAN,MAAqBP,GACrBa,EAAArC,MAAAa,OACAwB,EAAA/yB,GAAA6Q,KAAA6M,EAAA,qBAAA/J,IAAAT,SAAA6f,EAAAn2B,MAAAm2B,EAAAvf,cACA6e,EAAA51B,IALkD6f,GAAA,EAQlDA,UAAA3I,EAAA2e,eCpBA,SAAAa,GAAAnsB,EAAAsJ,GACA,IAAA8iB,EAAAC,EACA,kBACA,IAAAN,EAAmBE,GAAGt2B,KAAAqK,GACtBwrB,EAAAO,EAAAP,MAKA,GAAAA,IAAAY,EAEA,QAAA32B,EAAA,EAAAJ,GADAg3B,EAAAD,EAAAZ,GACAz1B,OAAwCN,EAAAJ,IAAOI,EAC/C,GAAA42B,EAAA52B,GAAA6T,SAAA,EACA+iB,IAAAz1B,SACAK,OAAAxB,EAAA,GACA,MAKAs2B,EAAAP,MAAAa,GAIA,SAAAC,GAAAtsB,EAAAsJ,EAAArB,GACA,IAAAmkB,EAAAC,EACA,sBAAApkB,EAAA,UAAA3D,MACA,kBACA,IAAAynB,EAAmBE,GAAGt2B,KAAAqK,GACtBwrB,EAAAO,EAAAP,MAKA,GAAAA,IAAAY,EAAA,CACAC,GAAAD,EAAAZ,GAAA50B,QACA,QAAAxB,EAAA,CAAoBkU,OAAArB,SAAyBxS,EAAA,EAAAJ,EAAAg3B,EAAAt2B,OAA2BN,EAAAJ,IAAOI,EAC/E,GAAA42B,EAAA52B,GAAA6T,SAAA,CACA+iB,EAAA52B,GAAAL,EACA,MAGAK,IAAAJ,GAAAg3B,EAAAv1B,KAAA1B,GAGA22B,EAAAP,MAAAa,GAsBO,SAAAE,GAAAC,EAAAljB,EAAArB,GACP,IAAAjI,EAAAwsB,EAAAC,IAOA,OALAD,EAAA9Y,KAAA,WACA,IAAAqY,EAAmBE,GAAGt2B,KAAAqK,IACtB+rB,EAAA9jB,QAAA8jB,EAAA9jB,MAAA,KAA2CqB,GAAArB,EAAA/C,MAAAvP,KAAAsT,aAG3C,SAAA0D,GACA,OAAWqf,GAAGrf,EAAA3M,GAAAiI,MAAAqB,IC3EC,IAAAojB,GAAA,SAAAh3B,EAAAyC,GACf,IAAAjB,EACA,wBAAAiB,EAAkCutB,GAClCvtB,aAAqBgpB,GAAQ8D,IAC7B/tB,EAAaiqB,GAAKhpB,OAAAjB,EAAe+tB,IACzBiB,IAAiBxwB,EAAAyC,ICMzB,SAAAw0B,GAAA/hB,EAAA3C,GACA,IAAA3G,EAAAyS,EACA,SAAAyX,IACA,IAAA/1B,EAAAwS,EAAA/C,MAAAvP,KAAAsT,WAEA,OADAxT,IAAAse,IAAAzS,GAAAyS,EAAAte,IAVA,SAAAmV,EAAAnV,GACA,gBAAAL,GACAO,KAAA6G,eAAAoO,EAAAH,MAAAG,EAAAF,MAAAjV,EAAAL,KAQAw3B,CAAAhiB,EAAAnV,IACA6L,EAGA,OADAkqB,EAAAqB,OAAA5kB,EACAujB,EAGA,SAAAsB,GAAAxjB,EAAArB,GACA,IAAA3G,EAAAyS,EACA,SAAAyX,IACA,IAAA/1B,EAAAwS,EAAA/C,MAAAvP,KAAAsT,WAEA,OADAxT,IAAAse,IAAAzS,GAAAyS,EAAAte,IA3BA,SAAA6T,EAAA7T,GACA,gBAAAL,GACAO,KAAA8X,aAAAnE,EAAA7T,EAAAL,KAyBA23B,CAAAzjB,EAAA7T,IACA6L,EAGA,OADAkqB,EAAAqB,OAAA5kB,EACAujB,EC/BA,SAAAwB,GAAAhtB,EAAAiI,GACA,kBACI6jB,GAAIn2B,KAAAqK,GAAA2pB,OAAA1hB,EAAA/C,MAAAvP,KAAAsT,YAIR,SAAAgkB,GAAAjtB,EAAAiI,GACA,OAAAA,KAAA,WACI6jB,GAAIn2B,KAAAqK,GAAA2pB,MAAA1hB,GCRR,SAAAilB,GAAAltB,EAAAiI,GACA,kBACIgkB,GAAGt2B,KAAAqK,GAAA2rB,UAAA1jB,EAAA/C,MAAAvP,KAAAsT,YAIP,SAAAkkB,GAAAntB,EAAAiI,GACA,OAAAA,KAAA,WACIgkB,GAAGt2B,KAAAqK,GAAA2rB,SAAA1jB,GCRP,SAAAmlB,GAAAptB,EAAAiI,GACA,sBAAAA,EAAA,UAAA3D,MACA,kBACI2nB,GAAGt2B,KAAAqK,GAAA4rB,KAAA3jB,GCKP,SAAAolB,GAAArtB,EAAAsJ,EAAA+H,GACA,IAAAic,EAAAC,EAAAC,EATA,SAAclkB,GACd,OAAAA,EAAA,IAAAzN,OAAAD,MAAA,SAAAuB,MAAA,SAAA/H,GACA,IAAAK,EAAAL,EAAAG,QAAA,KAEA,OADAE,GAAA,IAAAL,IAAAwB,MAAA,EAAAnB,KACAL,GAAA,UAAAA,IAKsBq4B,CAAKnkB,GAASwiB,GAAOG,GAC3C,kBACA,IAAAF,EAAAyB,EAAA73B,KAAAqK,GACAhH,EAAA+yB,EAAA/yB,GAKAA,IAAAs0B,IAAAC,GAAAD,EAAAt0B,GAAA4Q,QAAA5Q,GAAAsQ,EAAA+H,GAEA0a,EAAA/yB,GAAAu0B,GCbe,ICNXG,GAAYxX,GAAS/T,UAAAoC,YCiBzB,SAASopB,GAAWrkB,GACpB,kBACA3T,KAAAqY,MAAAC,eAAA3E,ICfA,SAAAskB,GAAAtkB,EAAArB,EAAAkG,GACA,IAAA/Y,EAAA2e,EACA,SAAAyX,IACA,IAAA/1B,EAAAwS,EAAA/C,MAAAvP,KAAAsT,WAEA,OADAxT,IAAAse,IAAA3e,GAAA2e,EAAAte,IAVA,SAAA6T,EAAA7T,EAAA0Y,GACA,gBAAA/Y,GACAO,KAAAqY,MAAAI,YAAA9E,EAAA7T,EAAAL,GAAA+Y,IAQA0f,CAAAvkB,EAAA7T,EAAA0Y,IACA/Y,EAGA,OADAo2B,EAAAqB,OAAA5kB,EACAujB,ECCe,ICKXsC,GAAE,EAEC,SAAAC,GAAAhb,EAAAC,EAAA1J,EAAAtJ,GACPrK,KAAAsd,QAAAF,EACApd,KAAAud,SAAAF,EACArd,KAAAq4B,MAAA1kB,EACA3T,KAAA82B,IAAAzsB,EAOO,SAAAiuB,KACP,QAAWH,GAGX,IAAAI,GAA0BhY,GAAS/T,UAEnC4rB,GAAA5rB,UAVe,SAAmBmH,GAClC,OAAS4M,KAASsW,WAAAljB,IASenH,UAAA,CACjCoC,YAAAwpB,GACA3a,OCrCe,SAAAA,GACf,IAAA9J,EAAA3T,KAAAq4B,MACAhuB,EAAArK,KAAA82B,IAEA,mBAAArZ,MAA6CjI,EAAQiI,IAErD,QAAAL,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,IAAAzZ,MAAA5B,GAAAqF,EAAA,EAAqFA,EAAArF,IAAOqF,EAC5F,QAAAsP,EAAA2G,EAAA9G,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAwd,EAAAF,EAAAhW,GAAA,IAAAzD,MAAAvE,GAAAI,EAAA,EAA+GA,EAAAJ,IAAOI,GACtHkX,EAAAH,EAAA/W,MAAA6d,EAAAF,EAAAvJ,KAAA8C,IAAAT,SAAAzW,EAAA+W,MACA,aAAAG,IAAA2G,EAAApH,SAAAS,EAAAT,UACAqH,EAAA9d,GAAA6d,EACQ6X,GAAQ5X,EAAA9d,GAAA6T,EAAAtJ,EAAAvK,EAAA8d,EAAqCyY,GAAGrf,EAAA3M,KAKxD,WAAa+tB,GAAU1a,EAAA1d,KAAAud,SAAA5J,EAAAtJ,IDsBvBwT,UEtCe,SAAAJ,GACf,IAAA9J,EAAA3T,KAAAq4B,MACAhuB,EAAArK,KAAA82B,IAEA,mBAAArZ,MAA6C7H,EAAW6H,IAExD,QAAAL,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,GAAAL,EAAA,GAAA3V,EAAA,EAAyFA,EAAArF,IAAOqF,EAChG,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAN,EAAA,EAA8DA,EAAAJ,IAAOI,EACrE,GAAAkX,EAAAH,EAAA/W,GAAA,CACA,QAAA2W,EAAA+hB,EAAA/a,EAAAvJ,KAAA8C,IAAAT,SAAAzW,EAAA+W,GAAA4hB,EAAyFpC,GAAGrf,EAAA3M,GAAAzH,EAAA,EAAAjB,EAAA62B,EAAAp4B,OAAuCwC,EAAAjB,IAAOiB,GAC1I6T,EAAA+hB,EAAA51B,KACY4yB,GAAQ/e,EAAA9C,EAAAtJ,EAAAzH,EAAA41B,EAAAC,GAGpB/a,EAAAvc,KAAAq3B,GACAnb,EAAAlc,KAAA6V,GAKA,WAAaohB,GAAU1a,EAAAL,EAAA1J,EAAAtJ,IFmBvBlE,OGxCe,SAAAuF,GACf,mBAAAA,MAA2CoK,EAAOpK,IAElD,QAAA0R,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsd,EAAA,IAAAzZ,MAAA5B,GAAAqF,EAAA,EAAqFA,EAAArF,IAAOqF,EAC5F,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAwd,EAAAF,EAAAhW,GAAA,GAAA5H,EAAA,EAA4FA,EAAAJ,IAAOI,GACnGkX,EAAAH,EAAA/W,KAAA4L,EAAAwI,KAAA8C,IAAAT,SAAAzW,EAAA+W,IACA+G,EAAAzc,KAAA6V,GAKA,WAAaohB,GAAU1a,EAAA1d,KAAAud,SAAAvd,KAAAq4B,MAAAr4B,KAAA82B,MH8BvBlY,MI1Ce,SAAAiY,GACf,GAAAA,EAAAC,MAAA92B,KAAA82B,IAAA,UAAAnoB,MAEA,QAAAoQ,EAAA/e,KAAAsd,QAAA0B,EAAA6X,EAAAvZ,QAAA2B,EAAAF,EAAA3e,OAAA8e,EAAAF,EAAA5e,OAAAiC,EAAAT,KAAAud,IAAAF,EAAAC,GAAAE,EAAA,IAAAnb,MAAAgb,GAAAvX,EAAA,EAA+JA,EAAArF,IAAOqF,EACtK,QAAAsP,EAAAqI,EAAAN,EAAArX,GAAA4X,EAAAN,EAAAtX,GAAAhI,EAAA2f,EAAAjf,OAAAwe,EAAAQ,EAAA1X,GAAA,IAAAzD,MAAAvE,GAAAI,EAAA,EAAwHA,EAAAJ,IAAOI,GAC/HkX,EAAAqI,EAAAvf,IAAAwf,EAAAxf,MACA8e,EAAA9e,GAAAkX,GAKA,KAAQtP,EAAAuX,IAAQvX,EAChB0X,EAAA1X,GAAAqX,EAAArX,GAGA,WAAa0wB,GAAUhZ,EAAApf,KAAAud,SAAAvd,KAAAq4B,MAAAr4B,KAAA82B,MJ4BvBhY,UJzCe,WACf,WAAaiZ,GAAS/3B,KAAAsd,QAAAtd,KAAAud,WIyCtBsZ,WK3Ce,WAKf,IAJA,IAAAljB,EAAA3T,KAAAq4B,MACAK,EAAA14B,KAAA82B,IACA6B,EAAYL,KAEZlb,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsH,EAAA,EAA2DA,EAAArF,IAAOqF,EAClE,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAN,EAAA,EAA8DA,EAAAJ,IAAOI,EACrE,GAAAkX,EAAAH,EAAA/W,GAAA,CACA,IAAA24B,EAAsBpC,GAAGrf,EAAA0hB,GACjBlD,GAAQxe,EAAArD,EAAAglB,EAAA74B,EAAA+W,EAAA,CAChBod,KAAAwE,EAAAxE,KAAAwE,EAAAzE,MAAAyE,EAAAzC,SACAhC,MAAA,EACAgC,SAAAyC,EAAAzC,SACAC,KAAAwC,EAAAxC,OAMA,WAAamC,GAAUhb,EAAApd,KAAAud,SAAA5J,EAAAglB,ILyBvBzkB,KAAAqkB,GAAArkB,KACAwL,MAAA6Y,GAAA7Y,MACA1I,KAAAuhB,GAAAvhB,KACA8G,KAAAya,GAAAza,KACA6B,MAAA4Y,GAAA5Y,MACA5B,KAAAwa,GAAAxa,KACA1a,GN5Be,SAAAsQ,EAAA+H,GACf,IAAArR,EAAArK,KAAA82B,IAEA,OAAAxjB,UAAAlT,OAAA,EACQi2B,GAAGr2B,KAAAgX,OAAA3M,GAAAhH,MAAAsQ,GACX3T,KAAA+d,KAAA2Z,GAAArtB,EAAAsJ,EAAA+H,KMwBAkE,KMiBe,SAAAjM,EAAArB,GACf,IAAA2C,EAAiBL,EAASjB,GAAA7T,EAAA,cAAAmV,EAAuC+c,GAAuB+E,GACxF,OAAA/2B,KAAAm3B,UAAAxjB,EAAA,mBAAArB,GACA2C,EAAAF,MAlBA,SAAuBE,EAAAvD,EAAAY,GACvB,IAAAsmB,EACAC,EACAC,EACA,kBACA,IAAAC,EAAAC,EAAAC,EAAA3mB,EAAAtS,MACA,SAAAi5B,EAGA,OAFAF,EAAA/4B,KAAA6f,eAAA5K,EAAAH,MAAAG,EAAAF,WACAikB,EAAAC,EAAA,IACA,KACAF,IAAAH,GAAAI,IAAAH,EAAAC,GACAD,EAAAG,EAAAF,EAAApnB,EAAAknB,EAAAG,EAAAE,IALAj5B,KAAA4X,kBAAA3C,EAAAH,MAAAG,EAAAF,SArBA,SAAqBpB,EAAAjC,EAAAY,GACrB,IAAAsmB,EACAC,EACAC,EACA,kBACA,IAAAC,EAAAC,EAAAC,EAAA3mB,EAAAtS,MACA,SAAAi5B,EAGA,OAFAF,EAAA/4B,KAAAsZ,aAAA3F,OACAqlB,EAAAC,EAAA,IACA,KACAF,IAAAH,GAAAI,IAAAH,EAAAC,GACAD,EAAAG,EAAAF,EAAApnB,EAAAknB,EAAAG,EAAAE,IALAj5B,KAAA0X,gBAAA/D,MA2BuDsB,EAAAnV,EAAe82B,GAAU52B,KAAA,QAAA2T,EAAArB,IAChF,MAAAA,GAAA2C,EAAAF,MAhEA,SAAqBE,GACrB,kBACAjV,KAAA4X,kBAAA3C,EAAAH,MAAAG,EAAAF,SARA,SAAmBpB,GACnB,kBACA3T,KAAA0X,gBAAA/D,MAoEmEsB,IACnEA,EAAAF,MA/CA,SAAuBE,EAAAvD,EAAAunB,GACvB,IAAAL,EAEAE,EADAE,EAAAC,EAAA,GAEA,kBACA,IAAAF,EAAA/4B,KAAA6f,eAAA5K,EAAAH,MAAAG,EAAAF,OACA,OAAAgkB,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAApnB,EAAAknB,EAAAG,EAAAE,KApBA,SAAqBtlB,EAAAjC,EAAAunB,GACrB,IAAAL,EAEAE,EADAE,EAAAC,EAAA,GAEA,kBACA,IAAAF,EAAA/4B,KAAAsZ,aAAA3F,GACA,OAAAolB,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAApnB,EAAAknB,EAAAG,EAAAE,MAmDuDhkB,EAAAnV,EAAAwS,KNrBvD6kB,UVnBe,SAAAxjB,EAAArB,GACf,IAAA8E,EAAA,QAAAzD,EACA,GAAAL,UAAAlT,OAAA,SAAAgX,EAAApX,KAAA61B,MAAAze,OAAA8f,OACA,SAAA5kB,EAAA,OAAAtS,KAAA61B,MAAAze,EAAA,MACA,sBAAA9E,EAAA,UAAA3D,MACA,IAAAsG,EAAiBL,EAASjB,GAC1B,OAAA3T,KAAA61B,MAAAze,GAAAnC,EAAAF,MAAAiiB,GAAAG,IAAAliB,EAAA3C,KUcA+F,MHYe,SAAA1E,EAAArB,EAAAkG,GACf,IAAA1Y,EAAA,cAAA6T,GAAA,IAAyCoe,GAAuBgF,GAChE,aAAAzkB,EAAAtS,KACAi4B,WAAAtkB,EAjEA,SAAAA,EAAAjC,GACA,IAAAknB,EACAC,EACAC,EACA,kBACA,IAAAC,EAAkBpgB,EAAK3Y,KAAA2T,GACvBqlB,GAAAh5B,KAAAqY,MAAAC,eAAA3E,GAAoDgF,EAAK3Y,KAAA2T,IACzD,OAAAolB,IAAAC,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,EACAA,EAAApnB,EAAAknB,EAAAG,EAAAF,EAAAG,IAwDAE,CAAAvlB,EAAA7T,IACAuD,GAAA,aAAAsQ,EAA+BqkB,GAAWrkB,IAC1C,mBAAArB,EAAAtS,KACAi4B,WAAAtkB,EArCA,SAAsBA,EAAAjC,EAAAY,GACtB,IAAAsmB,EACAC,EACAC,EACA,kBACA,IAAAC,EAAkBpgB,EAAK3Y,KAAA2T,GACvBslB,EAAA3mB,EAAAtS,MACAg5B,EAAAC,EAAA,GAEA,OADA,MAAAA,IAAAj5B,KAAAqY,MAAAC,eAAA3E,GAAAqlB,EAAAC,EAA6EtgB,EAAK3Y,KAAA2T,IAClFolB,IAAAC,EAAA,KACAD,IAAAH,GAAAI,IAAAH,EAAAC,GACAD,EAAAG,EAAAF,EAAApnB,EAAAknB,EAAAG,EAAAE,KA0BwBE,CAAaxlB,EAAA7T,EAAU82B,GAAU52B,KAAA,SAAA2T,EAAArB,KACzDyL,KAvBA,SAAA1T,EAAAsJ,GACA,IAAAgkB,EAAAC,EAAAwB,EAAAxf,EAAAxC,EAAA,SAAAzD,EAAAiI,EAAA,OAAAxE,EACA,kBACA,IAAAgf,EAAmBE,GAAGt2B,KAAAqK,GACtBhH,EAAA+yB,EAAA/yB,GACAqY,EAAA,MAAA0a,EAAA9jB,MAAA8E,GAAAwC,MAAqEoe,GAAWrkB,SAAA0lB,EAKhFh2B,IAAAs0B,GAAAyB,IAAA1d,IAAAkc,GAAAD,EAAAt0B,GAAA4Q,QAAA5Q,GAAAuY,EAAAwd,EAAA1d,GAEA0a,EAAA/yB,GAAAu0B,GAWA0B,CAAAt5B,KAAA82B,IAAAnjB,IACA3T,KACAi4B,WAAAtkB,EApDA,SAAsBA,EAAAjC,EAAAunB,GACtB,IAAAL,EAEAE,EADAE,EAAAC,EAAA,GAEA,kBACA,IAAAF,EAAkBpgB,EAAK3Y,KAAA2T,GACvB,OAAAolB,IAAAC,EAAA,KACAD,IAAAH,EAAAE,EACAA,EAAApnB,EAAAknB,EAAAG,EAAAE,IA4CwBM,CAAa5lB,EAAA7T,EAAAwS,GAAAkG,GACrCnV,GAAA,aAAAsQ,EAAA,OGrBAskB,WFxCe,SAAAtkB,EAAArB,EAAAkG,GACf,IAAApB,EAAA,UAAAzD,GAAA,IACA,GAAAL,UAAAlT,OAAA,SAAAgX,EAAApX,KAAA61B,MAAAze,OAAA8f,OACA,SAAA5kB,EAAA,OAAAtS,KAAA61B,MAAAze,EAAA,MACA,sBAAA9E,EAAA,UAAA3D,MACA,OAAA3O,KAAA61B,MAAAze,EAAA6gB,GAAAtkB,EAAArB,EAAA,MAAAkG,EAAA,GAAAA,KEoCAwH,KD3Ce,SAAA1N,GACf,OAAAtS,KAAA61B,MAAA,0BAAAvjB,EARA,SAAqBA,GACrB,kBACA,IAAA2mB,EAAA3mB,EAAAtS,MACAA,KAAAka,YAAA,MAAA+e,EAAA,GAAAA,GAMQO,CAAa5C,GAAU52B,KAAA,OAAAsS,IAf/B,SAAqBA,GACrB,kBACAtS,KAAAka,YAAA5H,GAcQmnB,CAAY,MAAAnnB,EAAA,GAAAA,EAAA,MCyCpBsH,OLnDe,WACf,OAAA5Z,KAAAqD,GAAA,cATAgH,EASArK,KAAA82B,IARA,WACA,IAAA3gB,EAAAnW,KAAA2a,WACA,QAAA7a,KAAAE,KAAA21B,aAAA,IAAA71B,IAAAuK,EAAA,OACA8L,KAAA8E,YAAAjb,SAJA,IAAAqK,GK4DAwrB,MZTe,SAAAliB,EAAArB,GACf,IAAAjI,EAAArK,KAAA82B,IAIA,GAFAnjB,GAAA,GAEAL,UAAAlT,OAAA,GAEA,IADA,IACAX,EADAo2B,EAAgBQ,GAAGr2B,KAAAgX,OAAA3M,GAAAwrB,MACnB/1B,EAAA,EAAAJ,EAAAm2B,EAAAz1B,OAAwCN,EAAAJ,IAAOI,EAC/C,IAAAL,EAAAo2B,EAAA/1B,IAAA6T,SACA,OAAAlU,EAAA6S,MAGA,YAGA,OAAAtS,KAAA+d,MAAA,MAAAzL,EAAAkkB,GAAAG,IAAAtsB,EAAAsJ,EAAArB,KYLA0hB,MT/Ce,SAAA1hB,GACf,IAAAjI,EAAArK,KAAA82B,IAEA,OAAAxjB,UAAAlT,OACAJ,KAAA+d,MAAA,mBAAAzL,EACA+kB,GACAC,IAAAjtB,EAAAiI,IACQ+jB,GAAGr2B,KAAAgX,OAAA3M,GAAA2pB,OSyCXgC,SRhDe,SAAA1jB,GACf,IAAAjI,EAAArK,KAAA82B,IAEA,OAAAxjB,UAAAlT,OACAJ,KAAA+d,MAAA,mBAAAzL,EACAilB,GACAC,IAAAntB,EAAAiI,IACQ+jB,GAAGr2B,KAAAgX,OAAA3M,GAAA2rB,UQ0CXC,KPtDe,SAAA3jB,GACf,IAAAjI,EAAArK,KAAA82B,IAEA,OAAAxjB,UAAAlT,OACAJ,KAAA+d,KAAA0Z,GAAAptB,EAAAiI,IACQ+jB,GAAGr2B,KAAAgX,OAAA3M,GAAA4rB,MOkDX/lB,IO9De,WACf,IAAAynB,EAAAC,EAAAzjB,EAAAnU,KAAAqK,EAAA8J,EAAA2iB,IAAAhZ,EAAA3J,EAAA2J,OACA,WAAA4b,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,CAAkBvnB,MAAAsnB,GAClB1pB,EAAA,CAAeoC,MAAA,WAAmB,KAAAwL,GAAA6b,MAElCxlB,EAAA4J,KAAA,WACA,IAAAqY,EAAqBE,GAAGt2B,KAAAqK,GACxBhH,EAAA+yB,EAAA/yB,GAKAA,IAAAs0B,KACAC,GAAAD,EAAAt0B,GAAA4Q,QACAxQ,EAAAo2B,OAAA14B,KAAA04B,GACAjC,EAAAn0B,EAAA8yB,UAAAp1B,KAAA04B,GACAjC,EAAAn0B,EAAAyM,IAAA/O,KAAA+O,IAGAkmB,EAAA/yB,GAAAu0B,SCpBO,SAAAkC,EAAAj5B,GAGP,SAAAk5B,EAAAt6B,GACA,OAAAmC,KAAAkC,IAAArE,EAAAoB,GAKA,OARAA,KAMAk5B,EAAAC,SAAAF,EAEAC,GATO,CAFK,GAcL,SAAAD,EAAAj5B,GAGP,SAAAo5B,EAAAx6B,GACA,SAAAmC,KAAAkC,IAAA,EAAArE,EAAAoB,GAKA,OARAA,KAMAo5B,EAAAD,SAAAF,EAEAG,EATO,CAdK,GA0BL,SAAAH,EAAAj5B,GAGP,SAAAq5B,EAAAz6B,GACA,QAAAA,GAAA,MAAAmC,KAAAkC,IAAArE,EAAAoB,GAAA,EAAAe,KAAAkC,IAAA,EAAArE,EAAAoB,IAAA,EAKA,OARAA,KAMAq5B,EAAAF,SAAAF,EAEAI,EATO,CA1BK,GCAZt4B,KAAAqK,ICEO,SAAA6tB,EAAAl5B,GAGP,SAAAu5B,EAAA16B,GACA,OAAAA,MAAAmB,EAAA,GAAAnB,EAAAmB,GAKA,OARAA,KAMAu5B,EAAAC,UAAAN,EAEAK,GATO,CAFP,SAcO,SAAAL,EAAAl5B,GAGP,SAAAy5B,EAAA56B,GACA,QAAAA,MAAAmB,EAAA,GAAAnB,EAAAmB,GAAA,EAKA,OARAA,KAMAy5B,EAAAD,UAAAN,EAEAO,EATO,CAdP,SA0BO,SAAAP,EAAAl5B,GAGP,SAAA05B,EAAA76B,GACA,QAAAA,GAAA,KAAAA,MAAAmB,EAAA,GAAAnB,EAAAmB,IAAAnB,GAAA,GAAAA,IAAAmB,EAAA,GAAAnB,EAAAmB,GAAA,KAKA,OARAA,KAMA05B,EAAAF,UAAAN,EAEAQ,EATO,CA1BP,aCAAC,GAAA,EAAA34B,KAAAqK,GCKAuuB,IDDO,SAAAV,EAAA/5B,EAAAgC,GACP,IAAAnB,EAAAgB,KAAA64B,KAAA,GAAA16B,EAAA6B,KAAAzB,IAAA,EAAAJ,MAAAgC,GAAAw4B,IAEA,SAAAG,EAAAj7B,GACA,OAAAM,EAAA6B,KAAAkC,IAAA,OAAArE,GAAAmC,KAAAqB,KAAArC,EAAAnB,GAAAsC,GAMA,OAHA24B,EAAAC,UAAA,SAAA56B,GAAqC,OAAA+5B,EAAA/5B,EAAAgC,EAAAw4B,KACrCG,EAAAE,OAAA,SAAA74B,GAAkC,OAAA+3B,EAAA/5B,EAAAgC,IAElC24B,EAVO,CAHP,EACA,IAeO,SAAAZ,EAAA/5B,EAAAgC,GACP,IAAAnB,EAAAgB,KAAA64B,KAAA,GAAA16B,EAAA6B,KAAAzB,IAAA,EAAAJ,MAAAgC,GAAAw4B,IAEA,SAAAM,EAAAp7B,GACA,SAAAM,EAAA6B,KAAAkC,IAAA,OAAArE,OAAAmC,KAAAqB,KAAAxD,EAAAmB,GAAAmB,GAMA,OAHA84B,EAAAF,UAAA,SAAA56B,GAAsC,OAAA+5B,EAAA/5B,EAAAgC,EAAAw4B,KACtCM,EAAAD,OAAA,SAAA74B,GAAmC,OAAA+3B,EAAA/5B,EAAAgC,IAEnC84B,EAVO,CAhBP,EACA,IA4BO,SAAAf,EAAA/5B,EAAAgC,GACP,IAAAnB,EAAAgB,KAAA64B,KAAA,GAAA16B,EAAA6B,KAAAzB,IAAA,EAAAJ,MAAAgC,GAAAw4B,IAEA,SAAAO,EAAAr7B,GACA,QAAAA,EAAA,EAAAA,EAAA,KACAM,EAAA6B,KAAAkC,IAAA,KAAArE,GAAAmC,KAAAqB,KAAArC,EAAAnB,GAAAsC,GACA,EAAAhC,EAAA6B,KAAAkC,IAAA,MAAArE,GAAAmC,KAAAqB,KAAArC,EAAAnB,GAAAsC,IAAA,EAMA,OAHA+4B,EAAAH,UAAA,SAAA56B,GAAwC,OAAA+5B,EAAA/5B,EAAAgC,EAAAw4B,KACxCO,EAAAF,OAAA,SAAA74B,GAAqC,OAAA+3B,EAAA/5B,EAAAgC,IAErC+4B,EAZO,CA7BP,EACA,ICGA,CACA7G,KAAA,KACAD,MAAA,EACAgC,SAAA,IACAC,KCDO,SAAAx2B,GACP,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,QDGA,SAASs7B,GAAO/jB,EAAA3M,GAEhB,IADA,IAAAorB,IACAA,EAAAze,EAAA2e,iBAAAF,IAAAprB,KACA,KAAA2M,IAAA2D,YACA,OAAA6f,GAAAvG,KAAkCX,KAAGkH,GAGrC,OAAA/E,EEfAlV,GAAS/T,UAAA+pB,UCFM,SAAA5iB,GACf,OAAA3T,KAAA+d,KAAA,WACIwY,GAASv2B,KAAA2T,MDCb4M,GAAS/T,UAAAqqB,WFiBM,SAAAljB,GACf,IAAAtJ,EACAorB,EAEA9hB,aAAsBykB,IACtB/tB,EAAAsJ,EAAAmjB,IAAAnjB,IAAA0kB,QAEAhuB,EAASiuB,MAAK7C,EAAA+E,IAAAvG,KAAoCX,KAAG3f,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAGrD,QAAAyJ,EAAApd,KAAAsd,QAAAjb,EAAA+a,EAAAhd,OAAAsH,EAAA,EAA2DA,EAAArF,IAAOqF,EAClE,QAAAsP,EAAAH,EAAAuG,EAAA1V,GAAAhI,EAAAmX,EAAAzW,OAAAN,EAAA,EAA8DA,EAAAJ,IAAOI,GACrEkX,EAAAH,EAAA/W,KACQ01B,GAAQxe,EAAArD,EAAAtJ,EAAAvK,EAAA+W,EAAA4e,GAAqCsF,GAAO/jB,EAAA3M,IAK5D,WAAa+tB,GAAUhb,EAAApd,KAAAud,SAAA5J,EAAAtJ,IIxBvB,UAAAhF,IAA0B21B,IAO1B,UAAA31B,IAA0B21B,IAO1B,sCAAA31B,IAA4D21B,IA8D5D,SAASA,GAAIv7B,GACb,OAAUgL,KAAAhL,GC7FHmC,KAAAoB,IACApB,KAAAqB,IACMrB,KAAAqK,GAGCrK,KAAAzB,ICLE8D,MAAAuI,UAAAvL,MCYD,ICZXg6B,GAAEr5B,KAAAqK,GACFivB,GAAG,EAAOD,GAEdE,GAAiBD,GADN,KAGX,SAAAE,KACAp7B,KAAAq7B,IAAAr7B,KAAAs7B,IACAt7B,KAAAu7B,IAAAv7B,KAAAw7B,IAAA,KACAx7B,KAAAyD,EAAA,GAGA,SAASg4B,KACT,WAAAL,GAGAA,GAAA5uB,UAAiBivB,GAAIjvB,UAAA,CACrBoC,YAAAwsB,GACAM,OAAA,SAAAx5B,EAAAC,GACAnC,KAAAyD,GAAA,KAAAzD,KAAAq7B,IAAAr7B,KAAAu7B,KAAAr5B,GAAA,KAAAlC,KAAAs7B,IAAAt7B,KAAAw7B,KAAAr5B,IAEAw5B,UAAA,WACA,OAAA37B,KAAAu7B,MACAv7B,KAAAu7B,IAAAv7B,KAAAq7B,IAAAr7B,KAAAw7B,IAAAx7B,KAAAs7B,IACAt7B,KAAAyD,GAAA,MAGAm4B,OAAA,SAAA15B,EAAAC,GACAnC,KAAAyD,GAAA,KAAAzD,KAAAu7B,KAAAr5B,GAAA,KAAAlC,KAAAw7B,KAAAr5B,IAEA05B,iBAAA,SAAA92B,EAAAE,EAAA/C,EAAAC,GACAnC,KAAAyD,GAAA,MAAAsB,EAAA,MAAAE,EAAA,KAAAjF,KAAAu7B,KAAAr5B,GAAA,KAAAlC,KAAAw7B,KAAAr5B,IAEA25B,cAAA,SAAA/2B,EAAAE,EAAA82B,EAAAC,EAAA95B,EAAAC,GACAnC,KAAAyD,GAAA,MAAAsB,EAAA,MAAAE,EAAA,MAAA82B,EAAA,MAAAC,EAAA,KAAAh8B,KAAAu7B,KAAAr5B,GAAA,KAAAlC,KAAAw7B,KAAAr5B,IAEA85B,MAAA,SAAAl3B,EAAAE,EAAA82B,EAAAC,EAAAn8B,GACAkF,KAAAE,KAAA82B,KAAAC,KAAAn8B,KACA,IAAAiF,EAAA9E,KAAAu7B,IACAv2B,EAAAhF,KAAAw7B,IACAU,EAAAH,EAAAh3B,EACAo3B,EAAAH,EAAA/2B,EACAm3B,EAAAt3B,EAAAC,EACAs3B,EAAAr3B,EAAAC,EACAq3B,EAAAF,IAAAC,IAGA,GAAAx8B,EAAA,YAAA8O,MAAA,oBAAA9O,GAGA,UAAAG,KAAAu7B,IACAv7B,KAAAyD,GAAA,KAAAzD,KAAAu7B,IAAAx2B,GAAA,KAAA/E,KAAAw7B,IAAAv2B,QAIA,GAAAq3B,EApDW,KAyDX,GAAA16B,KAAAiC,IAAAw4B,EAAAH,EAAAC,EAAAC,GAzDW,MAyD6Cv8B,EAKxD,CACA,IAAA08B,EAAAR,EAAAj3B,EACA03B,EAAAR,EAAAh3B,EACAy3B,EAAAP,IAAAC,IACAO,EAAAH,IAAAC,IACAG,EAAA/6B,KAAAC,KAAA46B,GACAG,EAAAh7B,KAAAC,KAAAy6B,GACA36B,EAAA9B,EAAA+B,KAAAmB,KAA4Bk4B,GAAEr5B,KAAAE,MAAA26B,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GAC9BC,EAAAl7B,EAAAi7B,EACAE,EAAAn7B,EAAAg7B,EAGA/6B,KAAAiC,IAAAg5B,EAAA,GA1EW,OA2EX78B,KAAAyD,GAAA,KAAAsB,EAAA83B,EAAAT,GAAA,KAAAn3B,EAAA43B,EAAAR,IAGAr8B,KAAAyD,GAAA,IAAA5D,EAAA,IAAAA,EAAA,WAAAw8B,EAAAE,EAAAH,EAAAI,GAAA,KAAAx8B,KAAAu7B,IAAAx2B,EAAA+3B,EAAAZ,GAAA,KAAAl8B,KAAAw7B,IAAAv2B,EAAA63B,EAAAX,QApBAn8B,KAAAyD,GAAA,KAAAzD,KAAAu7B,IAAAx2B,GAAA,KAAA/E,KAAAw7B,IAAAv2B,UAuBA83B,IAAA,SAAA76B,EAAAC,EAAAtC,EAAAm9B,EAAAC,EAAAC,GACAh7B,KAAAC,KACA,IAAA6e,GADAnhB,MACA+B,KAAAoB,IAAAg6B,GACA/b,EAAAphB,EAAA+B,KAAAqB,IAAA+5B,GACAl4B,EAAA5C,EAAA8e,EACAhc,EAAA7C,EAAA8e,EACAkc,EAAA,EAAAD,EACAE,EAAAF,EAAAF,EAAAC,IAAAD,EAGA,GAAAn9B,EAAA,YAAA8O,MAAA,oBAAA9O,GAGA,OAAAG,KAAAu7B,IACAv7B,KAAAyD,GAAA,IAAAqB,EAAA,IAAAE,GAIApD,KAAAiC,IAAA7D,KAAAu7B,IAAAz2B,GAnGW,MAmGmClD,KAAAiC,IAAA7D,KAAAw7B,IAAAx2B,GAnGnC,QAoGXhF,KAAAyD,GAAA,IAAAqB,EAAA,IAAAE,GAIAnF,IAGAu9B,EAAA,IAAAA,IAA0BlC,GAAMA,IAGhCkC,EAAAjC,GACAn7B,KAAAyD,GAAA,IAAA5D,EAAA,IAAAA,EAAA,QAAAs9B,EAAA,KAAAj7B,EAAA8e,GAAA,KAAA7e,EAAA8e,GAAA,IAAAphB,EAAA,IAAAA,EAAA,QAAAs9B,EAAA,KAAAn9B,KAAAu7B,IAAAz2B,GAAA,KAAA9E,KAAAw7B,IAAAx2B,GAIAo4B,EAnHW,OAoHXp9B,KAAAyD,GAAA,IAAA5D,EAAA,IAAAA,EAAA,SAAAu9B,GAAqDnC,IAAE,IAAAkC,EAAA,KAAAn9B,KAAAu7B,IAAAr5B,EAAArC,EAAA+B,KAAAoB,IAAAi6B,IAAA,KAAAj9B,KAAAw7B,IAAAr5B,EAAAtC,EAAA+B,KAAAqB,IAAAg6B,OAGvDI,KAAA,SAAAn7B,EAAAC,EAAAI,EAAAzB,GACAd,KAAAyD,GAAA,KAAAzD,KAAAq7B,IAAAr7B,KAAAu7B,KAAAr5B,GAAA,KAAAlC,KAAAs7B,IAAAt7B,KAAAw7B,KAAAr5B,GAAA,MAAAI,EAAA,MAAAzB,EAAA,KAAAyB,EAAA,KAEAyD,SAAA,WACA,OAAAhG,KAAAyD,IC3HA,SAAA65B,MAkDA,SAASC,GAAGC,EAAAh8B,GACZ,IAAA6D,EAAA,IAAAi4B,GAGA,GAAAE,aAAAF,GAAAE,EAAAzf,KAAA,SAAAzL,EAAA8E,GAA+D/R,EAAAyO,IAAAsD,EAAA9E,UAG/D,GAAArO,MAAAsD,QAAAi2B,GAAA,CACA,IAEA98B,EAFAZ,GAAA,EACAJ,EAAA89B,EAAAp9B,OAGA,SAAAoB,EAAA,OAAA1B,EAAAJ,GAAA2F,EAAAyO,IAAAhU,EAAA09B,EAAA19B,SACA,OAAAA,EAAAJ,GAAA2F,EAAAyO,IAAAtS,EAAAd,EAAA88B,EAAA19B,KAAA09B,GAAA98B,QAIA,GAAA88B,EAAA,QAAApmB,KAAAomB,EAAAn4B,EAAAyO,IAAAsD,EAAAomB,EAAApmB,IAEA,OAAA/R,EAnEAi4B,GAAA9wB,UAAgB+wB,GAAG/wB,UAAA,CACnBoC,YAAA0uB,GACAG,IAAA,SAAArmB,GACA,MAPiB,IAOCA,KAAApX,MAElB6T,IAAA,SAAAuD,GACA,OAAApX,KAViB,IAUKoX,IAEtBtD,IAAA,SAAAsD,EAAA9E,GAEA,OADAtS,KAbiB,IAaFoX,GAAA9E,EACftS,MAEA4Z,OAAA,SAAAxC,GACA,IAAA0I,EAjBiB,IAiBQ1I,EACzB,OAAA0I,KAAA9f,kBAAA8f,IAEA4d,MAAA,WACA,QAAA5d,KAAA9f,KArBiB,MAqBjB8f,EAAA,WAAyD9f,KAAA8f,IAEzD6d,KAAA,WACA,IAAAA,EAAA,GACA,QAAA7d,KAAA9f,KAzBiB,MAyBjB8f,EAAA,IAAyD6d,EAAAx8B,KAAA2e,EAAA7e,MAAA,IACzD,OAAA08B,GAEA9N,OAAA,WACA,IAAAA,EAAA,GACA,QAAA/P,KAAA9f,KA9BiB,MA8BjB8f,EAAA,IAAyD+P,EAAA1uB,KAAAnB,KAAA8f,IACzD,OAAA+P,GAEA+N,QAAA,WACA,IAAAA,EAAA,GACA,QAAA9d,KAAA9f,KAnCiB,MAmCjB8f,EAAA,IAAyD8d,EAAAz8B,KAAA,CAAgBiW,IAAA0I,EAAA7e,MAAA,GAAAqR,MAAAtS,KAAA8f,KACzE,OAAA8d,GAEA9f,KAAA,WACA,IAAAA,EAAA,EACA,QAAAgC,KAAA9f,KAxCiB,MAwCjB8f,EAAA,MAAyDhC,EACzD,OAAAA,GAEA6B,MAAA,WACA,QAAAG,KAAA9f,KAAA,GA5CiB,MA4CjB8f,EAAA,GAAyD,SACzD,UAEA/B,KAAA,SAAAvc,GACA,QAAAse,KAAA9f,KAhDiB,MAgDjB8f,EAAA,IAAyDte,EAAAxB,KAAA8f,KAAA7e,MAAA,GAAAjB,QA0B1C,IAAA69B,GAAA,GCxEf,SAAAC,MAEA,IAAAC,GAAYF,GAAGrxB,UAkBf,SAASwxB,GAAGR,EAAAh8B,GACZ,IAAAsS,EAAA,IAAAgqB,GAGA,GAAAN,aAAAM,GAAAN,EAAAzf,KAAA,SAAAzL,GAA0DwB,EAAA4F,IAAApH,UAG1D,GAAAkrB,EAAA,CACA,IAAA19B,GAAA,EAAAJ,EAAA89B,EAAAp9B,OACA,SAAAoB,EAAA,OAAA1B,EAAAJ,GAAAoU,EAAA4F,IAAA8jB,EAAA19B,SACA,OAAAA,EAAAJ,GAAAoU,EAAA4F,IAAAlY,EAAAg8B,EAAA19B,KAAA09B,IAGA,OAAA1pB,EA7BAgqB,GAAAtxB,UAAgBwxB,GAAGxxB,UAAA,CACnBoC,YAAAkvB,GACAL,IAAAM,GAAAN,IACA/jB,IAAA,SAAApH,GAGA,OADAtS,KDXiB,KCUjBsS,GAAA,KACeA,EACftS,MAEA4Z,OAAAmkB,GAAAnkB,OACA8jB,MAAAK,GAAAL,MACA7N,OAAAkO,GAAAJ,KACA7f,KAAAigB,GAAAjgB,KACA6B,MAAAoe,GAAApe,MACA5B,KAAAggB,GAAAhgB,MCnBS9Z,MAAAuI,UAEevL,MCgBT,IClBfg9B,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAC,GACA,WAAAC,SAAA,eAAoCD,EAAAl5B,IAAA,SAAAsO,EAAA7T,GACpC,OAAA2+B,KAAAC,UAAA/qB,GAAA,OAAA7T,EAAA,MACGsG,KAAA,UAWH,SAAAu4B,GAAAC,GACA,IAAAC,EAAAzsB,OAAA8N,OAAA,MACAqe,EAAA,GAUA,OARAK,EAAAp6B,QAAA,SAAAs6B,GACA,QAAAC,KAAAD,EACAC,KAAAF,GACAN,EAAAp9B,KAAA09B,EAAAE,QAKAR,EAGA,SAAAS,GAAA1sB,EAAA2sB,GACA,IAAAr+B,EAAA0R,EAAA,GAAAlS,EAAAQ,EAAAR,OACA,OAAAA,EAAA6+B,EAAA,IAAAh7B,MAAAg7B,EAAA7+B,EAAA,GAAAgG,KAAA,GAAAxF,IASA,SAAAs+B,GAAAC,GACA,IAPmBC,EAOnBC,EAAAF,EAAAG,cACAC,EAAAJ,EAAAK,gBACAC,EAAAN,EAAAO,gBACAC,EAAAR,EAAAS,qBACA,OAAA/S,MAAAsS,GAAA,iBAXmBC,EAYDD,EAAAU,kBAXlB,MAAAb,IAAAI,EAAA,GACAA,EAAA,SAAAJ,GAAAI,EAAA,GACAJ,GAAAI,EAAA,IASkB,IAAAJ,GAAAG,EAAAW,cAAA,SAAAd,GAAAG,EAAAY,aAAA,IAClBJ,EAAA,IAAAX,GAAAK,EAAA,OAAAL,GAAAO,EAAA,OAAAP,GAAAS,EAAA,OAAAT,GAAAW,EAAA,OACAF,EAAA,IAAAT,GAAAK,EAAA,OAAAL,GAAAO,EAAA,OAAAP,GAAAS,EAAA,OACAF,GAAAF,EAAA,IAAAL,GAAAK,EAAA,OAAAL,GAAAO,EAAA,OACA,IAGe,IAAAS,GAAA,SAAAC,GACf,IAAAC,EAAA,IAAApe,OAAA,KAAAme,EAAA,SACAE,EAAAF,EAAAt/B,WAAA,GAWA,SAAAy/B,EAAApgB,EAAAxe,GACA,IAIA/B,EAJAm/B,EAAA,GACAyB,EAAArgB,EAAA5f,OACAgF,EAAA,EACA1F,EAAA,EAEA4gC,EAAAD,GAAA,EACAE,GAAA,EAMA,SAAAC,IACA,GAAAF,EAAA,OAAApC,GACA,GAAAqC,EAAA,OAAAA,GAAA,EAAAtC,GAGA,IAAAn+B,EAAAyB,EAAAmG,EAAAtC,EACA,GAAA4a,EAAArf,WAAA+G,KAAAy2B,GAAA,CACA,KAAA/4B,IAAAi7B,GAAArgB,EAAArf,WAAAyE,KAAA+4B,IAAAne,EAAArf,aAAAyE,KAAA+4B,KAIA,OAHAr+B,EAAAsF,IAAAi7B,EAAAC,GAAA,GACA/+B,EAAAye,EAAArf,WAAAyE,QAAAg5B,GAAAmC,GAAA,EACAh/B,IAAA88B,KAAgCkC,GAAA,EAAYvgB,EAAArf,WAAAyE,KAAAg5B,MAAAh5B,GAC5C4a,EAAA/e,MAAAyG,EAAA,EAAA5H,EAAA,GAAA8N,QAAA,WAIA,KAAAxI,EAAAi7B,GAAA,CACA,IAAA9+B,EAAAye,EAAArf,WAAAb,EAAAsF,QAAAg5B,GAAAmC,GAAA,OACA,GAAAh/B,IAAA88B,GAAgCkC,GAAA,EAAYvgB,EAAArf,WAAAyE,KAAAg5B,MAAAh5B,OAC5C,GAAA7D,IAAA4+B,EAAA,SACA,OAAAngB,EAAA/e,MAAAyG,EAAA5H,GAIA,OAAAwgC,GAAA,EAAAtgB,EAAA/e,MAAAyG,EAAA24B,GAGA,IA7BArgB,EAAArf,WAAA0/B,EAAA,KAAAjC,MAAAiC,EACArgB,EAAArf,WAAA0/B,EAAA,KAAAhC,MAAAgC,GA4BA5gC,EAAA+gC,OAAAtC,IAAA,CAEA,IADA,IAAAY,EAAA,GACAr/B,IAAAw+B,IAAAx+B,IAAAy+B,IAAAY,EAAA39B,KAAA1B,KAAA+gC,IACAh/B,GAAA,OAAAs9B,EAAAt9B,EAAAs9B,EAAAp/B,OACAk/B,EAAAz9B,KAAA29B,GAGA,OAAAF,EAGA,SAAA6B,EAAA7B,EAAAL,GACA,OAAAK,EAAAv5B,IAAA,SAAAy5B,GACA,OAAAP,EAAAl5B,IAAA,SAAA05B,GACA,OAAA2B,EAAA5B,EAAAC,MACO34B,KAAA65B,KAkBP,SAAAU,EAAA7B,GACA,OAAAA,EAAAz5B,IAAAq7B,GAAAt6B,KAAA65B,GAGA,SAAAS,EAAApuB,GACA,aAAAA,EAAA,GACAA,aAAAihB,KAAA2L,GAAA5sB,GACA4tB,EAAAU,KAAAtuB,GAAA,QAAAA,EAAA1E,QAAA,eACA0E,EAGA,OACAif,MA5FA,SAAAvR,EAAAxe,GACA,IAAAq/B,EAAAtC,EAAAK,EAAAwB,EAAApgB,EAAA,SAAA8e,EAAAh/B,GACA,GAAA+gC,EAAA,OAAAA,EAAA/B,EAAAh/B,EAAA,GACAy+B,EAAAO,EAAA+B,EAAAr/B,EAtDA,SAAA+8B,EAAA/8B,GACA,IAAAg8B,EAAAc,GAAAC,GACA,gBAAAO,EAAAh/B,GACA,OAAA0B,EAAAg8B,EAAAsB,GAAAh/B,EAAAy+B,IAmDAuC,CAAAhC,EAAAt9B,GAAA88B,GAAAQ,KAGA,OADAF,EAAAL,WAAA,GACAK,GAuFAwB,YACA3U,OA5BA,SAAAmT,EAAAL,GAEA,OADA,MAAAA,MAAAI,GAAAC,IACA,CAAAL,EAAAl5B,IAAAq7B,GAAAt6B,KAAA65B,IAAA7+B,OAAAq/B,EAAA7B,EAAAL,IAAAn4B,KAAA,OA2BA26B,WAxBA,SAAAnC,EAAAL,GAEA,OADA,MAAAA,MAAAI,GAAAC,IACA6B,EAAA7B,EAAAL,GAAAn4B,KAAA,OAuBA46B,WApBA,SAAApC,GACA,OAAAA,EAAAv5B,IAAAs7B,GAAAv6B,KAAA,SC1IA66B,GAAUjB,GAAG,KAENkB,GAAAD,GAAA1P,MCFP4P,IDGOF,GAAAb,UACAa,GAAAxV,OACAwV,GAAAF,WACAE,GAAAD,WCNGhB,GAAG,OAENoB,GAAAD,GAAA5P,MACA4P,GAAAf,UACAe,GAAA1V,OACA0V,GAAAJ,WACAI,GAAAH,WCRP,SAAAK,GAAAC,GACA,IAAAA,EAAAC,GAAA,UAAA5yB,MAAA2yB,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAAthB,OAGe,IAAA0hB,GAAA,SAAAC,EAAA/9B,GACf,OAAAg+B,MAAAD,EAAA/9B,GAAAi+B,KAAAR,KCHA,SAAAS,GAAAvQ,GACA,gBAAAoQ,EAAA/9B,EAAAk7B,GAEA,OADA,IAAAxrB,UAAAlT,QAAA,mBAAAwD,IAAAk7B,EAAAl7B,SAAAy1B,GACWqI,GAAIC,EAAA/9B,GAAAi+B,KAAA,SAAAP,GACf,OAAA/P,EAAA+P,EAAAxC,MAacgD,GAAYZ,IACZY,GAAYV,ICnB1B,SAAAW,GAAAt3B,GACA,gBAAAk3B,EAAA/9B,GACA,OAAW89B,GAAIC,EAAA/9B,GAAAi+B,KAAA,SAAA7hB,GACf,WAAAgiB,WAAAC,gBAAAjiB,EAAAvV,MAKes3B,GAAA,mBAEAA,GAAA,aAERA,GAAA,iBCRP,SAASG,GAAGC,EAAAjgC,EAAAC,EAAAC,GACZ,GAAAyqB,MAAA3qB,IAAA2qB,MAAA1qB,GAAA,OAAAggC,EAEA,IAAAhsB,EAOAisB,EACAC,EACAC,EACAC,EACAzxB,EACA0xB,EACA1iC,EACA4H,EAbAsP,EAAAmrB,EAAAM,MACAC,EAAA,CAAcjiC,KAAA2B,GACd0C,EAAAq9B,EAAA9G,IACAr2B,EAAAm9B,EAAA7G,IACAv2B,EAAAo9B,EAAA5G,IACAt2B,EAAAk9B,EAAA3G,IAWA,IAAAxkB,EAAA,OAAAmrB,EAAAM,MAAAC,EAAAP,EAGA,KAAAnrB,EAAA5W,QAGA,IAFA0Q,EAAA5O,IAAAkgC,GAAAt9B,EAAAC,GAAA,IAAAD,EAAAs9B,EAAmDr9B,EAAAq9B,GACnDI,EAAArgC,IAAAkgC,GAAAr9B,EAAAC,GAAA,IAAAD,EAAAq9B,EAAoDp9B,EAAAo9B,EACpDlsB,EAAAa,QAAAlX,EAAA0iC,GAAA,EAAA1xB,IAAA,OAAAqF,EAAArW,GAAA4iC,EAAAP,EAMA,GAFAG,GAAAH,EAAAQ,GAAAzuB,KAAA,KAAA8C,EAAAvW,MACA8hC,GAAAJ,EAAAS,GAAA1uB,KAAA,KAAA8C,EAAAvW,MACAyB,IAAAogC,GAAAngC,IAAAogC,EAAA,OAAAG,EAAAv6B,KAAA6O,EAAAb,IAAArW,GAAA4iC,EAAAP,EAAAM,MAAAC,EAAAP,EAGA,GACAhsB,MAAArW,GAAA,IAAAmE,MAAA,GAAAk+B,EAAAM,MAAA,IAAAx+B,MAAA,IACA6M,EAAA5O,IAAAkgC,GAAAt9B,EAAAC,GAAA,IAAAD,EAAAs9B,EAAmDr9B,EAAAq9B,GACnDI,EAAArgC,IAAAkgC,GAAAr9B,EAAAC,GAAA,IAAAD,EAAAq9B,EAAoDp9B,EAAAo9B,SACjDviC,EAAA0iC,GAAA,EAAA1xB,KAAApJ,GAAA66B,GAAAF,IAAA,EAAAC,GAAAF,IACH,OAAAjsB,EAAAzO,GAAAsP,EAAAb,EAAArW,GAAA4iC,EAAAP,EC9Ce,ICAAU,GAAA,SAAA7rB,EAAAlS,EAAAE,EAAAD,EAAAE,GACfjF,KAAAgX,OACAhX,KAAA8E,KACA9E,KAAAgF,KACAhF,KAAA+E,KACA/E,KAAAiF,MCLO,SAAS69B,GAAQ1gC,GACxB,OAAAA,EAAA,GCDO,SAAS2gC,GAAQ3gC,GACxB,OAAAA,EAAA,GCYe,SAAA4gC,GAAAtjB,EAAAxd,EAAAC,GACf,IAAAggC,EAAA,IAAAc,GAAA,MAAA/gC,EAAsC4gC,GAAQ5gC,EAAA,MAAAC,EAAkB4gC,GAAQ5gC,EAAAuO,iBACxE,aAAAgP,EAAAyiB,IAAAe,OAAAxjB,GAGA,SAAAujB,GAAA/gC,EAAAC,EAAA2C,EAAAE,EAAAD,EAAAE,GACAjF,KAAA2iC,GAAAzgC,EACAlC,KAAA4iC,GAAAzgC,EACAnC,KAAAq7B,IAAAv2B,EACA9E,KAAAs7B,IAAAt2B,EACAhF,KAAAu7B,IAAAx2B,EACA/E,KAAAw7B,IAAAv2B,EACAjF,KAAAyiC,WAAApJ,EAGA,SAAA8J,GAAAT,GAEA,IADA,IAAAzuB,EAAA,CAAcxT,KAAAiiC,EAAAjiC,MAAgB0H,EAAA8L,EAC9ByuB,IAAAv6B,eAAA,CAA+C1H,KAAAiiC,EAAAjiC,MAC/C,OAAAwT,EAGA,IAAAmvB,GAAAJ,GAAAx2B,UAAAy2B,GAAAz2B,UAEA42B,GAAAnvB,KAAA,WACA,IAEAyL,EACAjJ,EAHAxC,EAAA,IAAAgvB,GAAAjjC,KAAA2iC,GAAA3iC,KAAA4iC,GAAA5iC,KAAAq7B,IAAAr7B,KAAAs7B,IAAAt7B,KAAAu7B,IAAAv7B,KAAAw7B,KACAxkB,EAAAhX,KAAAyiC,MAIA,IAAAzrB,EAAA,OAAA/C,EAEA,IAAA+C,EAAA5W,OAAA,OAAA6T,EAAAwuB,MAAAU,GAAAnsB,GAAA/C,EAGA,IADAyL,EAAA,EAAYwQ,OAAAlZ,EAAA6J,OAAA5M,EAAAwuB,MAAA,IAAAx+B,MAAA,KACZ+S,EAAA0I,EAAA/X,OACA,QAAA7H,EAAA,EAAmBA,EAAA,IAAOA,GAC1B2W,EAAAO,EAAAkZ,OAAApwB,MACA2W,EAAArW,OAAAsf,EAAAve,KAAA,CAAsC+uB,OAAAzZ,EAAAoK,OAAA7J,EAAA6J,OAAA/gB,GAAA,IAAAmE,MAAA,KACtC+S,EAAA6J,OAAA/gB,GAAAqjC,GAAA1sB,IAKA,OAAAxC,GAGAmvB,GAAA1pB,IL3De,SAAAtX,GACf,IAAAF,GAAAlC,KAAA2iC,GAAAzuB,KAAA,KAAA9R,GACAD,GAAAnC,KAAA4iC,GAAA1uB,KAAA,KAAA9R,GACA,OAAS8/B,GAAGliC,KAAAqjC,MAAAnhC,EAAAC,GAAAD,EAAAC,EAAAC,IKyDZghC,GAAAF,OLXO,SAAAziC,GACP,IAAA2B,EAAAtC,EACAoC,EACAC,EAFAzC,EAAAe,EAAAL,OAGAkjC,EAAA,IAAAr/B,MAAAvE,GACA6jC,EAAA,IAAAt/B,MAAAvE,GACAoF,EAAAuvB,IACArvB,EAAAqvB,IACAtvB,GAAA,IACAE,GAAA,IAGA,IAAAnF,EAAA,EAAaA,EAAAJ,IAAOI,EACpB+sB,MAAA3qB,GAAAlC,KAAA2iC,GAAAzuB,KAAA,KAAA9R,EAAA3B,EAAAX,MAAA+sB,MAAA1qB,GAAAnC,KAAA4iC,GAAA1uB,KAAA,KAAA9R,MACAkhC,EAAAxjC,GAAAoC,EACAqhC,EAAAzjC,GAAAqC,EACAD,EAAA4C,MAAA5C,GACAA,EAAA6C,MAAA7C,GACAC,EAAA6C,MAAA7C,GACAA,EAAA8C,MAAA9C,IAIA,GAAA2C,EAAAC,GAAAC,EAAAC,EAAA,OAAAjF,KAMA,IAHAA,KAAAqjC,MAAAv+B,EAAAE,GAAAq+B,MAAAt+B,EAAAE,GAGAnF,EAAA,EAAaA,EAAAJ,IAAOI,EAChBoiC,GAAGliC,KAAAsjC,EAAAxjC,GAAAyjC,EAAAzjC,GAAAW,EAAAX,IAGP,OAAAE,MKrBAojC,GAAAC,MJ7De,SAAAnhC,EAAAC,GACf,GAAA0qB,MAAA3qB,OAAA2qB,MAAA1qB,MAAA,OAAAnC,KAEA,IAAA8E,EAAA9E,KAAAq7B,IACAr2B,EAAAhF,KAAAs7B,IACAv2B,EAAA/E,KAAAu7B,IACAt2B,EAAAjF,KAAAw7B,IAKA,GAAA3O,MAAA/nB,GACAC,GAAAD,EAAAlD,KAAAkuB,MAAA5tB,IAAA,EACA+C,GAAAD,EAAApD,KAAAkuB,MAAA3tB,IAAA,MAIA,CAMA,IALA,IAEAgU,EACArW,EAHAqF,EAAAJ,EAAAD,EACAkS,EAAAhX,KAAAyiC,MAIA39B,EAAA5C,MAAA6C,GAAAC,EAAA7C,MAAA8C,GAGA,OAFAnF,GAAAqC,EAAA6C,IAAA,EAAA9C,EAAA4C,GACAqR,EAAA,IAAAlS,MAAA,IAAAnE,GAAAkX,IAAAb,EAAAhR,GAAA,EACArF,GACA,OAAAiF,EAAAD,EAAAK,EAAAF,EAAAD,EAAAG,EAAyC,MACzC,OAAAL,EAAAC,EAAAI,EAAAF,EAAAD,EAAAG,EAAyC,MACzC,OAAAJ,EAAAD,EAAAK,EAAAH,EAAAC,EAAAE,EAAyC,MACzC,OAAAL,EAAAC,EAAAI,EAAAH,EAAAC,EAAAE,EAIAnF,KAAAyiC,OAAAziC,KAAAyiC,MAAAriC,SAAAJ,KAAAyiC,MAAAzrB,GAOA,OAJAhX,KAAAq7B,IAAAv2B,EACA9E,KAAAs7B,IAAAt2B,EACAhF,KAAAu7B,IAAAx2B,EACA/E,KAAAw7B,IAAAv2B,EACAjF,MIqBAojC,GAAA3iC,KC9De,WACf,IAAAA,EAAA,GAIA,OAHAT,KAAAwjC,MAAA,SAAAxsB,GACA,IAAAA,EAAA5W,OAAA,GAAAK,EAAAU,KAAA6V,EAAAvW,YAA8CuW,IAAA7O,QAE9C1H,GD0DA2iC,GAAAK,OE/De,SAAAhgC,GACf,OAAA6P,UAAAlT,OACAJ,KAAAqjC,OAAA5/B,EAAA,OAAAA,EAAA,OAAA4/B,OAAA5/B,EAAA,OAAAA,EAAA,OACAopB,MAAA7sB,KAAAq7B,UAAAhC,EAAA,EAAAr5B,KAAAq7B,IAAAr7B,KAAAs7B,KAAA,CAAAt7B,KAAAu7B,IAAAv7B,KAAAw7B,OF6DA4H,GAAAM,KG9De,SAAAxhC,EAAAC,EAAAwhC,GACf,IAAAljC,EAGAsE,EACAE,EACA82B,EACAC,EAKAr5B,EACA7C,EAXAgF,EAAA9E,KAAAq7B,IACAr2B,EAAAhF,KAAAs7B,IAKAsI,EAAA5jC,KAAAu7B,IACAsI,EAAA7jC,KAAAw7B,IACAsI,EAAA,GACA9sB,EAAAhX,KAAAyiC,MAYA,IARAzrB,GAAA8sB,EAAA3iC,KAAA,IAA2B0hC,GAAI7rB,EAAAlS,EAAAE,EAAA4+B,EAAAC,IAC/B,MAAAF,IAAAtP,KAEAvvB,EAAA5C,EAAAyhC,EAAA3+B,EAAA7C,EAAAwhC,EACAC,EAAA1hC,EAAAyhC,EAAAE,EAAA1hC,EAAAwhC,EACAA,MAGAhhC,EAAAmhC,EAAAn8B,OAGA,OAAAqP,EAAArU,EAAAqU,QACAjS,EAAApC,EAAAmC,IAAA8+B,IACA3+B,EAAAtC,EAAAqC,IAAA6+B,IACA9H,EAAAp5B,EAAAoC,IAAAD,IACAk3B,EAAAr5B,EAAAsC,IAAAD,GAGA,GAAAgS,EAAA5W,OAAA,CACA,IAAAgiC,GAAAr9B,EAAAg3B,GAAA,EACAsG,GAAAp9B,EAAA+2B,GAAA,EAEA8H,EAAA3iC,KACA,IAAY0hC,GAAI7rB,EAAA,GAAAorB,EAAAC,EAAAtG,EAAAC,GAChB,IAAY6G,GAAI7rB,EAAA,GAAAjS,EAAAs9B,EAAAD,EAAApG,GAChB,IAAY6G,GAAI7rB,EAAA,GAAAorB,EAAAn9B,EAAA82B,EAAAsG,GAChB,IAAYQ,GAAI7rB,EAAA,GAAAjS,EAAAE,EAAAm9B,EAAAC,KAIhBviC,GAAAqC,GAAAkgC,IAAA,EAAAngC,GAAAkgC,KACAz/B,EAAAmhC,IAAA1jC,OAAA,GACA0jC,IAAA1jC,OAAA,GAAA0jC,IAAA1jC,OAAA,EAAAN,GACAgkC,IAAA1jC,OAAA,EAAAN,GAAA6C,OAKA,CACA,IAAAqe,EAAA9e,GAAAlC,KAAA2iC,GAAAzuB,KAAA,KAAA8C,EAAAvW,MACAwgB,EAAA9e,GAAAnC,KAAA4iC,GAAA1uB,KAAA,KAAA8C,EAAAvW,MACAsjC,EAAA/iB,IAAAC,IACA,GAAA8iB,EAAAJ,EAAA,CACA,IAAAvhC,EAAAR,KAAAC,KAAA8hC,EAAAI,GACAj/B,EAAA5C,EAAAE,EAAA4C,EAAA7C,EAAAC,EACAwhC,EAAA1hC,EAAAE,EAAAyhC,EAAA1hC,EAAAC,EACA3B,EAAAuW,EAAAvW,MAKA,OAAAA,GHHA2iC,GAAAxpB,OIjEe,SAAAxX,GACf,GAAAyqB,MAAA3qB,GAAAlC,KAAA2iC,GAAAzuB,KAAA,KAAA9R,KAAAyqB,MAAA1qB,GAAAnC,KAAA4iC,GAAA1uB,KAAA,KAAA9R,IAAA,OAAApC,KAEA,IAAAmW,EAEA6tB,EACA7lB,EACAhW,EAKAjG,EACAC,EACAigC,EACAC,EACAvxB,EACA0xB,EACA1iC,EACA4H,EAfAsP,EAAAhX,KAAAyiC,MAIA39B,EAAA9E,KAAAq7B,IACAr2B,EAAAhF,KAAAs7B,IACAv2B,EAAA/E,KAAAu7B,IACAt2B,EAAAjF,KAAAw7B,IAWA,IAAAxkB,EAAA,OAAAhX,KAIA,GAAAgX,EAAA5W,OAAA,QAGA,IAFA0Q,EAAA5O,IAAAkgC,GAAAt9B,EAAAC,GAAA,IAAAD,EAAAs9B,EAAmDr9B,EAAAq9B,GACnDI,EAAArgC,IAAAkgC,GAAAr9B,EAAAC,GAAA,IAAAD,EAAAq9B,EAAoDp9B,EAAAo9B,EACpDlsB,EAAAa,QAAAlX,EAAA0iC,GAAA,EAAA1xB,IAAA,OAAA9Q,KACA,IAAAgX,EAAA5W,OAAA,OACA+V,EAAArW,EAAA,MAAAqW,EAAArW,EAAA,MAAAqW,EAAArW,EAAA,QAAAkkC,EAAA7tB,EAAAzO,EAAA5H,GAIA,KAAAkX,EAAAvW,OAAA2B,GAAA,GAAA+b,EAAAnH,QAAA7O,MAAA,OAAAnI,KAIA,OAHAmI,EAAA6O,EAAA7O,cAAA6O,EAAA7O,KAGAgW,GAAAhW,EAAAgW,EAAAhW,cAAAgW,EAAAhW,KAAAnI,MAGAmW,GAGAhO,EAAAgO,EAAArW,GAAAqI,SAAAgO,EAAArW,IAGAkX,EAAAb,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAa,KAAAb,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAa,EAAA5W,SACA4jC,IAAAt8B,GAAAsP,EACAhX,KAAAyiC,MAAAzrB,GAGAhX,OAbAA,KAAAyiC,MAAAt6B,EAAAnI,OJwBAojC,GAAAa,UIRO,SAAAxjC,GACP,QAAAX,EAAA,EAAAJ,EAAAe,EAAAL,OAAkCN,EAAAJ,IAAOI,EAAAE,KAAA4Z,OAAAnZ,EAAAX,IACzC,OAAAE,MJOAojC,GAAAc,KKnEe,WACf,OAAAlkC,KAAAyiC,OLmEAW,GAAAtlB,KMpEe,WACf,IAAAA,EAAA,EAIA,OAHA9d,KAAAwjC,MAAA,SAAAxsB,GACA,IAAAA,EAAA5W,OAAA,KAAA0d,QAAgC9G,IAAA7O,QAEhC2V,GNgEAslB,GAAAI,MOnEe,SAAAzvB,GACf,IAAApR,EAAA8T,EAAA3R,EAAAE,EAAAD,EAAAE,EAAA6+B,EAAA,GAAA9sB,EAAAhX,KAAAyiC,MAEA,IADAzrB,GAAA8sB,EAAA3iC,KAAA,IAA2B0hC,GAAI7rB,EAAAhX,KAAAq7B,IAAAr7B,KAAAs7B,IAAAt7B,KAAAu7B,IAAAv7B,KAAAw7B,MAC/B74B,EAAAmhC,EAAAn8B,OACA,IAAAoM,EAAAiD,EAAArU,EAAAqU,KAAAlS,EAAAnC,EAAAmC,GAAAE,EAAArC,EAAAqC,GAAAD,EAAApC,EAAAoC,GAAAE,EAAAtC,EAAAsC,KAAA+R,EAAA5W,OAAA,CACA,IAAAgiC,GAAAt9B,EAAAC,GAAA,EAAAs9B,GAAAr9B,EAAAC,GAAA,GACAwR,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA2rB,EAAAC,EAAAt9B,EAAAE,KAC9CwR,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA3R,EAAAu9B,EAAAD,EAAAn9B,KAC9CwR,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA2rB,EAAAp9B,EAAAD,EAAAs9B,KAC9C5rB,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA3R,EAAAE,EAAAo9B,EAAAC,IAG9C,OAAAriC,MPwDAojC,GAAAe,WQpEe,SAAApwB,GACf,IAAApR,EAAAmhC,EAAA,GAAA37B,EAAA,GAEA,IADAnI,KAAAyiC,OAAAqB,EAAA3iC,KAAA,IAAiC0hC,GAAI7iC,KAAAyiC,MAAAziC,KAAAq7B,IAAAr7B,KAAAs7B,IAAAt7B,KAAAu7B,IAAAv7B,KAAAw7B,MACrC74B,EAAAmhC,EAAAn8B,OAAA,CACA,IAAAqP,EAAArU,EAAAqU,KACA,GAAAA,EAAA5W,OAAA,CACA,IAAAqW,EAAA3R,EAAAnC,EAAAmC,GAAAE,EAAArC,EAAAqC,GAAAD,EAAApC,EAAAoC,GAAAE,EAAAtC,EAAAsC,GAAAm9B,GAAAt9B,EAAAC,GAAA,EAAAs9B,GAAAr9B,EAAAC,GAAA,GACAwR,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA3R,EAAAE,EAAAo9B,EAAAC,KAC9C5rB,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA2rB,EAAAp9B,EAAAD,EAAAs9B,KAC9C5rB,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA3R,EAAAu9B,EAAAD,EAAAn9B,KAC9CwR,EAAAO,EAAA,KAAA8sB,EAAA3iC,KAAA,IAA0C0hC,GAAIpsB,EAAA2rB,EAAAC,EAAAt9B,EAAAE,IAE9CkD,EAAAhH,KAAAwB,GAEA,KAAAA,EAAAwF,EAAAR,OACAoM,EAAApR,EAAAqU,KAAArU,EAAAmC,GAAAnC,EAAAqC,GAAArC,EAAAoC,GAAApC,EAAAsC,IAEA,OAAAjF,MRoDAojC,GAAAlhC,EFnEe,SAAAuB,GACf,OAAA6P,UAAAlT,QAAAJ,KAAA2iC,GAAAl/B,EAAAzD,WAAA2iC,IEmEAS,GAAAjhC,EDpEe,SAAAsB,GACf,OAAA6P,UAAAlT,QAAAJ,KAAA4iC,GAAAn/B,EAAAzD,WAAA4iC,IUQAhhC,KAAAqK,GAAArK,KAAAC,KAAA,GADA,ICTeuiC,GAAA,SAAAliC,EAAAH,GACf,IAAAjC,GAAAoC,EAAAH,EAAAG,EAAAmiC,cAAAtiC,EAAA,GAAAG,EAAAmiC,iBAAAzkC,QAAA,oBACA,IAAAE,EAAAwkC,EAAApiC,EAAAjB,MAAA,EAAAnB,GAIA,OACAwkC,EAAAlkC,OAAA,EAAAkkC,EAAA,GAAAA,EAAArjC,MAAA,GAAAqjC,GACApiC,EAAAjB,MAAAnB,EAAA,KCTeykC,GAAA,SAAAriC,GACf,OAAAA,EAAakiC,GAAaxiC,KAAAiC,IAAA3B,OAAA,GAAAwO,KCF1B8zB,GAAA,2EAEe,SAAAC,GAAAC,GACf,WAAAC,GAAAD,GAKA,SAAAC,GAAAD,GACA,KAAAh5B,EAAA84B,GAAA9Y,KAAAgZ,IAAA,UAAA/1B,MAAA,mBAAA+1B,GACA,IAAAh5B,EACA1L,KAAA4kC,KAAAl5B,EAAA,QACA1L,KAAA6kC,MAAAn5B,EAAA,QACA1L,KAAA8kC,KAAAp5B,EAAA,QACA1L,KAAA+kC,OAAAr5B,EAAA,OACA1L,KAAAglC,OAAAt5B,EAAA,GACA1L,KAAAi/B,MAAAvzB,EAAA,KAAAA,EAAA,GACA1L,KAAAilC,QAAAv5B,EAAA,GACA1L,KAAAklC,UAAAx5B,EAAA,KAAAA,EAAA,GAAAzK,MAAA,GACAjB,KAAAkG,OAAAwF,EAAA,GACA1L,KAAAyK,KAAAiB,EAAA,QAdA+4B,GAAAj4B,UAAAm4B,GAAAn4B,UAiBAm4B,GAAAn4B,UAAAxG,SAAA,WACA,OAAAhG,KAAA4kC,KACA5kC,KAAA6kC,MACA7kC,KAAA8kC,KACA9kC,KAAA+kC,QACA/kC,KAAAglC,KAAA,SACA,MAAAhlC,KAAAi/B,MAAA,GAAAr9B,KAAAzB,IAAA,IAAAH,KAAAi/B,SACAj/B,KAAAilC,MAAA,SACA,MAAAjlC,KAAAklC,UAAA,OAAAtjC,KAAAzB,IAAA,IAAAH,KAAAklC,aACAllC,KAAAkG,KAAA,QACAlG,KAAAyK,MCjCe,ICCR06B,GCAHC,GFDWC,GAAA,SAAAzkC,GACf0kC,EAAA,QAAAjnB,EAAA3e,EAAAkB,EAAAR,OAAAN,EAAA,EAAAse,GAAA,EAAiDte,EAAAJ,IAAOI,EACxD,OAAAc,EAAAd,IACA,QAAAse,EAAAC,EAAAve,EAA4B,MAC5B,YAAAse,MAAAte,GAAqCue,EAAAve,EAAQ,MAC7C,WAAAse,EAAA,GAA4B,KAAAxd,EAAAd,GAAA,MAAAwlC,EAAuBlnB,EAAA,GAGnD,OAAAA,EAAA,EAAAxd,EAAAK,MAAA,EAAAmd,GAAAxd,EAAAK,MAAAod,EAAA,GAAAzd,GGPe2kC,GAAA,SAAArjC,EAAAH,GACf,IAAAK,EAAUgiC,GAAaliC,EAAAH,GACvB,IAAAK,EAAA,OAAAF,EAAA,GACA,IAAAoiC,EAAAliC,EAAA,GACA43B,EAAA53B,EAAA,GACA,OAAA43B,EAAA,WAAA/1B,OAAA+1B,GAAA5zB,KAAA,KAAAk+B,EACAA,EAAAlkC,OAAA45B,EAAA,EAAAsK,EAAArjC,MAAA,EAAA+4B,EAAA,OAAAsK,EAAArjC,MAAA+4B,EAAA,GACAsK,EAAA,IAAArgC,MAAA+1B,EAAAsK,EAAAlkC,OAAA,GAAAgG,KAAA,MCNeo/B,GAAA,CACfC,IAAA,SAAAvjC,EAAAH,GAAuB,WAAAG,GAAA6L,QAAAhM,IACvBS,EAAA,SAAAN,GAAoB,OAAAN,KAAAkM,MAAA5L,GAAA8D,SAAA,IACpBzE,EAAA,SAAAW,GAAoB,OAAAA,EAAA,IACpBE,EAAA,SAAAF,GAAoB,OAAAN,KAAAkM,MAAA5L,GAAA8D,SAAA,KACpBnF,EAAA,SAAAqB,EAAAH,GAAuB,OAAAG,EAAAmiC,cAAAtiC,IACvBP,EAAA,SAAAU,EAAAH,GAAuB,OAAAG,EAAA6L,QAAAhM,IACvBC,EAAA,SAAAE,EAAAH,GAAuB,OAAAG,EAAAwjC,YAAA3jC,IACvBrB,EAAA,SAAAwB,GAAoB,OAAAN,KAAAkM,MAAA5L,GAAA8D,SAAA,IACpBjE,EAAA,SAAAG,EAAAH,GAAuB,OAAQwjC,GAAa,IAAArjC,EAAAH,IAC5ClC,EAAO0lC,GACP3kC,EHVe,SAAAsB,EAAAH,GACf,IAAAK,EAAUgiC,GAAaliC,EAAAH,GACvB,IAAAK,EAAA,OAAAF,EAAA,GACA,IAAAoiC,EAAAliC,EAAA,GACA43B,EAAA53B,EAAA,GACAtC,EAAAk6B,GAAAmL,GAAA,EAAAvjC,KAAAzB,KAAA,EAAAyB,KAAAud,IAAA,EAAAvd,KAAAkuB,MAAAkK,EAAA,QACAt6B,EAAA4kC,EAAAlkC,OACA,OAAAN,IAAAJ,EAAA4kC,EACAxkC,EAAAJ,EAAA4kC,EAAA,IAAArgC,MAAAnE,EAAAJ,EAAA,GAAA0G,KAAA,KACAtG,EAAA,EAAAwkC,EAAArjC,MAAA,EAAAnB,GAAA,IAAAwkC,EAAArjC,MAAAnB,GACA,SAAAmE,MAAA,EAAAnE,GAAAsG,KAAA,KAA4Cg+B,GAAaliC,EAAAN,KAAAzB,IAAA,EAAA4B,EAAAjC,EAAA,QGCzD0F,EAAA,SAAAtD,GAAoB,OAAAN,KAAAkM,MAAA5L,GAAA8D,SAAA,IAAAgI,eACpB9L,EAAA,SAAAA,GAAoB,OAAAN,KAAAkM,MAAA5L,GAAA8D,SAAA,MChBL2/B,GAAA,SAAAzjC,GACf,OAAAA,GCQA0jC,GAAA,qEJKER,GIHa,SAAAS,GACf,ICZeC,EAAAC,EDYflvB,EAAAgvB,EAAAC,UAAAD,EAAAE,WCZeD,EDYgDD,EAAAC,SCZhDC,EDYgDF,EAAAE,UCX/D,SAAAzzB,EAAA2sB,GAOA,IANA,IAAAn/B,EAAAwS,EAAAlS,OACAX,EAAA,GACAiI,EAAA,EACA1F,EAAA8jC,EAAA,GACA1lC,EAAA,EAEAN,EAAA,GAAAkC,EAAA,IACA5B,EAAA4B,EAAA,EAAAi9B,IAAAj9B,EAAAJ,KAAAzB,IAAA,EAAA8+B,EAAA7+B,IACAX,EAAA0B,KAAAmR,EAAA0zB,UAAAlmC,GAAAkC,EAAAlC,EAAAkC,OACA5B,GAAA4B,EAAA,GAAAi9B,KACAj9B,EAAA8jC,EAAAp+B,KAAA,GAAAo+B,EAAA1lC,QAGA,OAAAX,EAAAoI,UAAAzB,KAAA2/B,KDHqGJ,GACrGM,EAAAJ,EAAAI,SACAC,EAAAL,EAAAK,QACAC,EAAAN,EAAAM,SEfe,SAAAA,GACf,gBAAA7zB,GACA,OAAAA,EAAA1E,QAAA,kBAAA9N,GACA,OAAAqmC,GAAArmC,MFYmCsmC,CAAcP,EAAAM,UAAoBR,GACrEU,EAAAR,EAAAQ,SAAA,IAEA,SAAAC,EAAA5B,GAGA,IAAAE,GAFAF,EAAgBD,GAAeC,IAE/BE,KACAC,EAAAH,EAAAG,MACAC,EAAAJ,EAAAI,KACAC,EAAAL,EAAAK,OACAC,EAAAN,EAAAM,KACA/F,EAAAyF,EAAAzF,MACAgG,EAAAP,EAAAO,MACAC,EAAAR,EAAAQ,UACAh/B,EAAAw+B,EAAAx+B,KACAuE,EAAAi6B,EAAAj6B,KAGA,MAAAA,GAAAw6B,GAAA,EAAAx6B,EAAA,KAGc+6B,GAAW/6B,KAAA,MAAAy6B,MAAA,IAAAh/B,GAAA,EAAAuE,EAAA,MAGzBu6B,GAAA,MAAAJ,GAAA,MAAAC,KAAAG,GAAA,EAAAJ,EAAA,IAAAC,EAAA,KAIA,IAAAhwB,EAAA,MAAAkwB,EAAAkB,EAAA,SAAAlB,GAAA,SAAAnE,KAAAn2B,GAAA,IAAAA,EAAAvJ,cAAA,GACAqlC,EAAA,MAAAxB,EAAAkB,EAAA,UAAArF,KAAAn2B,GAAA47B,EAAA,GAKAG,EAAqBhB,GAAW/6B,GAChCg8B,EAAA,aAAA7F,KAAAn2B,GAUA,SAAAghB,EAAAnZ,GACA,IAEAxS,EAAAJ,EAAA6B,EAFAmlC,EAAA7xB,EACA8xB,EAAAJ,EAGA,SAAA97B,EACAk8B,EAAAH,EAAAl0B,GAAAq0B,EACAr0B,EAAA,OACO,CAIP,IAAAs0B,GAHAt0B,MAGA,EAeA,GAdAA,EAAAk0B,EAAA5kC,KAAAiC,IAAAyO,GAAA4yB,GAGAh/B,IAAAoM,EAA0B+yB,GAAU/yB,IAGpCs0B,GAAA,IAAAt0B,IAAAs0B,GAAA,GAGAF,GAAAE,EAAA,MAAA9B,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAA4B,EACAC,GAAA,MAAAl8B,EAAAm7B,GAAA,EAAmDT,GAAc,OAAAwB,GAAAC,GAAA,MAAA9B,EAAA,QAIjE2B,EAEA,IADA3mC,GAAA,EAAAJ,EAAA4S,EAAAlS,SACAN,EAAAJ,GACA,OAAA6B,EAAA+Q,EAAA3R,WAAAb,KAAAyB,EAAA,IACAolC,GAAA,KAAAplC,EAAA2kC,EAAA5zB,EAAArR,MAAAnB,EAAA,GAAAwS,EAAArR,MAAAnB,IAAA6mC,EACAr0B,IAAArR,MAAA,EAAAnB,GACA,OAOAmlC,IAAAD,IAAA1yB,EAAAuE,EAAAvE,EAAA+hB,MAGA,IAAAj0B,EAAAsmC,EAAAtmC,OAAAkS,EAAAlS,OAAAumC,EAAAvmC,OACAymC,EAAAzmC,EAAA6+B,EAAA,IAAAh7B,MAAAg7B,EAAA7+B,EAAA,GAAAgG,KAAAw+B,GAAA,GAMA,OAHAK,GAAAD,IAAA1yB,EAAAuE,EAAAgwB,EAAAv0B,EAAAu0B,EAAAzmC,OAAA6+B,EAAA0H,EAAAvmC,OAAAi0B,KAAAwS,EAAA,IAGAhC,GACA,QAAAvyB,EAAAo0B,EAAAp0B,EAAAq0B,EAAAE,EAAsE,MACtE,QAAAv0B,EAAAo0B,EAAAG,EAAAv0B,EAAAq0B,EAAsE,MACtE,QAAAr0B,EAAAu0B,EAAA5lC,MAAA,EAAAb,EAAAymC,EAAAzmC,QAAA,GAAAsmC,EAAAp0B,EAAAq0B,EAAAE,EAAA5lC,MAAAb,GAAqI,MACrI,QAAAkS,EAAAu0B,EAAAH,EAAAp0B,EAAAq0B,EAGA,OAAAR,EAAA7zB,GAOA,OApEA4yB,EAAA,MAAAA,EAAA,EACA,SAAAtE,KAAAn2B,GAAA7I,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,GAAA+lB,IACAtjC,KAAAzB,IAAA,EAAAyB,KAAAud,IAAA,GAAA+lB,IA8DAzZ,EAAAzlB,SAAA,WACA,OAAA0+B,EAAA,IAGAjZ,EAaA,OACAA,OAAA6a,EACAQ,aAZA,SAAApC,EAAApyB,GACA,IAAA9Q,EAAA8kC,IAAA5B,EAAmCD,GAAeC,IAAAj6B,KAAA,IAAAi6B,IAClD7jC,EAAwD,EAAxDe,KAAAzB,KAAA,EAAAyB,KAAAud,IAAA,EAAAvd,KAAAkuB,MAAgDyU,GAAQjyB,GAAA,KACxD1P,EAAAhB,KAAAkC,IAAA,IAAAjD,GACAgU,EAAA+wB,GAAA,EAAA/kC,EAAA,GACA,gBAAAyR,GACA,OAAA9Q,EAAAoB,EAAA0P,GAAAuC,KJvHWkyB,CARX,CACAb,QAAA,IACAH,UAAA,IACAD,SAAA,IACAG,SAAA,WAKWb,GAAM3Z,OACA2Z,GAAM0B,aOdR,ICKAE,GAAA,WACf,WAAAC,IAGA,SAAAA,KACAjnC,KAAAknC,QAGAD,GAAAz6B,UAAA,CACAoC,YAAAq4B,GACAC,MAAA,WACAlnC,KAAAY,EACAZ,KAAAP,EAAA,GAEAia,IAAA,SAAAvX,GACIglC,GAAGC,GAAAjlC,EAAAnC,KAAAP,GACH0nC,GAAGnnC,KAAAonC,GAAAxmC,EAAAZ,KAAAY,GACPZ,KAAAY,EAAAZ,KAAAP,GAAA2nC,GAAA3nC,EACAO,KAAAY,EAAAwmC,GAAA3nC,GAEA4nC,QAAA,WACA,OAAArnC,KAAAY,IAIA,IAAAwmC,GAAA,IAAAH,GAEA,SAASE,GAAGH,EAAAjnC,EAAAyC,GACZ,IAAAN,EAAA8kC,EAAApmC,EAAAb,EAAAyC,EACA8kC,EAAAplC,EAAAnC,EACAwnC,EAAArlC,EAAAolC,EACAN,EAAAvnC,EAAAM,EAAAwnC,GAAA/kC,EAAA8kC,GCtCO,IAAIE,GAAO,KACPC,GAAQ,MACRC,GAAE9lC,KAAAqK,GACF07B,GAASD,GAAE,EACfE,GAAgBF,GAAE,EACdG,GAAQ,EAAFH,GAGVI,GAAcJ,GAAE,IAEhB7jC,GAAAjC,KAAAiC,IACAyJ,GAAA1L,KAAA0L,KACAtB,GAAApK,KAAAoK,MACI+7B,GAAGnmC,KAAAoB,IAEPglC,IADApmC,KAAAoF,KACApF,KAAAomC,KAEAjkC,IADAnC,KAAAkuB,MACAluB,KAAAmC,KAEIkkC,IADJrmC,KAAAkC,IACOlC,KAAAqB,KACHilC,GAAItmC,KAAAkjC,MAAA,SAAA5iC,GAA6B,OAAAA,EAAA,IAAAA,EAAA,QACrCL,GAAAD,KAAAC,KACAkB,GAAAnB,KAAAmB,IAEA,SAAAjB,GAAAI,GACP,OAAAA,EAAA,IAAAA,GAAA,EAA8BwlC,GAAE9lC,KAAAE,KAAAI,GAGzB,SAAAu4B,GAAAv4B,GACP,OAAAA,EAAA,EAAiBylC,GAAMzlC,GAAA,GAAaylC,GAAM/lC,KAAA64B,KAAAv4B,GC7B3B,SAASimC,MCKCnB,KAEXA,KCDP,SAASoB,GAASC,GACzB,IAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAA0DT,GAAGQ,GAC7D,OAAAC,EAAmBT,GAAGO,GAAAE,EAAmBP,GAAGK,GAAUL,GAAGM,IAOlD,SAAAE,GAAA1oC,EAAAyC,GACP,OAAAzC,EAAA,GAAAyC,EAAA,GAAAzC,EAAA,GAAAyC,EAAA,GAAAzC,EAAA,GAAAyC,EAAA,GAAAzC,EAAA,GAAAyC,EAAA,GAAAzC,EAAA,GAAAyC,EAAA,GAAAzC,EAAA,GAAAyC,EAAA,IAaO,SAAAkmC,GAAAtmC,GACP,IAAAT,EAAUE,GAAIO,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACdA,EAAA,IAAAT,EAAAS,EAAA,IAAAT,EAAAS,EAAA,IAAAT,ECrBeqlC,KCPf,SAAA2B,GAAAL,EAAAC,GACA,OAAU1kC,GAAGykC,GAAWZ,GAAEY,EAAA1mC,KAAAkM,OAAAw6B,EAAiCT,IAAOA,GAAGS,EAAAC,GAGrEI,GAAAC,OAAAD,GC0Be,IC/BAE,GAAA,WACf,IACAC,EADAC,EAAA,GAEA,OACAC,MAAA,SAAA9mC,EAAAC,GACA2mC,EAAA3nC,KAAA,CAAAe,EAAAC,KAEA8mC,UAAA,WACAF,EAAA5nC,KAAA2nC,EAAA,KAEAI,QAAaf,GACbgB,OAAA,WACAJ,EAAA3oC,OAAA,GAAA2oC,EAAA5nC,KAAA4nC,EAAAphC,MAAAvG,OAAA2nC,EAAA73B,WAEA7Q,OAAA,WACA,IAAAA,EAAA0oC,EAGA,OAFAA,EAAA,GACAD,EAAA,KACAzoC,KClBe+oC,GAAA,SAAArpC,EAAAyC,GACf,OAASqB,GAAG9D,EAAA,GAAAyC,EAAA,IAAgBglC,IAAW3jC,GAAG9D,EAAA,GAAAyC,EAAA,IAAgBglC,ICD1D,SAAA6B,GAAAL,EAAAM,EAAAC,EAAAC,GACAxpC,KAAAkC,EAAA8mC,EACAhpC,KAAAmF,EAAAmkC,EACAtpC,KAAAU,EAAA6oC,EACAvpC,KAAAa,EAAA2oC,EACAxpC,KAAAiC,GAAA,EACAjC,KAAAN,EAAAM,KAAA+B,EAAA,KAMe,IAAAonC,GAAA,SAAA7lC,EAAAmmC,EAAAC,EAAAh4B,EAAAi4B,GACf,IAEA7pC,EACAJ,EAHAohB,EAAA,GACA8oB,EAAA,GAwBA,GApBAtmC,EAAAkB,QAAA,SAAAqlC,GACA,MAAAnqC,EAAAmqC,EAAAzpC,OAAA,QACA,IAAAV,EAAAwC,EAAA4nC,EAAAD,EAAA,GAAAE,EAAAF,EAAAnqC,GAKA,GAAQ0pC,GAAUU,EAAAC,GAAlB,CAEA,IADAJ,EAAAV,YACAnpC,EAAA,EAAiBA,EAAAJ,IAAOI,EAAA6pC,EAAAX,OAAAc,EAAAD,EAAA/pC,IAAA,GAAAgqC,EAAA,IACxBH,EAAAT,eAIApoB,EAAA3f,KAAAe,EAAA,IAAAmnC,GAAAS,EAAAD,EAAA,UACAD,EAAAzoC,KAAAe,EAAAxB,EAAA,IAAA2oC,GAAAS,EAAA,KAAA5nC,GAAA,IACA4e,EAAA3f,KAAAe,EAAA,IAAAmnC,GAAAU,EAAAF,EAAA,UACAD,EAAAzoC,KAAAe,EAAAxB,EAAA,IAAA2oC,GAAAU,EAAA,KAAA7nC,GAAA,OAGA4e,EAAA1gB,OAAA,CAMA,IAJAwpC,EAAAthC,KAAAmhC,GACEO,GAAIlpB,GACJkpB,GAAIJ,GAEN9pC,EAAA,EAAAJ,EAAAkqC,EAAAxpC,OAA8BN,EAAAJ,IAAOI,EACrC8pC,EAAA9pC,GAAAe,EAAA6oC,KAOA,IAJA,IACAJ,EACAN,EAFA/4B,EAAA6Q,EAAA,KAIA,CAIA,IAFA,IAAAmpB,EAAAh6B,EACAi6B,GAAA,EACAD,EAAAhoC,GAAA,IAAAgoC,IAAAvqC,KAAAuQ,EAAA,OACAq5B,EAAAW,EAAA9kC,EACAwkC,EAAAV,YACA,GAEA,GADAgB,EAAAhoC,EAAAgoC,EAAAvpC,EAAAuB,GAAA,EACAgoC,EAAAppC,EAAA,CACA,GAAAqpC,EACA,IAAApqC,EAAA,EAAAJ,EAAA4pC,EAAAlpC,OAAwCN,EAAAJ,IAAOI,EAAA6pC,EAAAX,SAAAM,EAAAxpC,IAAA,GAAAkpC,EAAA,SAE/Ct3B,EAAAu4B,EAAA/nC,EAAA+nC,EAAAvqC,EAAAwC,EAAA,EAAAynC,GAEAM,IAAAvqC,MACO,CACP,GAAAwqC,EAEA,IADAZ,EAAAW,EAAAloC,EAAAoD,EACArF,EAAAwpC,EAAAlpC,OAAA,EAAqCN,GAAA,IAAQA,EAAA6pC,EAAAX,SAAAM,EAAAxpC,IAAA,GAAAkpC,EAAA,SAE7Ct3B,EAAAu4B,EAAA/nC,EAAA+nC,EAAAloC,EAAAG,GAAA,EAAAynC,GAEAM,IAAAloC,EAGAunC,GADAW,IAAAvpC,GACAyE,EACA+kC,YACKD,EAAAhoC,GACL0nC,EAAAT,aAIA,SAASc,GAAI72B,GACb,GAAAzT,EAAAyT,EAAA/S,OAAA,CAKA,IAJA,IAAAV,EAGA8C,EAFA1C,EAAA,EACAC,EAAAoT,EAAA,KAEArT,EAAAJ,GACAK,EAAAL,EAAA8C,EAAA2Q,EAAArT,GACA0C,EAAAT,EAAAhC,EACAA,EAAAyC,EAEAzC,EAAAL,EAAA8C,EAAA2Q,EAAA,GACA3Q,EAAAT,EAAAhC,GC/FA,IAAIoqC,GAAMnD,KAEV,SAAAoD,GAAApB,GACA,OAAMnlC,GAAGmlC,EAAA,KAActB,GACvBsB,EAAA,GAEWd,GAAIc,EAAA,MAAenlC,GAAGmlC,EAAA,IAAatB,IAAMG,GAAMH,IAG3C,IAAA2C,GAAA,SAAAC,EAAAtB,GACf,IAAAV,EAAA8B,GAAApB,GACAT,EAAAS,EAAA,GACAuB,EAAetC,GAAGM,GAClBiC,EAAA,CAAgBvC,GAAGK,IAAWP,GAAGO,GAAA,GACjCmC,EAAA,EACAC,EAAA,EAEEP,GAAGjD,QAEL,IAAAqD,EAAAhC,EAA0BZ,GAASH,IACnC,IAAA+C,IAAAhC,GAAiCZ,GAASH,IAE1C,QAAA1nC,EAAA,EAAAJ,EAAA4qC,EAAAlqC,OAAqCN,EAAAJ,IAAOI,EAC5C,GAAAuC,GAAAiE,EAAAgkC,EAAAxqC,IAAAM,OASA,IARA,IAAAkG,EACAjE,EACAsoC,EAAArkC,EAAAjE,EAAA,GACAuoC,EAAAR,GAAAO,GACAE,EAAAF,EAAA,KAA+B/C,GAC/BkD,EAAkB7C,GAAG4C,GACrBE,EAAkBhD,GAAG8C,GAErBnjC,EAAA,EAAmBA,EAAArF,IAAOqF,EAAAkjC,EAAAI,EAAAF,EAAAG,EAAAF,EAAAG,EAAAP,EAAAQ,EAAA,CAC1B,IAAAA,EAAA7kC,EAAAoB,GACAsjC,EAAAZ,GAAAe,GACAC,EAAAD,EAAA,KAAiCvD,GACjCqD,EAAoBhD,GAAGmD,GACvBF,EAAoBnD,GAAGqD,GACvBC,EAAAL,EAAAJ,EACA9F,EAAAuG,GAAA,OACAC,EAAAxG,EAAAuG,EACAE,EAAAD,EAAoC5D,GACpC9kC,EAAAkoC,EAAAG,EAOA,GALMd,GAAGzwB,IAAK1N,GAAKpJ,EAAAkiC,EAAYmD,GAAGqD,GAAAP,EAAAG,EAAAtoC,EAAoCmlC,GAAGuD,KACzEb,GAAAc,EAAAF,EAAAvG,EAA6C+C,GAAGwD,EAIhDE,EAAAX,GAAAtC,EAAA0C,GAAA1C,EAAA,CACA,IAAAvL,EAAkB0L,GAAeL,GAASuC,GAAUvC,GAAS+C,IACrDzC,GAAyB3L,GACjC,IAAAyO,EAA2B/C,GAAc+B,EAAAzN,GACjC2L,GAAyB8C,GACjC,IAAAC,GAAAF,EAAAF,GAAA,QAA4D5Q,GAAI+Q,EAAA,KAChEjD,EAAAkD,GAAAlD,IAAAkD,IAAA1O,EAAA,IAAAA,EAAA,OACA2N,GAAAa,EAAAF,GAAA,SAiBA,OAAAZ,GAAmBjD,IAAOiD,EAAYjD,IAAW2C,IAAO3C,IAAO,EAAAkD,GCvEhDgB,GAAA,SAAAC,EAAAC,EAAAl6B,EAAAzB,GACf,gBAAA47B,GACA,IAIAvB,EACAhnC,EACAgD,EANAwiC,EAAA8C,EAAAC,GACAC,EAAqBjD,KACrBkD,EAAAH,EAAAE,GACAE,GAAA,EAKApC,EAAA,CACAZ,QACAC,YACAC,UACA+C,aAAA,WACArC,EAAAZ,MAAAkD,EACAtC,EAAAX,UAAAkD,EACAvC,EAAAV,QAAAkD,EACA9oC,EAAA,GACAgnC,EAAA,IAEA+B,WAAA,WACAzC,EAAAZ,QACAY,EAAAX,YACAW,EAAAV,UACA5lC,EAAmB0P,EAAK1P,GACxB,IAAAomC,EAA0BW,GAAeC,EAAAr6B,GACzC3M,EAAAlD,QACA4rC,IAAAH,EAAAI,eAAAD,GAAA,GACU7C,GAAU7lC,EAAWgpC,GAAmB5C,EAAAh4B,EAAAm6B,IACzCnC,IACTsC,IAAAH,EAAAI,eAAAD,GAAA,GACAH,EAAA5C,YACAv3B,EAAA,YAAAm6B,GACAA,EAAA3C,WAEA8C,IAAAH,EAAAQ,aAAAL,GAAA,GACA1oC,EAAAgnC,EAAA,MAEAiC,OAAA,WACAV,EAAAI,eACAJ,EAAA5C,YACAv3B,EAAA,YAAAm6B,GACAA,EAAA3C,UACA2C,EAAAQ,eAIA,SAAArD,EAAAV,EAAAC,GACAoD,EAAArD,EAAAC,IAAAsD,EAAA7C,MAAAV,EAAAC,GAGA,SAAAiE,EAAAlE,EAAAC,GACAO,EAAAE,MAAAV,EAAAC,GAGA,SAAAU,IACAW,EAAAZ,MAAAwD,EACA1D,EAAAG,YAGA,SAAAC,IACAU,EAAAZ,QACAF,EAAAI,UAGA,SAAAgD,EAAA5D,EAAAC,GACAjiC,EAAAnF,KAAA,CAAAmnC,EAAAC,IACAwD,EAAA/C,MAAAV,EAAAC,GAGA,SAAA4D,IACAJ,EAAA9C,YACA3iC,EAAA,GAGA,SAAA8lC,IACAF,EAAA5lC,EAAA,MAAAA,EAAA,OACAylC,EAAA7C,UAEA,IAEAppC,EAAAuC,EACAwnC,EACAb,EAJAyD,EAAAV,EAAAU,QACAC,EAAAZ,EAAAzrC,SACAX,EAAAgtC,EAAAtsC,OAQA,GAJAkG,EAAAqB,MACA2iC,EAAAnpC,KAAAmF,GACAA,EAAA,KAEA5G,EAGA,KAAA+sC,GAEA,IAAApqC,GADAwnC,EAAA6C,EAAA,IACAtsC,OAAA,MAGA,IAFA4rC,IAAAH,EAAAI,eAAAD,GAAA,GACAH,EAAA5C,YACAnpC,EAAA,EAAqBA,EAAAuC,IAAOvC,EAAA+rC,EAAA7C,SAAAa,EAAA/pC,IAAA,GAAAkpC,EAAA,IAC5B6C,EAAA3C,gBAOAxpC,EAAA,KAAA+sC,GAAAC,EAAAvrC,KAAAurC,EAAA/kC,MAAAvG,OAAAsrC,EAAAx7B,UAEA5N,EAAAnC,KAAAurC,EAAAvmC,OAAAwmC,KAGA,OAAA/C,IAIA,SAAA+C,GAAA9C,GACA,OAAAA,EAAAzpC,OAAA,EAKA,SAASksC,GAAmBvsC,EAAAyC,GAC5B,QAAAzC,IAAAmC,GAAA,KAAAnC,EAAA,GAAoC4nC,GAASH,GAAUG,GAAM5nC,EAAA,MAC7DyC,IAAAN,GAAA,KAAAM,EAAA,GAAoCmlC,GAASH,GAAUG,GAAMnlC,EAAA,IC9H9CkpC,GACf,WAAc,UASd,SAAA/B,GACA,IAGA8C,EAHA7B,EAAAl6B,IACAm6B,EAAAn6B,IACAk8B,EAAAl8B,IAGA,OACAu4B,UAAA,WACAU,EAAAV,YACAwD,EAAA,GAEAzD,MAAA,SAAAgC,EAAAI,GACA,IAAAyB,EAAA7B,EAAA,EAAgCtD,IAAMA,GACtC2D,EAAkBxnC,GAAGmnC,EAAAJ,GACX/mC,GAAGwnC,EAAS3D,IAAMF,IAC5BmC,EAAAX,MAAA4B,EAAAC,KAAAO,GAAA,IAA6DzD,IAAUA,IACvEgC,EAAAX,MAAA4D,EAAA/B,GACAlB,EAAAT,UACAS,EAAAV,YACAU,EAAAX,MAAA6D,EAAAhC,GACAlB,EAAAX,MAAAgC,EAAAH,GACA4B,EAAA,GACOG,IAAAC,GAAAxB,GAAsC3D,KACjC7jC,GAAG+mC,EAAAgC,GAAoBpF,KAAOoD,GAAAgC,EAAqBpF,IACnD3jC,GAAGmnC,EAAA6B,GAAoBrF,KAAOwD,GAAA6B,EAAqBrF,IAC/DqD,EAoBA,SAAAD,EAAAC,EAAAG,EAAAI,GACA,IAAAL,EACAG,EACA4B,EAA0B7E,GAAG2C,EAAAI,GAC7B,OAASnnC,GAAGipC,GAAsBtF,GAC1Bl6B,IAAM26B,GAAG4C,IAAAK,EAAoBnD,GAAGqD,IAAUnD,GAAG+C,GACzC/C,GAAGmD,IAAAL,EAAoBhD,GAAG8C,IAAU5C,GAAG2C,KACnDG,EAAAG,EAAA4B,KACAjC,EAAAO,GAAA,EA5BA2B,CAAAnC,EAAAC,EAAAG,EAAAI,GACAzB,EAAAX,MAAA4D,EAAA/B,GACAlB,EAAAT,UACAS,EAAAV,YACAU,EAAAX,MAAA6D,EAAAhC,GACA4B,EAAA,GAEA9C,EAAAX,MAAA4B,EAAAI,EAAAH,EAAAO,GACAwB,EAAAC,GAEA3D,QAAA,WACAS,EAAAT,UACA0B,EAAAC,EAAAn6B,KAEA+7B,MAAA,WACA,SAAAA,KAgBA,SAAAO,EAAAC,EAAAC,EAAAvD,GACA,IAAApB,EACA,SAAAyE,EACAzE,EAAA2E,EAAsBvF,GACtBgC,EAAAX,OAAkBtB,GAAEa,GACpBoB,EAAAX,MAAA,EAAAT,GACAoB,EAAAX,MAAiBtB,GAAEa,GACnBoB,EAAAX,MAAiBtB,GAAE,GACnBiC,EAAAX,MAAiBtB,IAAEa,GACnBoB,EAAAX,MAAA,GAAAT,GACAoB,EAAAX,OAAkBtB,IAAEa,GACpBoB,EAAAX,OAAkBtB,GAAE,GACpBiC,EAAAX,OAAkBtB,GAAEa,QACjB,GAAU1kC,GAAGmpC,EAAA,GAAAC,EAAA,IAAoBzF,GAAO,CAC3C,IAAAc,EAAA0E,EAAA,GAAAC,EAAA,GAAmCvF,IAAMA,GACzCa,EAAA2E,EAAA5E,EAAA,EACAqB,EAAAX,OAAAV,EAAAC,GACAoB,EAAAX,MAAA,EAAAT,GACAoB,EAAAX,MAAAV,EAAAC,QAEAoB,EAAAX,MAAAiE,EAAA,GAAAA,EAAA,KAlFA,EAAIvF,IAAKC,KCFOX,KCDFA,KACIA,KCFH,SAAAmG,GAAAC,GACfptC,KAAAqtC,SAAAD,EAGAD,GAAA3gC,UAAA,CACA8gC,QAAA,IACAC,YAAA,SAAA9pC,GACA,OAAAzD,KAAAstC,QAAA7pC,EAAAzD,MAEAisC,aAAA,WACAjsC,KAAAwtC,MAAA,GAEAnB,WAAA,WACArsC,KAAAwtC,MAAA98B,KAEAu4B,UAAA,WACAjpC,KAAAytC,OAAA,GAEAvE,QAAA,WACA,IAAAlpC,KAAAwtC,OAAAxtC,KAAAqtC,SAAA1R,YACA37B,KAAAytC,OAAA/8B,KAEAs4B,MAAA,SAAA9mC,EAAAC,GACA,OAAAnC,KAAAytC,QACA,OACAztC,KAAAqtC,SAAA3R,OAAAx5B,EAAAC,GACAnC,KAAAytC,OAAA,EACA,MAEA,OACAztC,KAAAqtC,SAAAzR,OAAA15B,EAAAC,GACA,MAEA,QACAnC,KAAAqtC,SAAA3R,OAAAx5B,EAAAlC,KAAAstC,QAAAnrC,GACAnC,KAAAqtC,SAAAtQ,IAAA76B,EAAAC,EAAAnC,KAAAstC,QAAA,EAAiDzF,MAKjDxnC,OAAU8nC,ICvCMnB,KCJD,SAAA0G,KACf1tC,KAAA2tC,QAAA,GAoDA,SAASC,GAAMjK,GACf,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IArDA+J,GAAAlhC,UAAA,CACA8gC,QAAA,IACAO,QAAWD,GAAM,KACjBL,YAAA,SAAA9pC,GAEA,OADAA,QAAAzD,KAAAstC,UAAAttC,KAAAstC,QAAA7pC,EAAAzD,KAAA6tC,QAAA,MACA7tC,MAEAisC,aAAA,WACAjsC,KAAAwtC,MAAA,GAEAnB,WAAA,WACArsC,KAAAwtC,MAAA98B,KAEAu4B,UAAA,WACAjpC,KAAAytC,OAAA,GAEAvE,QAAA,WACA,IAAAlpC,KAAAwtC,OAAAxtC,KAAA2tC,QAAAxsC,KAAA,KACAnB,KAAAytC,OAAA/8B,KAEAs4B,MAAA,SAAA9mC,EAAAC,GACA,OAAAnC,KAAAytC,QACA,OACAztC,KAAA2tC,QAAAxsC,KAAA,IAAAe,EAAA,IAAAC,GACAnC,KAAAytC,OAAA,EACA,MAEA,OACAztC,KAAA2tC,QAAAxsC,KAAA,IAAAe,EAAA,IAAAC,GACA,MAEA,QACA,MAAAnC,KAAA6tC,UAAA7tC,KAAA6tC,QAAiDD,GAAM5tC,KAAAstC,UACvDttC,KAAA2tC,QAAAxsC,KAAA,IAAAe,EAAA,IAAAC,EAAAnC,KAAA6tC,WAKAxtC,OAAA,WACA,GAAAL,KAAA2tC,QAAAvtC,OAAA,CACA,IAAAC,EAAAL,KAAA2tC,QAAAvnC,KAAA,IAEA,OADApG,KAAA2tC,QAAA,GACAttC,EAEA,cC1CO,SAAAytC,GAAAC,GACP,gBAAApE,GACA,IAAA/oC,EAAA,IAAAotC,GACA,QAAA52B,KAAA22B,EAAAntC,EAAAwW,GAAA22B,EAAA32B,GAEA,OADAxW,EAAA+oC,SACA/oC,GAIA,SAAAotC,MAEAA,GAAAxhC,UAAA,CACAoC,YAAAo/B,GACAhF,MAAA,SAAA9mC,EAAAC,GAAyBnC,KAAA2pC,OAAAX,MAAA9mC,EAAAC,IACzBoqC,OAAA,WAAsBvsC,KAAA2pC,OAAA4C,UACtBtD,UAAA,WAAyBjpC,KAAA2pC,OAAAV,aACzBC,QAAA,WAAuBlpC,KAAA2pC,OAAAT,WACvB+C,aAAA,WAA4BjsC,KAAA2pC,OAAAsC,gBAC5BI,WAAA,WAA0BrsC,KAAA2pC,OAAA0C,eCnBLtE,GAAG,GAAMD,ICMPgG,GAAW,CAClC9E,MAAA,SAAA9mC,EAAAC,GACAnC,KAAA2pC,OAAAX,MAAA9mC,EAA0B4lC,GAAO3lC,EAAM2lC,OCXhC,SAAAmG,GAAAthC,GACP,gBAAAzK,EAAAC,GACA,IAAA+rC,EAAanG,GAAG7lC,GAChBisC,EAAapG,GAAG5lC,GAChBS,EAAA+J,EAAAuhC,EAAAC,GACA,OACAvrC,EAAAurC,EAAelG,GAAG/lC,GAClBU,EAAUqlC,GAAG9lC,KAKN,SAAAisC,GAAA3D,GACP,gBAAAvoC,EAAAC,GACA,IAAAgD,EAAYtD,GAAIK,IAAAC,KAChBZ,EAAAkpC,EAAAtlC,GACAkpC,EAAapG,GAAG1mC,GAChB+sC,EAAavG,GAAGxmC,GAChB,OACMyK,GAAK9J,EAAAmsC,EAAAlpC,EAAAmpC,GACL7T,GAAIt1B,GAAAhD,EAAAksC,EAAAlpC,KClBH,IAAAopC,GAA4BN,GAAY,SAAAO,GAC/C,OAAS3sC,GAAI,KAAA2sC,MAGbD,GAAA3F,OAA+BwF,GAAe,SAAAjpC,GAC9C,SAAas1B,GAAIt1B,EAAA,KAGF,ICRRspC,GAA8BR,GAAY,SAAA1sC,GACjD,OAAAA,EAAcO,GAAIP,OAAY0mC,GAAG1mC,KAGjCktC,GAAA7F,OAAiCwF,GAAe,SAAAjpC,GAChD,OAAAA,ICLO,SAAAupC,GAAApG,EAAAC,GACP,OAAAD,EAAkBvkC,GAAIhB,IAAK4kC,GAAMY,GAAA,KAGjCmG,GAAA9F,OAAA,SAAA1mC,EAAAC,GACA,OAAAD,EAAA,EAAiBoL,GAAK06B,GAAG7lC,IAAOwlC,KCPzB,SAAAgH,GAAArG,EAAAC,GACP,OAAAD,EAAAC,GAGAoG,GAAA/F,OAAA+F,GCkBe,ICrBfC,GAAA,SACAC,IAAA,QACAC,GAAA,OACAC,GAAA,QACAzsC,GAAQT,GAAI,KAGL,SAAAmtC,GAAA1G,EAAAC,GACP,IAAA5mC,EAAU84B,GAAIn4B,GAAK2lC,GAAGM,IAAA0G,EAAAttC,IAAAutC,EAAAD,MACtB,OACA3G,EAAaP,GAAGpmC,IAAAW,IAAAssC,GAAA,EAAAC,GAAAI,EAAAC,GAAA,EAAAJ,GAAA,EAAAC,GAAAE,KAChBttC,GAAAitC,GAAAC,GAAAI,EAAAC,GAAAJ,GAAAC,GAAAE,KAIAD,GAAApG,OAAA,SAAA1mC,EAAAC,GAEA,IADA,IACAkpC,EADA1pC,EAAAQ,EAAA8sC,EAAAttC,IAAAutC,EAAAD,MACAnvC,EAAA,EAAiCA,EAZnB,KAedovC,GAAAD,GAAAttC,GAAA0pC,GAFA1pC,GAAAitC,GAAAC,GAAAI,EAAAC,GAAAJ,GAAAC,GAAAE,IAAA9sC,IACAysC,GAAA,EAAAC,GAAAI,EAAAC,GAAA,EAAAJ,GAAA,EAAAC,GAAAE,KACAttC,GAAAstC,MACQprC,GAAGwnC,GAAU5D,OAJ4B3nC,GAMjD,OACAwC,GAAAJ,GAAA0sC,GAAA,EAAAC,GAAAI,EAAAC,GAAA,EAAAJ,GAAA,EAAAC,GAAAE,IAA+DlH,GAAGpmC,GAC9D84B,GAAKwN,GAAGtmC,GAAAW,MCxBL,SAAA6sC,GAAAjtC,EAAAC,GACP,IAAAgsC,EAAWpG,GAAG5lC,GAAAS,EAASmlC,GAAG7lC,GAAAisC,EAC1B,OAAAA,EAAelG,GAAG/lC,GAAAU,EAASqlC,GAAG9lC,GAAAS,GAG9BusC,GAAAvG,OAAqBwF,GAAgB9gC,ICN9B,SAAA8hC,GAAA9G,EAAAC,GACP,IAAA8G,EAAA9G,IAAA+G,EAAAD,IACA,OACA/G,GAAA,cAAA+G,EAAAC,MAAA,QAAAD,EAAA,QAAAC,GAAA,UACA/G,GAAA,SAAA8G,GAAA,QAAAC,GAAA,QAAAD,EAAA,gBAAAC,MAIAF,GAAAxG,OAAA,SAAA1mC,EAAAC,GACA,IAAAkpC,EAAA9C,EAAApmC,EAAArC,EAAA,GACA,GACA,IAAAuvC,EAAA9G,IAAA+G,EAAAD,IACA9G,GAAA8C,GAAA9C,GAAA,SAAA8G,GAAA,QAAAC,GAAA,QAAAD,EAAA,gBAAAC,KAAAntC,IACA,SAAAktC,GAAA,QAAAC,GAAA,QAAAD,EAAA,mBAAAC,WACWzrC,GAAGwnC,GAAU7D,MAAO1nC,EAAA,GAC/B,OACAoC,GAAA,OAAAmtC,EAAA9G,MAAA8G,UAAA,gBAAAA,GAAA,mBACA9G,IChBO,SAAAgH,GAAArtC,EAAAC,GACP,OAAU4lC,GAAG5lC,GAAM8lC,GAAG/lC,GAAK+lC,GAAG9lC,IAG9BotC,GAAA3G,OAAyBwF,GAAgB3T,ICJlC,SAAA+U,GAAAttC,EAAAC,GACP,IAAAgsC,EAAWpG,GAAG5lC,GAAAS,EAAA,EAAamlC,GAAG7lC,GAAAisC,EAC9B,OAAAA,EAAelG,GAAG/lC,GAAAU,EAASqlC,GAAG9lC,GAAAS,GAG9B4sC,GAAA5G,OAA0BwF,GAAe,SAAAjpC,GACzC,SAAamI,GAAInI,KCPV,SAAAsqC,GAAAnH,EAAAC,GACP,OAAUxkC,GAAIhB,IAAK4kC,GAAMY,GAAA,KAAAD,GAGzBmH,GAAA7G,OAAA,SAAA1mC,EAAAC,GACA,QAAAA,EAAA,EAAkBmL,GAAK06B,GAAG9lC,IAAOylC,KCRjC,SAAS+H,GAAK14B,GACd,IAAA24B,EAAA,EACAnX,EAAAxhB,EAAAwhB,SACA14B,EAAA04B,KAAAp4B,OACA,GAAAN,EACA,OAAAA,GAAA,GAAA6vC,GAAAnX,EAAA14B,GAAAwS,WADAq9B,EAAA,EAEA34B,EAAA1E,MAAAq9B,ECMe,SAAAC,GAAAnvC,EAAA+3B,GACf,IAEAxhB,EAEAP,EACAo5B,EACA/vC,EACAJ,EAPAwkC,EAAA,IAAA4L,GAAArvC,GACAsvC,GAAAtvC,EAAA6R,QAAA4xB,EAAA5xB,MAAA7R,EAAA6R,OAEAoN,EAAA,CAAAwkB,GAQA,IAFA,MAAA1L,MAAAwX,IAEAh5B,EAAA0I,EAAA/X,OAEA,GADAooC,IAAA/4B,EAAA1E,OAAA0E,EAAAvW,KAAA6R,QACAu9B,EAAArX,EAAAxhB,EAAAvW,SAAAf,EAAAmwC,EAAAzvC,QAEA,IADA4W,EAAAwhB,SAAA,IAAAv0B,MAAAvE,GACAI,EAAAJ,EAAA,EAAqBI,GAAA,IAAQA,EAC7B4f,EAAAve,KAAAsV,EAAAO,EAAAwhB,SAAA14B,GAAA,IAAAgwC,GAAAD,EAAA/vC,KACA2W,EAAAN,OAAAa,EACAP,EAAAw5B,MAAAj5B,EAAAi5B,MAAA,EAKA,OAAA/L,EAAAgM,WAAAC,IAOA,SAAAH,GAAA5tC,GACA,OAAAA,EAAAo2B,SAGA,SAAA4X,GAAAp5B,GACAA,EAAAvW,KAAAuW,EAAAvW,UAGO,SAAA0vC,GAAAn5B,GACP,IAAAq5B,EAAA,EACA,GAAAr5B,EAAAq5B,gBACAr5B,IAAAb,SAAAa,EAAAq5B,YAGO,SAAAP,GAAArvC,GACPT,KAAAS,OACAT,KAAAiwC,MACAjwC,KAAAqwC,OAAA,EACArwC,KAAAmW,OAAA,KAGA25B,GAAAtjC,UAAAojC,GAAApjC,UAAA,CACAoC,YAAAkhC,GACAQ,MDzDe,WACf,OAAAtwC,KAAAuwC,UAAwBb,KCyDxB3xB,KCnEe,SAAAhK,GACf,IAAAk2B,EAAAzR,EAAA14B,EAAAJ,EAAAsX,EAAAhX,KAAAmI,EAAA,CAAA6O,GACA,GAEA,IADAizB,EAAA9hC,EAAAN,UAAAM,EAAA,GACA6O,EAAAizB,EAAAtiC,OAEA,GADAoM,EAAAiD,GAAAwhB,EAAAxhB,EAAAwhB,SACA,IAAA14B,EAAA,EAAAJ,EAAA84B,EAAAp4B,OAAoDN,EAAAJ,IAAOI,EAC3DqI,EAAAhH,KAAAq3B,EAAA14B,UAGGqI,EAAA/H,QACH,OAAAJ,MDyDAuwC,UEpEe,SAAAx8B,GAEf,IADA,IAAAykB,EAAA14B,EAAAJ,EAAAsX,EAAAhX,KAAA0f,EAAA,CAAA1I,GAAA7O,EAAA,GACA6O,EAAA0I,EAAA/X,OAEA,GADAQ,EAAAhH,KAAA6V,GAAAwhB,EAAAxhB,EAAAwhB,SACA,IAAA14B,EAAA,EAAAJ,EAAA84B,EAAAp4B,OAAkDN,EAAAJ,IAAOI,EACzD4f,EAAAve,KAAAq3B,EAAA14B,IAGA,KAAAkX,EAAA7O,EAAAR,OACAoM,EAAAiD,GAEA,OAAAhX,MF0DAkwC,WGrEe,SAAAn8B,GAEf,IADA,IAAAykB,EAAA14B,EAAAkX,EAAAhX,KAAA0f,EAAA,CAAA1I,GACAA,EAAA0I,EAAA/X,OAEA,GADAoM,EAAAiD,GAAAwhB,EAAAxhB,EAAAwhB,SACA,IAAA14B,EAAA04B,EAAAp4B,OAAA,EAA+CN,GAAA,IAAQA,EACvD4f,EAAAve,KAAAq3B,EAAA14B,IAGA,OAAAE,MH8DA2vC,IItEe,SAAAr9B,GACf,OAAAtS,KAAAuwC,UAAA,SAAAv5B,GAIA,IAHA,IAAA24B,GAAAr9B,EAAA0E,EAAAvW,OAAA,EACA+3B,EAAAxhB,EAAAwhB,SACA14B,EAAA04B,KAAAp4B,SACAN,GAAA,GAAA6vC,GAAAnX,EAAA14B,GAAAwS,MACA0E,EAAA1E,MAAAq9B,KJiEArnC,KKvEe,SAAAoK,GACf,OAAA1S,KAAAkwC,WAAA,SAAAl5B,GACAA,EAAAwhB,UACAxhB,EAAAwhB,SAAAlwB,KAAAoK,MLqEAxS,KMxEe,SAAAgQ,GAIf,IAHA,IAAAD,EAAAjQ,KACAwwC,EAcA,SAAAzwC,EAAAyC,GACA,GAAAzC,IAAAyC,EAAA,OAAAzC,EACA,IAAA0wC,EAAA1wC,EAAA2wC,YACAC,EAAAnuC,EAAAkuC,YACAnvC,EAAA,KAGA,IAFAxB,EAAA0wC,EAAA9oC,MACAnF,EAAAmuC,EAAAhpC,MACA5H,IAAAyC,GACAjB,EAAAxB,EACAA,EAAA0wC,EAAA9oC,MACAnF,EAAAmuC,EAAAhpC,MAEA,OAAApG,EA1BAqvC,CAAA3gC,EAAAC,GACAwP,EAAA,CAAAzP,GACAA,IAAAugC,GACAvgC,IAAAkG,OACAuJ,EAAAve,KAAA8O,GAGA,IADA,IAAArN,EAAA8c,EAAAtf,OACA8P,IAAAsgC,GACA9wB,EAAApe,OAAAsB,EAAA,EAAAsN,GACAA,IAAAiG,OAEA,OAAAuJ,GN4DAgxB,UOzEe,WAEf,IADA,IAAA15B,EAAAhX,KAAA0f,EAAA,CAAA1I,GACAA,IAAAb,QACAuJ,EAAAve,KAAA6V,GAEA,OAAA0I,GPqEAmxB,YQ1Ee,WACf,IAAAnxB,EAAA,GAIA,OAHA1f,KAAA+d,KAAA,SAAA/G,GACA0I,EAAAve,KAAA6V,KAEA0I,GRsEAoxB,OS3Ee,WACf,IAAAA,EAAA,GAMA,OALA9wC,KAAAkwC,WAAA,SAAAl5B,GACAA,EAAAwhB,UACAsY,EAAA3vC,KAAA6V,KAGA85B,GTqEAC,MU5Ee,WACf,IAAA7M,EAAAlkC,KAAA+wC,EAAA,GAMA,OALA7M,EAAAnmB,KAAA,SAAA/G,GACAA,IAAAktB,GACA6M,EAAA5vC,KAAA,CAAkB+uB,OAAAlZ,EAAAb,OAAA0K,OAAA7J,MAGlB+5B,GVsEA98B,KAtCA,WACA,OAAA27B,GAAA5vC,MAAAkwC,WAAAE,MWxCgBnsC,MAAAuI,UAAAvL,MCAD,ICAA+vC,GAAA,SAAA76B,EAAArR,EAAAE,EAAAD,EAAAE,GAOf,IANA,IACA+R,EADA0I,EAAAvJ,EAAAqiB,SAEA14B,GAAA,EACAJ,EAAAggB,EAAAtf,OACAwC,EAAAuT,EAAA7D,QAAAvN,EAAAD,GAAAqR,EAAA7D,QAEAxS,EAAAJ,IACAsX,EAAA0I,EAAA5f,IAAAkF,KAAAgS,EAAA/R,KACA+R,EAAAlS,KAAAkS,EAAAjS,GAAAD,GAAAkS,EAAA1E,MAAA1P,GCkDA,SAAAquC,GAAAj6B,EAAAlX,GACAE,KAAAyD,EAAAuT,EACAhX,KAAAmW,OAAA,KACAnW,KAAAw4B,SAAA,KACAx4B,KAAA0C,EAAA,KACA1C,KAAAD,EAAAC,KACAA,KAAAmF,EAAA,EACAnF,KAAAqC,EAAA,EACArC,KAAAuB,EAAA,EACAvB,KAAAY,EAAA,EACAZ,KAAAP,EAAA,KACAO,KAAAF,IAGAmxC,GAAAzkC,UAAA4F,OAAA8N,OAAmC4vB,GAAItjC,WA0BxB,ICnGA0kC,GAAA,SAAA/6B,EAAArR,EAAAE,EAAAD,EAAAE,GAOf,IANA,IACA+R,EADA0I,EAAAvJ,EAAAqiB,SAEA14B,GAAA,EACAJ,EAAAggB,EAAAtf,OACAwC,EAAAuT,EAAA7D,QAAArN,EAAAD,GAAAmR,EAAA7D,QAEAxS,EAAAJ,IACAsX,EAAA0I,EAAA5f,IAAAgF,KAAAkS,EAAAjS,KACAiS,EAAAhS,KAAAgS,EAAA/R,GAAAD,GAAAgS,EAAA1E,MAAA1P,GCNWuuC,IAAG,EAAAvvC,KAAAC,KAAA,MAEP,SAAAuvC,GAAAC,EAAAl7B,EAAArR,EAAAE,EAAAD,EAAAE,GAkBP,IAjBA,IAEA65B,EACAwS,EAIAtwB,EAAAC,EAEAswB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAfAjT,EAAA,GACAlf,EAAAvJ,EAAAqiB,SAGApa,EAAA,EACAC,EAAA,EACA3e,EAAAggB,EAAAtf,OAEAkS,EAAA6D,EAAA7D,MASA8L,EAAA1e,GAAA,CACAshB,EAAAjc,EAAAD,EAAAmc,EAAAhc,EAAAD,EAGA,GAAAusC,EAAA7xB,EAAArB,KAAA/L,aAAoCi/B,GAAAlzB,EAAA3e,GAOpC,IANA8xC,EAAAC,EAAAF,EAEAM,EAAAN,KADAK,EAAAhwC,KAAAzB,IAAA8gB,EAAAD,IAAAC,IAAA3O,EAAA++B,IAEAM,EAAA/vC,KAAAzB,IAAAsxC,EAAAI,IAAAL,GAGUnzB,EAAA3e,IAAQ2e,EAAA,CAMlB,GALAkzB,GAAAD,EAAA5xB,EAAArB,GAAA/L,MACAg/B,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAO,EAAAN,IAAAK,GACAF,EAAA9vC,KAAAzB,IAAAsxC,EAAAI,IAAAL,IACAG,EAAA,CAAgCJ,GAAAD,EAAuB,MACvDK,EAAAD,EAIA9S,EAAAz9B,KAAA29B,EAAA,CAAqBxsB,MAAAi/B,EAAAP,KAAAhwB,EAAAC,EAAAuX,SAAA9Y,EAAAze,MAAAmd,EAAAC,KACrBygB,EAAAkS,KAAkBA,GAAWlS,EAAAh6B,EAAAE,EAAAD,EAAAuN,EAAAtN,GAAAic,EAAAswB,EAAAj/B,EAAArN,GACpBisC,GAAYpS,EAAAh6B,EAAAE,EAAAsN,EAAAxN,GAAAkc,EAAAuwB,EAAAj/B,EAAAvN,EAAAE,GACrBqN,GAAAi/B,EAAAnzB,EAAAC,EAGA,OAAAugB,GAGe,SAAA9E,EAAAuX,GAEf,SAAAS,EAAA37B,EAAArR,EAAAE,EAAAD,EAAAE,GACAmsC,GAAAC,EAAAl7B,EAAArR,EAAAE,EAAAD,EAAAE,GAOA,OAJA6sC,EAAAT,MAAA,SAAAnvC,GACA,OAAA43B,GAAA53B,MAAA,EAAAA,EAAA,IAGA4vC,GAVe,CAWZX,IC7DY,SAAArX,EAAAuX,GAEf,SAAAU,EAAA57B,EAAArR,EAAAE,EAAAD,EAAAE,GACA,IAAA25B,EAAAzoB,EAAA67B,YAAApT,EAAAyS,UAUA,IATA,IAAAzS,EACAE,EACApf,EACA5f,EAEAJ,EADAgI,GAAA,EAEArF,EAAAu8B,EAAAx+B,OACAkS,EAAA6D,EAAA7D,QAEA5K,EAAArF,GAAA,CAEA,IADAqd,GAAAof,EAAAF,EAAAl3B,IAAA8wB,SACA14B,EAAAg/B,EAAAxsB,MAAA,EAAA5S,EAAAggB,EAAAtf,OAAiDN,EAAAJ,IAAOI,EAAAg/B,EAAAxsB,OAAAoN,EAAA5f,GAAAwS,MACxDwsB,EAAAkS,KAAsBA,GAAWlS,EAAAh6B,EAAAE,EAAAD,EAAAC,IAAAC,EAAAD,GAAA85B,EAAAxsB,SACpB4+B,GAAYpS,EAAAh6B,EAAAE,EAAAF,IAAAC,EAAAD,GAAAg6B,EAAAxsB,QAAArN,GACzBqN,GAAAwsB,EAAAxsB,WAGA6D,EAAA67B,UAAApT,EAAgCwS,GAAaC,EAAAl7B,EAAArR,EAAAE,EAAAD,EAAAE,GAC7C25B,EAAAyS,QAQA,OAJAU,EAAAV,MAAA,SAAAnvC,GACA,OAAA43B,GAAA53B,MAAA,EAAAA,EAAA,IAGA6vC,EA9Be,CA+BZZ,ICbY,ICtBAc,GAAA,WACf,OAAArwC,KAAAswC,UCCeC,ICAA,SAAAC,EAAAliB,GACf,SAAAmiB,EAAAlzB,EAAAhf,GAKA,OAJAgf,EAAA,MAAAA,EAAA,GAAAA,EACAhf,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAmT,UAAAlT,QAAAD,EAAAgf,IAAA,GACAhf,GAAAgf,EACA,WACA,OAAA+Q,IAAA/vB,EAAAgf,GAMA,OAFAkzB,EAAAniB,OAAAkiB,EAEAC,EAbe,CAcZJ,IDdY,SAAAK,EAAApiB,GACf,SAAAqiB,EAAAC,EAAAC,GACA,IAAAvwC,EAAArC,EAGA,OAFA2yC,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,IAAAtwC,EAGA,SAAAD,EAAAC,EAAAD,IAAA,UAGA,GACAA,EAAA,EAAAguB,IAAA,EACA/tB,EAAA,EAAA+tB,IAAA,EACArwB,EAAAqC,IAAAC,WACOtC,KAAA,GAEP,OAAA2yC,EAAAC,EAAAtwC,EAAAP,KAAAC,MAAA,EAAAD,KAAAmC,IAAAlE,OAMA,OAFA0yC,EAAAriB,OAAAoiB,EAEAC,EAxBe,CAyBZN,KEzBYS,ICCA,SAAAC,EAAAziB,GACf,SAAA0iB,IACA,IAAAL,EAAuBJ,GAAMjiB,UAAA3gB,MAAAvP,KAAAsT,WAC7B,kBACA,OAAA1R,KAAAomC,IAAAuK,MAMA,OAFAK,EAAA1iB,OAAAyiB,EAEAC,EAVe,CAWZX,IDZY,SAAAY,EAAA3iB,GACf,SAAA4iB,EAAApzC,GACA,kBACA,QAAAiwC,EAAA,EAAA7vC,EAAA,EAA8BA,EAAAJ,IAAOI,EAAA6vC,GAAAzf,IACrC,OAAAyf,GAMA,OAFAmD,EAAA5iB,OAAA2iB,EAEAC,EAVe,CAWZb,MEVY,SAAAc,EAAA7iB,GACf,SAAA8iB,EAAAtzC,GACA,IAAAozC,EAA0BJ,GAASxiB,SAATwiB,CAAShzC,GACnC,kBACA,OAAAozC,IAAApzC,GAMA,OAFAszC,EAAA9iB,OAAA6iB,EAEAC,GAVe,CAWZf,ICZY,SAAAgB,EAAA/iB,GACf,SAAAgjB,EAAA5K,GACA,kBACA,OAAA1mC,KAAAmC,IAAA,EAAAmsB,KAAAoY,GAMA,OAFA4K,EAAAhjB,OAAA+iB,EAEAC,EATe,CAUZjB,ICZH,IAAIkB,GAAKlvC,MAAAuI,UAEQ2mC,GAAK9tC,IACH8tC,GAAKlyC,MCHxB,IAAImyC,GAAE,IAAA7f,KACF8f,GAAE,IAAA9f,KAES,SAAA+f,GAAAC,EAAAC,EAAAlD,EAAAmD,GAEf,SAAAC,EAAAvU,GACA,OAAAoU,EAAApU,EAAA,IAAA5L,MAAA4L,MA4DA,OAzDAuU,EAAA5jB,MAAA4jB,EAEAA,EAAA1sC,KAAA,SAAAm4B,GACA,OAAAoU,EAAApU,EAAA,IAAA5L,KAAA4L,EAAA,IAAAqU,EAAArU,EAAA,GAAAoU,EAAApU,MAGAuU,EAAA5lC,MAAA,SAAAqxB,GACA,IAAAwU,EAAAD,EAAAvU,GACAyU,EAAAF,EAAA1sC,KAAAm4B,GACA,OAAAA,EAAAwU,EAAAC,EAAAzU,EAAAwU,EAAAC,GAGAF,EAAAG,OAAA,SAAA1U,EAAA2U,GACA,OAAAN,EAAArU,EAAA,IAAA5L,MAAA4L,GAAA,MAAA2U,EAAA,EAAAlyC,KAAAkuB,MAAAgkB,IAAA3U,GAGAuU,EAAAK,MAAA,SAAA9jC,EAAA2kB,EAAAkf,GACA,IAAA31B,EAAA41B,EAAA,GAGA,GAFA9jC,EAAAyjC,EAAA1sC,KAAAiJ,GACA6jC,EAAA,MAAAA,EAAA,EAAAlyC,KAAAkuB,MAAAgkB,KACA7jC,EAAA2kB,GAAAkf,EAAA,UAAAC,EACA,GAAAA,EAAA5yC,KAAAgd,EAAA,IAAAoV,MAAAtjB,IAAAujC,EAAAvjC,EAAA6jC,GAAAP,EAAAtjC,SACAkO,EAAAlO,KAAA2kB,GACA,OAAAmf,GAGAL,EAAAvtC,OAAA,SAAAy6B,GACA,OAAA0S,GAAA,SAAAnU,GACA,GAAAA,KAAA,KAAAoU,EAAApU,IAAAyB,EAAAzB,MAAA6U,QAAA7U,EAAA,IACK,SAAAA,EAAA2U,GACL,GAAA3U,KACA,GAAA2U,EAAA,SAAAA,GAAA,GACA,KAAAN,EAAArU,GAAA,IAAAyB,EAAAzB,UACS,OAAA2U,GAAA,GACT,KAAAN,EAAArU,EAAA,IAAAyB,EAAAzB,SAMAmR,IACAoD,EAAApD,MAAA,SAAArgC,EAAAC,GAGA,OAFMkjC,GAAEY,SAAA/jC,GAAkBojC,GAAEW,SAAA9jC,GAC5BqjC,EAAaH,IAAEG,EAAUF,IACzBzxC,KAAAkuB,MAAAwgB,EAA8B8C,GAAIC,MAGlCK,EAAAlsC,MAAA,SAAAssC,GAEA,OADAA,EAAAlyC,KAAAkuB,MAAAgkB,GACAruC,SAAAquC,MAAA,EACAA,EAAA,EACAJ,EAAAvtC,OAAAstC,EACA,SAAArxC,GAA6B,OAAAqxC,EAAArxC,GAAA0xC,GAAA,GAC7B,SAAA1xC,GAA6B,OAAAsxC,EAAApD,MAAA,EAAAluC,GAAA0xC,GAAA,IAH7BJ,EADA,OAQAA,EChEA,IAAIO,GAAcX,GAAQ,aAEzB,SAAAnU,EAAA2U,GACD3U,EAAA6U,SAAA7U,EAAA2U,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,IAIAgkC,GAAWzsC,MAAA,SAAA5E,GAEX,OADAA,EAAAhB,KAAAkuB,MAAAltB,GACA6C,SAAA7C,MAAA,EACAA,EAAA,EACS0wC,GAAQ,SAAAnU,GACjBA,EAAA6U,QAAApyC,KAAAkuB,MAAAqP,EAAAv8B,OACG,SAAAu8B,EAAA2U,GACH3U,EAAA6U,SAAA7U,EAAA2U,EAAAlxC,IACG,SAAAqN,EAAAC,GACH,OAAAA,EAAAD,GAAArN,IANuBqxC,GADvB,MAY0BA,GAAWF,MADtB,ICvBRG,GAAA,IAGAC,GAAA,OCDHC,GAASd,GAAQ,SAAAnU,GACrBA,EAAA6U,QAAA7U,IAAAkV,oBACC,SAAAlV,EAAA2U,GACD3U,EAAA6U,SAAA7U,EDNO,ICMP2U,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,GDRO,KCSN,SAAAkvB,GACD,OAAAA,EAAAO,kBCPI4U,IDWiBF,GAAML,MCXdT,GAAQ,SAAAnU,GACrBA,EAAA6U,QAAA7U,IAAAkV,kBFJO,IEIPlV,EAAAoV,eACC,SAAApV,EAAA2U,GACD3U,EAAA6U,SAAA7U,EAAA2U,EAA8BI,KAC7B,SAAAjkC,EAAAC,GACD,OAAAA,EAAAD,GAAyBikC,IACxB,SAAA/U,GACD,OAAAA,EAAAqV,gBCPIC,IDWiBH,GAAMP,MCXhBT,GAAQ,SAAAnU,GACnBA,EAAA6U,QAAA7U,IAAAkV,kBHJO,IGIPlV,EAAAoV,aAAiFpV,EAAAqV,aAAuBN,KACvG,SAAA/U,EAAA2U,GACD3U,EAAA6U,SAAA7U,EHJO,KGIP2U,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,GHNO,MGON,SAAAkvB,GACD,OAAAA,EAAAuV,cCPIC,IDWeF,GAAIV,MCXbT,GAAQ,SAAAnU,GAClBA,EAAAyV,SAAA,UACC,SAAAzV,EAAA2U,GACD3U,EAAA0V,QAAA1V,EAAA2V,UAAAhB,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,GAAAC,EAAA6kC,oBAAA9kC,EAAA8kC,qBAAgFb,IJLzE,OIMN,SAAA/U,GACD,OAAAA,EAAA2V,UAAA,KAGeE,GAAA,GACGL,GAAGZ,MCXrB,SAAAkB,GAAAn1C,GACA,OAASwzC,GAAQ,SAAAnU,GACjBA,EAAA0V,QAAA1V,EAAA2V,WAAA3V,EAAA+V,SAAA,EAAAp1C,GAAA,GACAq/B,EAAAyV,SAAA,UACG,SAAAzV,EAAA2U,GACH3U,EAAA0V,QAAA1V,EAAA2V,UAAA,EAAAhB,IACG,SAAA7jC,EAAAC,GACH,OAAAA,EAAAD,GAAAC,EAAA6kC,oBAAA9kC,EAAA8kC,qBAAkFb,IAAkBC,KAI7F,IAAAgB,GAAAF,GAAA,GACAG,GAAAH,GAAA,GACAI,GAAAJ,GAAA,GACAK,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GClBHS,IDoBGP,GAAApB,MACAqB,GAAArB,MACAsB,GAAAtB,MACAuB,GAAAvB,MACAwB,GAAAxB,MACAyB,GAAAzB,MACA0B,GAAA1B,MC1BKT,GAAQ,SAAAnU,GACpBA,EAAA0V,QAAA,GACA1V,EAAAyV,SAAA,UACC,SAAAzV,EAAA2U,GACD3U,EAAAwW,SAAAxW,EAAAyW,WAAA9B,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAA0lC,WAAA3lC,EAAA2lC,WAAA,IAAA1lC,EAAA2lC,cAAA5lC,EAAA4lC,gBACC,SAAA1W,GACD,OAAAA,EAAAyW,cCRIE,IDYgBJ,GAAK3B,MCZdT,GAAQ,SAAAnU,GACnBA,EAAAwW,SAAA,KACAxW,EAAAyV,SAAA,UACC,SAAAzV,EAAA2U,GACD3U,EAAA4W,YAAA5W,EAAA0W,cAAA/B,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAA2lC,cAAA5lC,EAAA4lC,eACC,SAAA1W,GACD,OAAAA,EAAA0W,iBAIAC,GAAItuC,MAAA,SAAA5E,GACJ,OAAA6C,SAAA7C,EAAAhB,KAAAkuB,MAAAltB,OAAA,EAA2D0wC,GAAQ,SAAAnU,GACnEA,EAAA4W,YAAAn0C,KAAAkuB,MAAAqP,EAAA0W,cAAAjzC,MACAu8B,EAAAwW,SAAA,KACAxW,EAAAyV,SAAA,UACG,SAAAzV,EAAA2U,GACH3U,EAAA4W,YAAA5W,EAAA0W,cAAA/B,EAAAlxC,KALA,MASe,IAAAozC,GAAA,GCrBfC,IDsBmBH,GAAI/B,MCtBPT,GAAQ,SAAAnU,GACxBA,EAAA+W,cAAA,MACC,SAAA/W,EAAA2U,GACD3U,EAAA6U,SAAA7U,EAAA2U,EAA8BI,KAC7B,SAAAjkC,EAAAC,GACD,OAAAA,EAAAD,GAAyBikC,IACxB,SAAA/U,GACD,OAAAA,EAAAK,mBCPA2W,IDWOF,GAAAlC,MCXOT,GAAQ,SAAAnU,GACtBA,EAAAiX,cAAA,QACC,SAAAjX,EAAA2U,GACD3U,EAAA6U,SAAA7U,ETJO,KSIP2U,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,GTNO,MSON,SAAAkvB,GACD,OAAAA,EAAAG,iBCPA+W,IDWOF,GAAApC,MCXMT,GAAQ,SAAAnU,GACrBA,EAAAmX,YAAA,UACC,SAAAnX,EAAA2U,GACD3U,EAAAoX,WAAApX,EAAAY,aAAA+T,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAAD,GVLO,OUMN,SAAAkvB,GACD,OAAAA,EAAAY,aAAA,KAGeyW,GAAA,GACRH,GAAAtC,MCXP,SAAA0C,GAAA32C,GACA,OAASwzC,GAAQ,SAAAnU,GACjBA,EAAAoX,WAAApX,EAAAY,cAAAZ,EAAAuX,YAAA,EAAA52C,GAAA,GACAq/B,EAAAmX,YAAA,UACG,SAAAnX,EAAA2U,GACH3U,EAAAoX,WAAApX,EAAAY,aAAA,EAAA+T,IACG,SAAA7jC,EAAAC,GACH,OAAAA,EAAAD,GAA2BkkC,KAIpB,IAAAwC,GAAAF,GAAA,GACAG,GAAAH,GAAA,GACAI,GAAAJ,GAAA,GACAK,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GClBPS,IDoBOP,GAAA5C,MACA6C,GAAA7C,MACA8C,GAAA9C,MACA+C,GAAA/C,MACAgD,GAAAhD,MACAiD,GAAAjD,MACAkD,GAAAlD,MC1BQT,GAAQ,SAAAnU,GACvBA,EAAAoX,WAAA,GACApX,EAAAmX,YAAA,UACC,SAAAnX,EAAA2U,GACD3U,EAAAgY,YAAAhY,EAAAW,cAAAgU,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAA4vB,cAAA7vB,EAAA6vB,cAAA,IAAA5vB,EAAA2vB,iBAAA5vB,EAAA4vB,mBACC,SAAAV,GACD,OAAAA,EAAAW,iBCRAsX,IDYOF,GAAAnD,MCZOT,GAAQ,SAAAnU,GACtBA,EAAAgY,YAAA,KACAhY,EAAAmX,YAAA,UACC,SAAAnX,EAAA2U,GACD3U,EAAAkY,eAAAlY,EAAAU,iBAAAiU,IACC,SAAA7jC,EAAAC,GACD,OAAAA,EAAA2vB,iBAAA5vB,EAAA4vB,kBACC,SAAAV,GACD,OAAAA,EAAAU,oBAIAuX,GAAA5vC,MAAA,SAAA5E,GACA,OAAA6C,SAAA7C,EAAAhB,KAAAkuB,MAAAltB,OAAA,EAA2D0wC,GAAQ,SAAAnU,GACnEA,EAAAkY,eAAAz1C,KAAAkuB,MAAAqP,EAAAU,iBAAAj9B,MACAu8B,EAAAgY,YAAA,KACAhY,EAAAmX,YAAA,UACG,SAAAnX,EAAA2U,GACH3U,EAAAkY,eAAAlY,EAAAU,iBAAAiU,EAAAlxC,KALA,MASe,IAAA00C,GAAA,GACRF,GAAArD,MCZP,SAAAwD,GAAAn1C,GACA,MAAAA,EAAAD,GAAAC,EAAAD,EAAA,KACA,IAAAg9B,EAAA,IAAA5L,MAAA,EAAAnxB,EAAAC,EAAAD,MAAAmD,EAAAnD,EAAAE,EAAAF,EAAA8M,EAAA9M,EAAAK,GAEA,OADA08B,EAAA4W,YAAA3zC,EAAAD,GACAg9B,EAEA,WAAA5L,KAAAnxB,EAAAD,EAAAC,EAAAC,EAAAD,MAAAmD,EAAAnD,EAAAE,EAAAF,EAAA8M,EAAA9M,EAAAK,GAGA,SAAA+0C,GAAAp1C,GACA,MAAAA,EAAAD,GAAAC,EAAAD,EAAA,KACA,IAAAg9B,EAAA,IAAA5L,UAAAkkB,KAAA,EAAAr1C,EAAAC,EAAAD,MAAAmD,EAAAnD,EAAAE,EAAAF,EAAA8M,EAAA9M,EAAAK,IAEA,OADA08B,EAAAkY,eAAAj1C,EAAAD,GACAg9B,EAEA,WAAA5L,UAAAkkB,IAAAr1C,EAAAD,EAAAC,EAAAC,EAAAD,MAAAmD,EAAAnD,EAAAE,EAAAF,EAAA8M,EAAA9M,EAAAK,IAGA,SAAAi1C,GAAAv1C,GACA,OAAUA,IAAAE,EAAA,EAAAD,EAAA,EAAAmD,EAAA,EAAAjD,EAAA,EAAA4M,EAAA,EAAAzM,EAAA,GA2UV,ICzWIk1C,GAGGC,GACAC,GDqWPC,GAAA,CAAYC,IAAA,GAAAt0C,EAAA,IAAAu0C,EAAA,KACZC,GAAA,UACAC,GAAA,KACAC,GAAA,sBAEA,SAASC,GAAG9lC,EAAAsyB,EAAA3F,GACZ,IAAA6F,EAAAxyB,EAAA,SACAhH,GAAAw5B,GAAAxyB,KAAA,GACAlS,EAAAkL,EAAAlL,OACA,OAAA0kC,GAAA1kC,EAAA6+B,EAAA,IAAAh7B,MAAAg7B,EAAA7+B,EAAA,GAAAgG,KAAAw+B,GAAAt5B,KAGA,SAAA+sC,GAAAz3C,GACA,OAAAA,EAAAgN,QAAAuqC,GAAA,QAGA,SAAAG,GAAA9+B,GACA,WAAAsI,OAAA,OAAAtI,EAAAnU,IAAAgzC,IAAAjyC,KAAA,cAGA,SAAAmyC,GAAA/+B,GAEA,IADA,IAAAnU,EAAA,GAAcvF,GAAA,EAAAJ,EAAA8Z,EAAApZ,SACdN,EAAAJ,GAAA2F,EAAAmU,EAAA1Z,GAAAoB,eAAApB,EACA,OAAAuF,EAGA,SAAAmzC,GAAAp2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAG,GAAA7C,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAq4C,GAAAr2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAArB,GAAArB,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAs4C,GAAAt2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAmE,GAAA7G,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAu4C,GAAAv2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAkD,GAAA5F,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAw4C,GAAAx2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAgF,GAAA1H,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAy4C,GAAAz2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAD,GAAAzC,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA04C,GAAA12C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAD,GAAAzC,EAAA,KAAAA,EAAA,gBAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA24C,GAAA32C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAA,+BAAAgsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAkC,EAAA5E,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA44C,GAAA52C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAC,EAAA3C,EAAA,KAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA64C,GAAA72C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,KAAA1C,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA84C,GAAA92C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAC,EAAA,EAAAD,KAAA1C,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAA+4C,GAAA/2C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAmD,GAAA7F,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAg5C,GAAAh3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAE,GAAA5C,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAi5C,GAAAj3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAA8M,GAAAxP,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAk5C,GAAAl3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAK,GAAA/C,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAm5C,GAAAn3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,GAAA0C,EAAAK,EAAAb,KAAAkuB,MAAApwB,EAAA,QAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAo5C,GAAAp3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAw4C,GAAAxsB,KAAApgB,EAAArK,MAAAnB,IAAA,IACA,OAAAJ,EAAAI,EAAAJ,EAAA,GAAAU,QAAA,EAGA,SAAAq5C,GAAAr3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAiE,GAAA3G,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAs5C,GAAAt3C,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAu4C,GAAAvsB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAiE,EAAA,KAAA3G,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,SAAA,EAGA,SAAAu5C,GAAAv3C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAA0yC,UAAA/yC,EAAA,GAGZ,SAAA63C,GAAAx3C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAsyC,WAAA3yC,EAAA,GAGZ,SAAA83C,GAAAz3C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAsyC,WAAA,OAAA3yC,EAAA,GAGZ,SAAA+3C,GAAA13C,EAAAL,GACA,OAASq2C,GAAG,EAAKpD,GAAO1E,MAAO0F,GAAQ5zC,MAAAL,EAAA,GAGvC,SAAAg4C,GAAA33C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAiyC,kBAAAtyC,EAAA,GAGZ,SAAAi4C,GAAA53C,EAAAL,GACA,OAAAg4C,GAAA33C,EAAAL,GAAA,MAGA,SAAAk4C,GAAA73C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAwzC,WAAA,EAAA7zC,EAAA,GAGZ,SAAAm4C,GAAA93C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAoyC,aAAAzyC,EAAA,GAGZ,SAAAo4C,GAAA/3C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAmyC,aAAAxyC,EAAA,GAGZ,SAAAq4C,GAAAh4C,GACA,IAAAi4C,EAAAj4C,EAAA8yC,SACA,WAAAmF,EAAA,EAAAA,EAGA,SAAAC,GAAAl4C,EAAAL,GACA,OAASq2C,GAAIjD,GAAU7E,MAAO0F,GAAQ5zC,MAAAL,EAAA,GAGtC,SAAAw4C,GAAAn4C,EAAAL,GACA,IAAAs4C,EAAAj4C,EAAA8yC,SAEA,OADA9yC,EAAAi4C,GAAA,OAAAA,EAAgC9E,GAAYnzC,GAAMmzC,GAAYvuC,KAAA5E,GACrDg2C,GAAI7C,GAAYjF,MAAO0F,GAAQ5zC,OAAmB,IAAR4zC,GAAQ5zC,GAAA8yC,UAAAnzC,EAAA,GAG3D,SAAAy4C,GAAAp4C,GACA,OAAAA,EAAA8yC,SAGA,SAAAuF,GAAAr4C,EAAAL,GACA,OAASq2C,GAAIhD,GAAU9E,MAAO0F,GAAQ5zC,MAAAL,EAAA,GAGtC,SAAS24C,GAAUt4C,EAAAL,GACnB,OAASq2C,GAAGh2C,EAAAyzC,cAAA,IAAA9zC,EAAA,GAGZ,SAAA44C,GAAAv4C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAyzC,cAAA,IAAA9zC,EAAA,GAGZ,SAAA64C,GAAAx4C,GACA,IAAA+C,EAAA/C,EAAA2yC,oBACA,OAAA5vC,EAAA,OAAAA,IAAA,QACQizC,GAAGjzC,EAAA,YACHizC,GAAGjzC,EAAA,UAGX,SAAA01C,GAAAz4C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAA29B,aAAAh+B,EAAA,GAGZ,SAAA+4C,GAAA14C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAk9B,cAAAv9B,EAAA,GAGZ,SAAAg5C,GAAA34C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAk9B,cAAA,OAAAv9B,EAAA,GAGZ,SAAAi5C,GAAA54C,EAAAL,GACA,OAASq2C,GAAG,EAAK5B,GAAMlG,MAAOgH,GAAOl1C,MAAAL,EAAA,GAGrC,SAAAk5C,GAAA74C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAw9B,qBAAA79B,EAAA,GAGZ,SAAAm5C,GAAA94C,EAAAL,GACA,OAAAk5C,GAAA74C,EAAAL,GAAA,MAGA,SAAAo5C,GAAA/4C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAA09B,cAAA,EAAA/9B,EAAA,GAGZ,SAAAq5C,GAAAh5C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAo9B,gBAAAz9B,EAAA,GAGZ,SAAAs5C,GAAAj5C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAs9B,gBAAA39B,EAAA,GAGZ,SAAAu5C,GAAAl5C,GACA,IAAAm5C,EAAAn5C,EAAAs0C,YACA,WAAA6E,EAAA,EAAAA,EAGA,SAAAC,GAAAp5C,EAAAL,GACA,OAASq2C,GAAIzB,GAASrG,MAAOgH,GAAOl1C,MAAAL,EAAA,GAGpC,SAAA05C,GAAAr5C,EAAAL,GACA,IAAAs4C,EAAAj4C,EAAAs0C,YAEA,OADAt0C,EAAAi4C,GAAA,OAAAA,EAAgCtD,GAAW30C,GAAM20C,GAAW/vC,KAAA5E,GACnDg2C,GAAIrB,GAAWzG,MAAOgH,GAAOl1C,OAAkB,IAAPk1C,GAAOl1C,GAAAs0C,aAAA30C,EAAA,GAGxD,SAAA25C,GAAAt5C,GACA,OAAAA,EAAAs0C,YAGA,SAAAiF,GAAAv5C,EAAAL,GACA,OAASq2C,GAAIxB,GAAStG,MAAOgH,GAAOl1C,MAAAL,EAAA,GAGpC,SAAA65C,GAAAx5C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAy9B,iBAAA,IAAA99B,EAAA,GAGZ,SAAA85C,GAAAz5C,EAAAL,GACA,OAASq2C,GAAGh2C,EAAAy9B,iBAAA,IAAA99B,EAAA,GAGZ,SAAA+5C,KACA,cAGA,SAAAC,KACA,UAGA,SAAAC,GAAA55C,GACA,OAAAA,EAGA,SAAA65C,GAAA75C,GACA,OAAAR,KAAAkuB,OAAA1tB,EAAA,MC3mBe,SAAsBkf,GACnCq2B,GDea,SAAA9R,GACf,IAAAqW,EAAArW,EAAAsW,SACAC,EAAAvW,EAAA1G,KACAkd,EAAAxW,EAAA5R,KACAqoB,EAAAzW,EAAA0W,QACAC,EAAA3W,EAAA4W,KACAC,EAAA7W,EAAA8W,UACAC,EAAA/W,EAAAgX,OACAC,EAAAjX,EAAAkX,YAEAC,EAAA1E,GAAAgE,GACAW,EAAA1E,GAAA+D,GACAY,EAAA5E,GAAAkE,GACAW,EAAA5E,GAAAiE,GACAY,EAAA9E,GAAAoE,GACAW,EAAA9E,GAAAmE,GACAY,EAAAhF,GAAAsE,GACAW,EAAAhF,GAAAqE,GACAY,EAAAlF,GAAAwE,GACAW,EAAAlF,GAAAuE,GAEAY,EAAA,CACA39C,EAkPA,SAAAqC,GACA,OAAAs6C,EAAAt6C,EAAA8yC,WAlPAxyC,EAqPA,SAAAN,GACA,OAAAo6C,EAAAp6C,EAAA8yC,WArPA1yC,EAwPA,SAAAJ,GACA,OAAA06C,EAAA16C,EAAAwzC,aAxPA7uC,EA2PA,SAAA3E,GACA,OAAAw6C,EAAAx6C,EAAAwzC,aA3PAr0C,EAAA,KACAa,EAAAu3C,GACA94C,EAAA84C,GACAn4C,EAAAw4C,GACAz0C,EAAAq0C,GACAx0C,EAAAy0C,GACAnyC,EAAAoyC,GACAr3C,EAAAs3C,GACA13C,EAAA43C,GACA33C,EAAA43C,GACAn4C,EAoPA,SAAAK,GACA,OAAAk6C,IAAAl6C,EAAAsyC,YAAA,MApPAruC,EAAA21C,GACAp7C,EAAAq7C,GACA/sC,EAAAirC,GACAp5C,EAAAq5C,GACA7zC,EAAA+zC,GACAh1C,EAAAi1C,GACAh4C,EAAAi4C,GACApzC,EAAAqzC,GACAv4C,EAAA,KACAsD,EAAA,KACArD,EAASu4C,GACTh1C,EAAAi1C,GACAr2C,EAAAs2C,GACAnV,IAAAsW,IAGA4B,EAAA,CACA59C,EAsOA,SAAAqC,GACA,OAAAs6C,EAAAt6C,EAAAs0C,cAtOAh0C,EAyOA,SAAAN,GACA,OAAAo6C,EAAAp6C,EAAAs0C,cAzOAl0C,EA4OA,SAAAJ,GACA,OAAA06C,EAAA16C,EAAA09B,gBA5OA/4B,EA+OA,SAAA3E,GACA,OAAAw6C,EAAAx6C,EAAA09B,gBA/OAv+B,EAAA,KACAa,EAAAy4C,GACAh6C,EAAAg6C,GACAr5C,EAAA05C,GACA31C,EAAAu1C,GACA11C,EAAA21C,GACArzC,EAAAszC,GACAv4C,EAAAw4C,GACA54C,EAAA84C,GACA74C,EAAA84C,GACAr5C,EAwOA,SAAAK,GACA,OAAAk6C,IAAAl6C,EAAAk9B,eAAA,MAxOAj5B,EAAA21C,GACAp7C,EAAAq7C,GACA/sC,EAAAmsC,GACAt6C,EAAAu6C,GACA/0C,EAAAi1C,GACAl2C,EAAAm2C,GACAl5C,EAAAm5C,GACAt0C,EAAAu0C,GACAz5C,EAAA,KACAsD,EAAA,KACArD,EAAAy5C,GACAl2C,EAAAm2C,GACAv3C,EAAAw3C,GACArW,IAAAsW,IAGA6B,EAAA,CACA79C,EAkJA,SAAAqC,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAA09C,EAAA1xB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAG,EAAA86C,EAAA39C,EAAA,GAAAwB,eAAApB,EAAAJ,EAAA,GAAAU,SAAA,GAnJAsC,EAsJA,SAAAN,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAw9C,EAAAxxB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAG,EAAA46C,EAAAz9C,EAAA,GAAAwB,eAAApB,EAAAJ,EAAA,GAAAU,SAAA,GAvJAoC,EA0JA,SAAAJ,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAA89C,EAAA9xB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAC,EAAAo7C,EAAA/9C,EAAA,GAAAwB,eAAApB,EAAAJ,EAAA,GAAAU,SAAA,GA3JA2G,EA8JA,SAAA3E,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAA49C,EAAA5xB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAC,EAAAk7C,EAAA79C,EAAA,GAAAwB,eAAApB,EAAAJ,EAAA,GAAAU,SAAA,GA/JAmB,EAkKA,SAAAa,EAAAkJ,EAAAxL,GACA,OAAA+9C,EAAAz7C,EAAA85C,EAAA5wC,EAAAxL,IAlKAsC,EAAA62C,GACAp4C,EAAAo4C,GACAz3C,EAAA+3C,GACAh0C,EAAA4zC,GACA/zC,EAAA+zC,GACAzxC,EAAAwxC,GACAz2C,EAAA62C,GACAj3C,EAAA22C,GACA12C,EAAA82C,GACAr3C,EA+HA,SAAAK,EAAAkJ,EAAAxL,GACA,IAAAJ,EAAAs9C,EAAAtxB,KAAApgB,EAAArK,MAAAnB,IACA,OAAAJ,GAAA0C,EAAAL,EAAAk7C,EAAAv9C,EAAA,GAAAwB,eAAApB,EAAAJ,EAAA,GAAAU,SAAA,GAhIAiG,EAAAozC,GACA74C,EAAA84C,GACAxqC,EAAAmqC,GACAt4C,EAAA03C,GACAlyC,EAAAmyC,GACApzC,EAAAqzC,GACAp2C,EAAAi2C,GACApxC,EAAAwxC,GACA12C,EAmJA,SAAAE,EAAAkJ,EAAAxL,GACA,OAAA+9C,EAAAz7C,EAAAg6C,EAAA9wC,EAAAxL,IAnJA0F,EAsJA,SAAApD,EAAAkJ,EAAAxL,GACA,OAAA+9C,EAAAz7C,EAAAi6C,EAAA/wC,EAAAxL,IAtJAqC,EAAA22C,GACApzC,EAAAmzC,GACAv0C,EAAAy0C,GACAtT,IAAA+T,IAWA,SAAAlT,EAAA5B,EAAAgZ,GACA,gBAAAve,GACA,IAIA59B,EACAy9B,EACAvT,EANAngB,EAAA,GACAxL,GAAA,EACA4H,EAAA,EACAhI,EAAAglC,EAAAtkC,OAOA,IAFA++B,aAAA5L,OAAA4L,EAAA,IAAA5L,MAAA4L,MAEAr/B,EAAAJ,GACA,KAAAglC,EAAA/jC,WAAAb,KACAwL,EAAAnK,KAAAujC,EAAAzjC,MAAAyG,EAAA5H,IACA,OAAAk/B,EAAA8Y,GAAAv2C,EAAAmjC,EAAAoZ,SAAAh+C,KAAAyB,EAAAmjC,EAAAoZ,SAAAh+C,GACAk/B,EAAA,MAAAz9B,EAAA,SACAkqB,EAAAiyB,EAAAn8C,QAAAkqB,EAAA0T,EAAAH,IACA1zB,EAAAnK,KAAAI,GACAmG,EAAA5H,EAAA,GAKA,OADAwL,EAAAnK,KAAAujC,EAAAzjC,MAAAyG,EAAA5H,IACAwL,EAAAlF,KAAA,KAIA,SAAA23C,EAAArZ,EAAAsZ,GACA,gBAAA1yC,GACA,IAEA2yC,EAAA5D,EAFAj4C,EAAAs1C,GAAA,MAGA,GAFAmG,EAAAz7C,EAAAsiC,EAAAp5B,GAAA,OAEAA,EAAAlL,OAAA,YAGA,SAAAgC,EAAA,WAAAmxB,KAAAnxB,EAAAiE,GAMA,GAHA,MAAAjE,MAAAmD,EAAAnD,EAAAmD,EAAA,MAAAnD,EAAAL,GAGA,MAAAK,EAAA,CACA,GAAAA,EAAAkD,EAAA,GAAAlD,EAAAkD,EAAA,eACA,MAAAlD,MAAAG,EAAA,GACA,MAAAH,GACAi4C,GAAA4D,EAAAzG,GAAAE,GAAAt1C,EAAAD,KAAAu0C,YACAuH,EAAA5D,EAAA,OAAAA,EAAwCzD,GAAS5vC,KAAAi3C,GAAcrH,GAASqH,GACxEA,EAAiBzH,GAAM3C,OAAAoK,EAAA,GAAA77C,EAAAkD,EAAA,IACvBlD,EAAAD,EAAA87C,EAAApe,iBACAz9B,EAAAC,EAAA47C,EAAAne,cACA19B,IAAA67C,EAAAle,cAAA39B,EAAAG,EAAA,OAEA83C,GAAA4D,EAAAD,EAAAtG,GAAAt1C,EAAAD,KAAA+yC,SACA+I,EAAA5D,EAAA,OAAAA,EAAwCjF,GAAUpuC,KAAAi3C,GAAc7I,GAAU6I,GAC1EA,EAAiBjJ,GAAOnB,OAAAoK,EAAA,GAAA77C,EAAAkD,EAAA,IACxBlD,EAAAD,EAAA87C,EAAApI,cACAzzC,EAAAC,EAAA47C,EAAArI,WACAxzC,IAAA67C,EAAAnJ,WAAA1yC,EAAAG,EAAA,WAEO,MAAAH,GAAA,MAAAA,KACP,MAAAA,MAAAG,EAAA,MAAAH,IAAArB,EAAA,QAAAqB,EAAA,KACAi4C,EAAA,MAAAj4C,EAAAo1C,GAAAE,GAAAt1C,EAAAD,IAAAu0C,YAAAsH,EAAAtG,GAAAt1C,EAAAD,IAAA+yC,SACA9yC,EAAAC,EAAA,EACAD,IAAA,MAAAA,KAAAG,EAAA,OAAAH,EAAAgF,GAAAizC,EAAA,KAAAj4C,EAAAG,EAAA,EAAAH,EAAAmE,GAAA8zC,EAAA,MAKA,YAAAj4C,GACAA,EAAAmD,GAAAnD,EAAAkC,EAAA,MACAlC,EAAAE,GAAAF,EAAAkC,EAAA,IACAkzC,GAAAp1C,IAIA47C,EAAA57C,IAIA,SAAAy7C,EAAAz7C,EAAAsiC,EAAAp5B,EAAA5D,GAOA,IANA,IAGAnG,EACAgwB,EAJAzxB,EAAA,EACAJ,EAAAglC,EAAAtkC,OACAiC,EAAAiJ,EAAAlL,OAIAN,EAAAJ,GAAA,CACA,GAAAgI,GAAArF,EAAA,SAEA,SADAd,EAAAmjC,EAAA/jC,WAAAb,OAIA,GAFAyB,EAAAmjC,EAAAoZ,OAAAh+C,OACAyxB,EAAAqsB,EAAAr8C,KAAAu2C,GAAApT,EAAAoZ,OAAAh+C,KAAAyB,MACAmG,EAAA6pB,EAAAnvB,EAAAkJ,EAAA5D,IAAA,gBACO,GAAAnG,GAAA+J,EAAA3K,WAAA+G,KACP,SAIA,OAAAA,EAgFA,OA1LAg2C,EAAAx7C,EAAAokC,EAAA8V,EAAAsB,GACAA,EAAAl4C,EAAA8gC,EAAA+V,EAAAqB,GACAA,EAAAn8C,EAAA+kC,EAAA4V,EAAAwB,GACAC,EAAAz7C,EAAAokC,EAAA8V,EAAAuB,GACAA,EAAAn4C,EAAA8gC,EAAA+V,EAAAsB,GACAA,EAAAp8C,EAAA+kC,EAAA4V,EAAAyB,GAqLA,CACAlyB,OAAA,SAAAiZ,GACA,IAAAljC,EAAA8kC,EAAA5B,GAAA,GAAAgZ,GAEA,OADAl8C,EAAAwE,SAAA,WAA+B,OAAA0+B,GAC/BljC,GAEA+vB,MAAA,SAAAmT,GACA,IAAA3iC,EAAAg8C,EAAArZ,GAAA,GAAA6S,IAEA,OADAx1C,EAAAiE,SAAA,WAA+B,OAAA0+B,GAC/B3iC,GAEA61C,UAAA,SAAAlT,GACA,IAAAljC,EAAA8kC,EAAA5B,GAAA,GAAAiZ,GAEA,OADAn8C,EAAAwE,SAAA,WAA+B,OAAA0+B,GAC/BljC,GAEAq2C,SAAA,SAAAnT,GACA,IAAA3iC,EAAAg8C,EAAArZ,EAAA8S,IAEA,OADAz1C,EAAAiE,SAAA,WAA+B,OAAA0+B,GAC/B3iC,IClVWm8C,CAAY58B,GACRq2B,GAAMlsB,OACPksB,GAAMpmB,MACpBqmB,GAAcD,GAAMC,UACpBC,GAAaF,GAAME,SAhBnBsG,CAAa,CACbhC,SAAA,SACAhd,KAAA,aACAlL,KAAA,eACAsoB,QAAA,YACAE,KAAA,yEACAE,UAAA,4CACAE,OAAA,gHACAE,YAAA,4ECRAxpB,KAAA/mB,UAAA4xC,aAEMxG,GARC,0BCMP,IAAArkB,KAAA,6BAEMskB,GDRC,yBEFQ,IAAAwG,GAAA,SAAA3Z,GAEf,IADA,IAAAhlC,EAAAglC,EAAAtkC,OAAA,IAAAuvB,EAAA,IAAA1rB,MAAAvE,GAAAI,EAAA,EACAA,EAAAJ,GAAAiwB,EAAA7vB,GAAA,IAAA4kC,EAAAzjC,MAAA,EAAAnB,EAAA,IAAAA,GACA,OAAA6vB,GCDe2uB,ICAAD,GAAM,gECANA,GAAM,oDCANA,GAAM,oDCANA,GAAM,4ECANA,GAAM,0DCANA,GAAM,oDCANA,GAAM,0DCANA,GAAM,oDCANA,GAAM,4ETAN,SAAAE,GACf,OAAS3uB,GAAmB2uB,IAAAn+C,OAAA,MUYbk+C,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCESC,GAZE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAiE,IAAMg5C,KCASC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,IAAMg5C,KCESC,GAVE,IAAAr6C,MAAA,GAAA7C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAiE,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","file":"js/27.9aefe2f8f6c377464890.bundle.js","sourcesContent":["!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(t.flubber=t.flubber||{})}(this,function(t){\"use strict\";function n(t){return 10===t||13===t||8232===t||8233===t||32===t||9===t||11===t||12===t||160===t||t>=5760&&an.indexOf(t)>=0}function e(t){switch(32|t){case 109:case 122:case 108:case 104:case 118:case 99:case 115:case 113:case 116:case 97:case 114:return!0}return!1}function r(t){return t>=48&&t<=57}function i(t){return t>=48&&t<=57||43===t||45===t||46===t}function a(t){this.index=0,this.path=t,this.max=t.length,this.result=[],this.param=0,this.err=\"\",this.segmentStart=0,this.data=[]}function o(t){for(;t.index<t.max&&n(t.path.charCodeAt(t.index));)t.index++}function s(t){var n,e=t.index,i=e,a=t.max,o=!1,s=!1,h=!1,u=!1;if(i>=a)return void(t.err=\"SvgPath: missed param (at pos \"+i+\")\");if(n=t.path.charCodeAt(i),43!==n&&45!==n||(i++,n=i<a?t.path.charCodeAt(i):0),!r(n)&&46!==n)return void(t.err=\"SvgPath: param should start with 0..9 or `.` (at pos \"+i+\")\");if(46!==n){if(o=48===n,i++,n=i<a?t.path.charCodeAt(i):0,o&&i<a&&n&&r(n))return void(t.err=\"SvgPath: numbers started with `0` such as `09` are ilegal (at pos \"+e+\")\");for(;i<a&&r(t.path.charCodeAt(i));)i++,s=!0;n=i<a?t.path.charCodeAt(i):0}if(46===n){for(u=!0,i++;r(t.path.charCodeAt(i));)i++,h=!0;n=i<a?t.path.charCodeAt(i):0}if(101===n||69===n){if(u&&!s&&!h)return void(t.err=\"SvgPath: invalid float exponent (at pos \"+i+\")\");if(i++,n=i<a?t.path.charCodeAt(i):0,43!==n&&45!==n||i++,!(i<a&&r(t.path.charCodeAt(i))))return void(t.err=\"SvgPath: invalid float exponent (at pos \"+i+\")\");for(;i<a&&r(t.path.charCodeAt(i));)i++}t.index=i,t.param=parseFloat(t.path.slice(e,i))+0}function h(t){var n,e;n=t.path[t.segmentStart],e=n.toLowerCase();var r=t.data;if(\"m\"===e&&r.length>2&&(t.result.push([n,r[0],r[1]]),r=r.slice(2),e=\"l\",n=\"m\"===n?\"l\":\"L\"),\"r\"===e)t.result.push([n].concat(r));else for(;r.length>=rn[e]&&(t.result.push([n].concat(r.splice(0,rn[e]))),rn[e]););}function u(t){var n,r,a,u,c=t.max;if(t.segmentStart=t.index,n=t.path.charCodeAt(t.index),!e(n))return void(t.err=\"SvgPath: bad command \"+t.path[t.index]+\" (at pos \"+t.index+\")\");if(a=rn[t.path[t.index].toLowerCase()],t.index++,o(t),t.data=[],!a)return void h(t);for(r=!1;;){for(u=a;u>0;u--){if(s(t),t.err.length)return;t.data.push(t.param),o(t),r=!1,t.index<c&&44===t.path.charCodeAt(t.index)&&(t.index++,o(t),r=!0)}if(!r){if(t.index>=t.max)break;if(!i(t.path.charCodeAt(t.index)))break}}h(t)}function c(t,n){return[t[0]*n[0]+t[2]*n[1],t[1]*n[0]+t[3]*n[1],t[0]*n[2]+t[2]*n[3],t[1]*n[2]+t[3]*n[3],t[0]*n[4]+t[2]*n[5]+t[4],t[1]*n[4]+t[3]*n[5]+t[5]]}function f(){if(!(this instanceof f))return new f;this.queue=[],this.cache=null}function l(t,n,e,r){var i=t*r-n*e<0?-1:1,a=Math.sqrt(t*t+n*n),o=Math.sqrt(t*t+n*n),s=t*e+n*r,h=s/(a*o);return h>1&&(h=1),h<-1&&(h=-1),i*Math.acos(h)}function p(t,n,e,r,i,a,o,s,h,u){var c=u*(t-e)/2+h*(n-r)/2,f=-h*(t-e)/2+u*(n-r)/2,p=o*o,g=s*s,v=c*c,x=f*f,y=p*g-p*x-g*v;y<0&&(y=0),y/=p*x+g*v,y=Math.sqrt(y)*(i===a?-1:1);var d=y*o/s*f,m=y*-s/o*c,M=u*d-h*m+(t+e)/2,w=h*d+u*m+(n+r)/2,b=(c-d)/o,L=(f-m)/s,A=(-c-d)/o,q=(-f-m)/s,k=l(1,0,b,L),P=l(b,L,A,q);return 0===a&&P>0&&(P-=ln),1===a&&P<0&&(P+=ln),[M,w,k,P]}function g(t,n){var e=4/3*Math.tan(n/4),r=Math.cos(t),i=Math.sin(t),a=Math.cos(t+n),o=Math.sin(t+n);return[r,i,r-i*e,i+r*e,a+o*e,o-a*e,a,o]}function v(t,n,e){if(!(this instanceof v))return new v(t,n,e);this.rx=t,this.ry=n,this.ax=e}function x(t){if(!(this instanceof x))return new x(t);var n=on(t);this.segments=n.segments,this.err=n.err,this.__stack=[]}function y(t){var n=t.match(wn);return n?n.map(Number):[]}function d(t,n,e,r,i,a,o,s){this.a={x:t,y:n},this.b={x:e,y:r},this.c={x:i,y:a},this.d={x:o,y:s},null!==o&&void 0!==o&&null!==s&&void 0!==s?(this.getArcLength=_,this.getPoint=L,this.getDerivative=M):(this.getArcLength=A,this.getPoint=b,this.getDerivative=m),this.init()}function m(t,n,e){return{x:2*(1-e)*(t[1]-t[0])+2*e*(t[2]-t[1]),y:2*(1-e)*(n[1]-n[0])+2*e*(n[2]-n[1])}}function M(t,n,e){return b([3*(t[1]-t[0]),3*(t[2]-t[1]),3*(t[3]-t[2])],[3*(n[1]-n[0]),3*(n[2]-n[1]),3*(n[3]-n[2])],e)}function w(t,n,e,r,i){for(var a=1,o=t/n,s=(t-e(r,i,o))/n;a>.001;){var h=e(r,i,o+s),u=e(r,i,o-s),c=Math.abs(t-h)/n,f=Math.abs(t-u)/n;c<a?(a=c,o+=s):f<a?(a=f,o-=s):s/=2}return o}function b(t,n,e){return{x:(1-e)*(1-e)*t[0]+2*(1-e)*e*t[1]+e*e*t[2],y:(1-e)*(1-e)*n[0]+2*(1-e)*e*n[1]+e*e*n[2]}}function L(t,n,e){return{x:(1-e)*(1-e)*(1-e)*t[0]+3*(1-e)*(1-e)*e*t[1]+3*(1-e)*e*e*t[2]+e*e*e*t[3],y:(1-e)*(1-e)*(1-e)*n[0]+3*(1-e)*(1-e)*e*n[1]+3*(1-e)*e*e*n[2]+e*e*e*n[3]}}function A(t,n,e){void 0===e&&(e=1);var r=t[0]-2*t[1]+t[2],i=n[0]-2*n[1]+n[2],a=2*t[1]-2*t[0],o=2*n[1]-2*n[0],s=4*(r*r+i*i),h=4*(r*a+i*o),u=a*a+o*o;if(0===s)return e*Math.sqrt(Math.pow(t[2]-t[0],2)+Math.pow(n[2]-n[0],2));var c=h/(2*s),f=u/s,l=e+c,p=f-c*c;return Math.sqrt(s)/2*(l*Math.sqrt(l*l+p)-c*Math.sqrt(c*c+p)+p*Math.log(Math.abs((l+Math.sqrt(l*l+p))/(c+Math.sqrt(c*c+p)))))}function q(t,n){return qn[t][n]}function k(t,n,e){var r,i,a,o=e.length-1;if(0===o)return 0;if(0===t){for(i=0,a=0;a<=o;a++)i+=q(o,a)*Math.pow(1-n,o-a)*Math.pow(n,a)*e[a];return i}for(r=new Array(o),a=0;a<o;a++)r[a]=o*(e[a+1]-e[a]);return k(t-1,n,r)}function P(t,n,e){var r=k(1,e,t),i=k(1,e,n),a=r*r+i*i;return Math.sqrt(a)}function _(t,n,e){var r,i,a,o;void 0===e&&(e=1);for(r=e/2,i=0,a=0;a<20;a++)o=r*Ln[20][a]+r,i+=An[20][a]*P(t,n,o);return r*i}function E(t,n,e,r){var i=t*r-n*e<0?-1:1,a=t*e+n*r;return a>1&&(a=1),a<-1&&(a=-1),i*Math.acos(a)}function S(t,n,e,r,i,a,o,s,h,u){var c=u*(t-e)/2+h*(n-r)/2,f=-h*(t-e)/2+u*(n-r)/2,l=o*o,p=s*s,g=c*c,v=f*f,x=l*p-l*v-p*g;x<0&&(x=0),x/=l*v+p*g,x=Math.sqrt(x)*(i===a?-1:1);var y=x*o/s*f,d=x*-s/o*c,m=u*y-h*d+(t+e)/2,M=h*y+u*d+(n+r)/2,w=(c-y)/o,b=(f-d)/s,L=(-c-y)/o,A=(-f-d)/s,q=E(1,0,w,b),k=E(w,b,L,A);return 0===a&&k>0&&(k-=kn),1===a&&k<0&&(k+=kn),[m,M,q,k]}function C(t,n){var e=4/3*Math.tan(n/4),r=Math.cos(t),i=Math.sin(t),a=Math.cos(t+n),o=Math.sin(t+n);return[r,i,r-i*e,i+r*e,a+o*e,o-a*e,a,o]}function Z(t,n,e,r,i,a,o,s,h){var u=0,c=[],f=[];Pn(t,n,e,r,i,a,o,s,h).forEach(function(t){var n=new bn(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]),e=n.getTotalLength();u+=e,c.push(e),f.push(n)}),this.length=u,this.partialLengths=c,this.curves=f}function T(t,n,e,r){this.x0=t,this.x1=n,this.y0=e,this.y1=r}function F(t,n){return Math.sqrt((t[0]-n[0])*(t[0]-n[0])+(t[1]-n[1])*(t[1]-n[1]))}function z(t,n,e){return[t[0]+(n[0]-t[0])*e,t[1]+(n[1]-t[1])*e]}function j(t,n){return F(t,n)<1e-9}function I(t,n,e){var r=t.map(function(t,e){return V(t,n[e])});return function(t){var n=r.map(function(n){return n(t)});return e?H(n):n}}function V(t,n){return function(e){return t.map(function(t,r){return t+e*(n[r]-t)})}}function X(t){return\"number\"==typeof t&&isFinite(t)}function Y(t){return G(t)?nn(t):[(t[0][0]+t[t.length-1][0])/2,(t[0][1]+t[t.length-1][1])/2]}function G(t){for(var n=0;n<t.length-2;n++){var e=t[n],r=t[n+1],i=t[n+2];if(e[0]*(r[1]-i[1])+r[0]*(i[1]-e[1])+i[0]*(e[1]-r[1]))return!0}return!1}function O(t){return new yn(t).abs()}function D(t){return t.toString().split(\"M\").map(function(t,n){return t=t.trim(),n&&t?\"M\"+t:t}).filter(function(t){return t})}function H(t){return\"M\"+t.join(\"L\")+\"Z\"}function N(t){return D(O(t))}function Q(t,n){var e=O(t);return U(e)||R(e,n)}function U(t){var n=t.segments||[],e=[];if(!n.length||\"M\"!==n[0][0])return!1;for(var r=0;r<n.length;r++){var i=n[r],a=i[0],o=i[1],s=i[2];if(\"M\"===a&&r||\"Z\"===a)break;if(\"M\"===a||\"L\"===a)e.push([o,s]);else if(\"H\"===a)e.push([o,e[e.length-1][1]]);else{if(\"V\"!==a)return!1;e.push([e[e.length-1][0],o])}}return!!e.length&&{ring:e}}function R(t,n){var e,r,i=D(t)[0],a=[],o=3;if(!i)throw new TypeError(Cn);r=B(i),e=r.getTotalLength(),n&&X(n)&&n>0&&(o=Math.max(o,Math.ceil(e/n)));for(var s=0;s<o;s++){var h=r.getPointAtLength(e*s/o);a.push([h.x,h.y])}return{ring:a,skipBisect:!0}}function B(t){if(\"undefined\"!=typeof window&&window&&window.document)try{var n=window.document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");return n.setAttributeNS(null,\"d\",t),n}catch(t){}return Sn(t)}function W(t,n){for(var e=t.length+n,r=en(t)/n,i=0,a=0,o=r/2;t.length<e;){var s=t[i],h=t[(i+1)%t.length],u=F(s,h);o<=a+u?(t.splice(i+1,0,u?z(s,h,(o-a)/u):s.slice(0)),o+=r):(a+=u,i++)}}function $(t,n){void 0===n&&(n=1/0);for(var e=0;e<t.length;e++)for(var r=t[e],i=e===t.length-1?t[0]:t[e+1];F(r,i)>n;)i=z(r,i,.5),t.splice(e+1,0,i)}function J(t,n){var e,r,i;if(\"string\"==typeof t){var a=Q(t,n);t=a.ring,i=a.skipBisect}else if(!Array.isArray(t))throw new TypeError(Cn);if(e=t.slice(0),!K(e))throw new TypeError(Cn);return e.length>1&&j(e[0],e[e.length-1])&&e.pop(),r=tn(e),r>0&&e.reverse(),!i&&n&&X(n)&&n>0&&$(e,n),e}function K(t){return t.every(function(t){return Array.isArray(t)&&t.length>=2&&X(t[0])&&X(t[1])})}function tt(t,n,e){var r;return r=t.length-n.length,W(t,r<0?-1*r:0),W(n,r>0?r:0),Tn(t,n),I(t,n,e)}function nt(t,n,e){e=e||2;var r=n&&n.length,i=r?n[0]*e:t.length,a=et(t,0,i,e,!0),o=[];if(!a)return o;var s,h,u,c,f,l,p;if(r&&(a=ut(t,n,a,e)),t.length>80*e){s=u=t[0],h=c=t[1];for(var g=e;g<i;g+=e)f=t[g],l=t[g+1],f<s&&(s=f),l<h&&(h=l),f>u&&(u=f),l>c&&(c=l);p=Math.max(u-s,c-h)}return it(a,o,e,s,h,p),o}function et(t,n,e,r,i){var a,o;if(i===Et(t,n,e,r)>0)for(a=n;a<e;a+=r)o=kt(a,t[a],t[a+1],o);else for(a=e-r;a>=n;a-=r)o=kt(a,t[a],t[a+1],o);return o&&Mt(o,o.next)&&(Pt(o),o=o.next),o}function rt(t,n){if(!t)return t;n||(n=t);var e,r=t;do{if(e=!1,r.steiner||!Mt(r,r.next)&&0!==mt(r.prev,r,r.next))r=r.next;else{if(Pt(r),(r=n=r.prev)===r.next)return null;e=!0}}while(e||r!==n);return n}function it(t,n,e,r,i,a,o){if(t){!o&&a&&pt(t,r,i,a);for(var s,h,u=t;t.prev!==t.next;)if(s=t.prev,h=t.next,a?ot(t,r,i,a):at(t))n.push(s.i/e),n.push(t.i/e),n.push(h.i/e),Pt(t),t=h.next,u=h.next;else if((t=h)===u){o?1===o?(t=st(t,n,e),it(t,n,e,r,i,a,2)):2===o&&ht(t,n,e,r,i,a):it(rt(t),n,e,r,i,a,1);break}}}function at(t){var n=t.prev,e=t,r=t.next;if(mt(n,e,r)>=0)return!1;for(var i=t.next.next;i!==t.prev;){if(yt(n.x,n.y,e.x,e.y,r.x,r.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function ot(t,n,e,r){var i=t.prev,a=t,o=t.next;if(mt(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,h=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,c=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,f=vt(s,h,n,e,r),l=vt(u,c,n,e,r),p=t.nextZ;p&&p.z<=l;){if(p!==t.prev&&p!==t.next&&yt(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(p=t.prevZ;p&&p.z>=f;){if(p!==t.prev&&p!==t.next&&yt(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}return!0}function st(t,n,e){var r=t;do{var i=r.prev,a=r.next.next;!Mt(i,a)&&wt(i,r,r.next,a)&&Lt(i,a)&&Lt(a,i)&&(n.push(i.i/e),n.push(r.i/e),n.push(a.i/e),Pt(r),Pt(r.next),r=t=a),r=r.next}while(r!==t);return r}function ht(t,n,e,r,i,a){var o=t;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&dt(o,s)){var h=qt(o,s);return o=rt(o,o.next),h=rt(h,h.next),it(o,n,e,r,i,a),void it(h,n,e,r,i,a)}s=s.next}o=o.next}while(o!==t)}function ut(t,n,e,r){var i,a,o,s,h,u=[];for(i=0,a=n.length;i<a;i++)o=n[i]*r,s=i<a-1?n[i+1]*r:t.length,h=et(t,o,s,r,!1),h===h.next&&(h.steiner=!0),u.push(xt(h));for(u.sort(ct),i=0;i<u.length;i++)ft(u[i],e),e=rt(e,e.next);return e}function ct(t,n){return t.x-n.x}function ft(t,n){if(n=lt(t,n)){var e=qt(n,t);rt(e,e.next)}}function lt(t,n){var e,r=n,i=t.x,a=t.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}e=r.x<r.next.x?r:r.next}}r=r.next}while(r!==n);if(!e)return null;if(i===o)return e.prev;var h,u=e,c=e.x,f=e.y,l=1/0;for(r=e.next;r!==u;)i>=r.x&&r.x>=c&&yt(a<f?i:o,a,c,f,a<f?o:i,a,r.x,r.y)&&((h=Math.abs(a-r.y)/(i-r.x))<l||h===l&&r.x>e.x)&&Lt(r,t)&&(e=r,l=h),r=r.next;return e}function pt(t,n,e,r){var i=t;do{null===i.z&&(i.z=vt(i.x,i.y,n,e,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,gt(i)}function gt(t){var n,e,r,i,a,o,s,h,u=1;do{for(e=t,t=null,a=null,o=0;e;){for(o++,r=e,s=0,n=0;n<u&&(s++,r=r.nextZ);n++);for(h=u;s>0||h>0&&r;)0===s?(i=r,r=r.nextZ,h--):0!==h&&r?e.z<=r.z?(i=e,e=e.nextZ,s--):(i=r,r=r.nextZ,h--):(i=e,e=e.nextZ,s--),a?a.nextZ=i:t=i,i.prevZ=a,a=i;e=r}a.nextZ=null,u*=2}while(o>1);return t}function vt(t,n,e,r,i){return t=32767*(t-e)/i,n=32767*(n-r)/i,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),n=16711935&(n|n<<8),n=252645135&(n|n<<4),n=858993459&(n|n<<2),n=1431655765&(n|n<<1),t|n<<1}function xt(t){var n=t,e=t;do{n.x<e.x&&(e=n),n=n.next}while(n!==t);return e}function yt(t,n,e,r,i,a,o,s){return(i-o)*(n-s)-(t-o)*(a-s)>=0&&(t-o)*(r-s)-(e-o)*(n-s)>=0&&(e-o)*(a-s)-(i-o)*(r-s)>=0}function dt(t,n){return t.next.i!==n.i&&t.prev.i!==n.i&&!bt(t,n)&&Lt(t,n)&&Lt(n,t)&&At(t,n)}function mt(t,n,e){return(n.y-t.y)*(e.x-n.x)-(n.x-t.x)*(e.y-n.y)}function Mt(t,n){return t.x===n.x&&t.y===n.y}function wt(t,n,e,r){return!!(Mt(t,n)&&Mt(e,r)||Mt(t,r)&&Mt(e,n))||mt(t,n,e)>0!=mt(t,n,r)>0&&mt(e,r,t)>0!=mt(e,r,n)>0}function bt(t,n){var e=t;do{if(e.i!==t.i&&e.next.i!==t.i&&e.i!==n.i&&e.next.i!==n.i&&wt(e,e.next,t,n))return!0;e=e.next}while(e!==t);return!1}function Lt(t,n){return mt(t.prev,t,t.next)<0?mt(t,n,t.next)>=0&&mt(t,t.prev,n)>=0:mt(t,n,t.prev)<0||mt(t,t.next,n)<0}function At(t,n){var e=t,r=!1,i=(t.x+n.x)/2,a=(t.y+n.y)/2;do{e.y>a!=e.next.y>a&&i<(e.next.x-e.x)*(a-e.y)/(e.next.y-e.y)+e.x&&(r=!r),e=e.next}while(e!==t);return r}function qt(t,n){var e=new _t(t.i,t.x,t.y),r=new _t(n.i,n.x,n.y),i=t.next,a=n.prev;return t.next=n,n.prev=t,e.next=i,i.prev=e,r.next=e,e.prev=r,a.next=r,r.prev=a,r}function kt(t,n,e,r){var i=new _t(t,n,e);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Pt(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function _t(t,n,e){this.i=t,this.x=n,this.y=e,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Et(t,n,e,r){for(var i=0,a=n,o=e-r;a<e;a+=r)i+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return i}function St(t,n){var e=n.id,r=n.bbox,i=null==n.properties?{}:n.properties,a=Ct(t,n);return null==e&&null==r?{type:\"Feature\",properties:i,geometry:a}:null==r?{type:\"Feature\",id:e,properties:i,geometry:a}:{type:\"Feature\",id:e,bbox:r,properties:i,geometry:a}}function Ct(t,n){function e(t,n){n.length&&n.pop();for(var e=u[t<0?~t:t],r=0,i=e.length;r<i;++r)n.push(h(e[r],r));t<0&&Vn(n,i)}function r(t){return h(t)}function i(t){for(var n=[],r=0,i=t.length;r<i;++r)e(t[r],n);return n.length<2&&n.push(n[0]),n}function a(t){for(var n=i(t);n.length<4;)n.push(n[0]);return n}function o(t){return t.map(a)}function s(t){var n,e=t.type;switch(e){case\"GeometryCollection\":return{type:e,geometries:t.geometries.map(s)};case\"Point\":n=r(t.coordinates);break;case\"MultiPoint\":n=t.coordinates.map(r);break;case\"LineString\":n=i(t.arcs);break;case\"MultiLineString\":n=t.arcs.map(i);break;case\"Polygon\":n=o(t.arcs);break;case\"MultiPolygon\":n=t.arcs.map(o);break;default:return null}return{type:e,coordinates:n}}var h=In(t.transform),u=t.arcs;return s(n)}function Zt(t){for(var n,e=-1,r=t.length,i=t[r-1],a=0;++e<r;)n=i,i=t[e],a+=n[0]*i[1]-n[1]*i[0];return Math.abs(a)}function Tt(t,n){function e(t){switch(t.type){case\"GeometryCollection\":t.geometries.forEach(e);break;case\"Polygon\":r(t.arcs);break;case\"MultiPolygon\":t.arcs.forEach(r)}}function r(t){t.forEach(function(n){n.forEach(function(n){(a[n=n<0?~n:n]||(a[n]=[])).push(t)})}),o.push(t)}function i(n){return Zt(Ct(t,{type:\"Polygon\",arcs:[n]}).coordinates[0])}var a={},o=[],s=[];return n.forEach(e),o.forEach(function(t){if(!t._){var n=[],e=[t];for(t._=1,s.push(n);t=e.pop();)n.push(t),t.forEach(function(t){t.forEach(function(t){a[t<0?~t:t].forEach(function(t){t._||(t._=1,e.push(t))})})})}}),o.forEach(function(t){delete t._}),{type:\"MultiPolygon\",arcs:s.map(function(n){var e,r=[];if(n.forEach(function(t){t.forEach(function(t){t.forEach(function(t){a[t<0?~t:t].length<2&&r.push(t)})})}),r=Yn(t,r),(e=r.length)>1)for(var o,s,h=1,u=i(r[0]);h<e;++h)(o=i(r[h]))>u&&(s=r[0],r[0]=r[h],r[h]=s,u=o);return r})}}function Ft(t){return function(n,e){return Dn(t(n),e)}}function zt(t,n){var e={},r={type:\"Topology\",objects:{triangles:{type:\"GeometryCollection\",geometries:[]}},arcs:[]};return t.forEach(function(t){var i=[];t.forEach(function(t,a){var o=t[0]<t[1]?t.join(\",\"):t[1]+\",\"+t[0],s=t.map(function(t){return n[t]});o in e?i.push(~e[o]):(i.push(e[o]=r.arcs.length),r.arcs.push(s))}),r.objects.triangles.geometries.push({type:\"Polygon\",area:Math.abs(tn(t.map(function(t){return n[t[0]]}))),arcs:[i]})}),r.objects.triangles.geometries.sort(function(t,n){return t.area-n.area}),r}function jt(t,n){for(var e=t.objects.triangles.geometries,r=Hn(function(t){return t.area}).left;e.length>n;)!function(){var n=e[0],i=On(e)[0][0],a=e[i],o=Tt(t,[n,a]);o.area=n.area+a.area,o.type=\"Polygon\",o.arcs=o.arcs[0],e.splice(i,1),e.shift(),e.splice(r(e,o.area),0,o)}();if(n>e.length)throw new RangeError(\"Can't collapse topology into \"+n+\" pieces.\");return Xn(t,t.objects.triangles).features.map(function(t){return t.geometry.coordinates[0].pop(),t.geometry.coordinates[0]})}function It(t){for(var n=zn(t.reduce(function(t,n){return t.concat([n[0]],[n[1]])},[])),e=[],r=0,i=n.length;r<i;r+=3)e.push([[n[r],n[r+1]],[n[r+1],n[r+2]],[n[r+2],n[r]]]);return e}function Vt(t,n,e){function r(t,n,o){void 0===n&&(n=[]),void 0===o&&(o=0);for(var s=0;s<t.length;s++){var h=t.splice(s,1),u=e[h[0]][n.length];o+u<i&&(t.length?r(t.slice(),n.concat(h),o+u):(i=o+u,a=n.concat(h))),t.length&&t.splice(s,0,h[0])}}var i=1/0,a=t.map(function(t,n){return n});return r(a),a}function Xt(t,n){var e=F(Y(t),Y(n));return e*e}function Yt(t,n,e){void 0===e&&(e={});var r=e.maxSegmentLength;void 0===r&&(r=10);var i=e.string;void 0===i&&(i=!0);var a=e.single;void 0===a&&(a=!1);var o=J(t,r);o.length<n.length+2&&W(o,n.length+2-o.length);var s,h=Qn(o,n.length),u=n.map(function(t){return J(t,r)}),c=\"string\"==typeof t&&t;return a&&!n.every(function(t){return\"string\"==typeof t})||(s=n.slice(0)),Dt(h,u,{match:!0,string:i,single:a,t0:c,t1:s})}function Gt(t,n,e){void 0===e&&(e={});var r=e.maxSegmentLength;void 0===r&&(r=10);var i=e.string;void 0===i&&(i=!0);var a=e.single;void 0===a&&(a=!1);var o=Yt(n,t,{maxSegmentLength:r,string:i,single:a});return a?function(t){return o(1-t)}:o.map(function(t){return function(n){return t(1-n)}})}function Ot(t,n,e){void 0===e&&(e={});var r=e.maxSegmentLength;void 0===r&&(r=10);var i=e.string;void 0===i&&(i=!0);var a=e.single;if(void 0===a&&(a=!1),!Array.isArray(t)||!Array.isArray(n)||t.length!==n.length||!t.length)throw new TypeError(Zn);var o,s,h=function(t){return J(t,r)},u=t.map(h),c=n.map(h);return a?(t.every(function(t){return\"string\"==typeof t})&&(o=t.slice(0)),n.every(function(t){return\"string\"==typeof t})&&(s=n.slice(0))):(o=t.slice(0),s=n.slice(0)),Dt(u,c,{string:i,single:a,t0:o,t1:s,match:!1})}function Dt(t,n,e){void 0===e&&(e={});var r=e.string,i=e.single,a=e.t0,o=e.t1,s=e.match,h=s?Un(t,n):t.map(function(t,n){return n}),u=h.map(function(e,i){return tt(t[e],n[i],r)});if(s&&Array.isArray(a)&&(a=h.map(function(t){return a[t]})),i&&r&&(Array.isArray(a)&&(a=a.join(\" \")),Array.isArray(o)&&(o=o.join(\" \"))),i){var c=r?function(t){return u.map(function(n){return n(t)}).join(\" \")}:function(t){return u.map(function(n){return n(t)})};return r&&(a||o)?function(t){return t<1e-4&&a||1-t<1e-4&&o||c(t)}:c}return r?(a=Array.isArray(a)?a.map(function(t){return\"string\"==typeof t&&t}):[],o=Array.isArray(o)?o.map(function(t){return\"string\"==typeof t&&t}):[],u.map(function(t,n){return a[n]||o[n]?function(e){return e<1e-4&&a[n]||1-e<1e-4&&o[n]||t(e)}:t})):u}function Ht(t,n,e,r,i){return Rt(Bt(t,n,e),r,Jt(t,n,e),2*Math.PI*e,i)}function Nt(t,n,e,r,i){var a=Ht(n,e,r,t,i);return function(t){return a(1-t)}}function Qt(t,n,e,r,i,a){return Rt(Wt(t,n,e,r),i,Kt(t,n,e,r),2*e+2*r,a)}function Ut(t,n,e,r,i,a){var o=Qt(n,e,r,i,t,a);return function(t){return o(1-t)}}function Rt(t,n,e,r,i){void 0===i&&(i={});var a=i.maxSegmentLength;void 0===a&&(a=10);var o=i.string;void 0===o&&(o=!0);var s,h,u=J(n,a);return X(r)&&u.length<r/a&&W(u,Math.ceil(r/a-u.length)),s=t(u),h=I(s,u,o),o?function(t){return t<1e-4?e:h(t)}:h}function Bt(t,n,e){return function(r){var i=Y(r),a=en(r.concat([r[0]])),o=Math.atan2(r[0][1]-i[1],r[0][0]-i[0]),s=0;return r.map(function(i,h){var u;return h&&(s+=F(i,r[h-1])),u=o+2*Math.PI*(a?s/a:h/r.length),[Math.cos(u)*e+t,Math.sin(u)*e+n]})}}function Wt(t,n,e,r){return function(i){var a=Y(i),o=en(i.concat([i[0]])),s=Math.atan2(i[0][1]-a[1],i[0][0]-a[0]),h=0;s<0&&(s=2*Math.PI+s);var u=s/(2*Math.PI);return i.map(function(a,s){s&&(h+=F(a,i[s-1]));var c=$t((u+(o?h/o:s/i.length))%1);return[t+c[0]*e,n+c[1]*r]})}}function $t(t){return t<=1/8?[1,.5+4*t]:t<=3/8?[1.5-4*t,1]:t<=5/8?[0,2.5-4*t]:t<=7/8?[4*t-2.5,0]:[1,4*t-3.5]}function Jt(t,n,e){var r=t-e+\",\"+n,i=t+e+\",\"+n,a=\"A\"+e+\",\"+e+\",0,1,1,\";return\"M\"+r+a+i+a+r+\"Z\"}function Kt(t,n,e,r){var i=t+e,a=n+r;return\"M\"+t+\",\"+n+\"L\"+i+\",\"+n+\"L\"+i+\",\"+a+\"L\"+t+\",\"+a+\"Z\"}var tn=function(t){for(var n,e=-1,r=t.length,i=t[r-1],a=0;++e<r;)n=i,i=t[e],a+=n[1]*i[0]-n[0]*i[1];return a/2},nn=function(t){for(var n,e,r=-1,i=t.length,a=0,o=0,s=t[i-1],h=0;++r<i;)n=s,s=t[r],h+=e=n[0]*s[1]-s[0]*n[1],a+=(n[0]+s[0])*e,o+=(n[1]+s[1])*e;return h*=3,[a/h,o/h]},en=function(t){for(var n,e,r=-1,i=t.length,a=t[i-1],o=a[0],s=a[1],h=0;++r<i;)n=o,e=s,a=t[r],o=a[0],s=a[1],n-=o,e-=s,h+=Math.sqrt(n*n+e*e);return h},rn={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},an=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],on=function(t){var n=new a(t),e=n.max;for(o(n);n.index<e&&!n.err.length;)u(n);return n.err.length?n.result=[]:n.result.length&&(\"mM\".indexOf(n.result[0][0])<0?(n.err=\"SvgPath: string should start with `M` or `m`\",n.result=[]):n.result[0][0]=\"M\"),{err:n.err,segments:n.result}};f.prototype.matrix=function(t){return 1===t[0]&&0===t[1]&&0===t[2]&&1===t[3]&&0===t[4]&&0===t[5]?this:(this.cache=null,this.queue.push(t),this)},f.prototype.translate=function(t,n){return 0===t&&0===n||(this.cache=null,this.queue.push([1,0,0,1,t,n])),this},f.prototype.scale=function(t,n){return 1===t&&1===n||(this.cache=null,this.queue.push([t,0,0,n,0,0])),this},f.prototype.rotate=function(t,n,e){var r,i,a;return 0!==t&&(this.translate(n,e),r=t*Math.PI/180,i=Math.cos(r),a=Math.sin(r),this.queue.push([i,a,-a,i,0,0]),this.cache=null,this.translate(-n,-e)),this},f.prototype.skewX=function(t){return 0!==t&&(this.cache=null,this.queue.push([1,0,Math.tan(t*Math.PI/180),1,0,0])),this},f.prototype.skewY=function(t){return 0!==t&&(this.cache=null,this.queue.push([1,Math.tan(t*Math.PI/180),0,1,0,0])),this},f.prototype.toArray=function(){var t=this;if(this.cache)return this.cache;if(!this.queue.length)return this.cache=[1,0,0,1,0,0],this.cache;if(this.cache=this.queue[0],1===this.queue.length)return this.cache;for(var n=1;n<this.queue.length;n++)t.cache=c(t.cache,t.queue[n]);return this.cache},f.prototype.calc=function(t,n,e){var r;return this.queue.length?(this.cache||(this.cache=this.toArray()),r=this.cache,[t*r[0]+n*r[2]+(e?0:r[4]),t*r[1]+n*r[3]+(e?0:r[5])]):[t,n]};var sn=f,hn={matrix:!0,scale:!0,rotate:!0,translate:!0,skewX:!0,skewY:!0},un=/\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/,cn=/[\\s,]+/,fn=function(t){var n,e,r=new sn;return t.split(un).forEach(function(t){if(t.length){if(void 0!==hn[t])return void(n=t);switch(e=t.split(cn).map(function(t){return+t||0}),n){case\"matrix\":return void(6===e.length&&r.matrix(e));case\"scale\":return void(1===e.length?r.scale(e[0],e[0]):2===e.length&&r.scale(e[0],e[1]));case\"rotate\":return void(1===e.length?r.rotate(e[0],0,0):3===e.length&&r.rotate(e[0],e[1],e[2]));case\"translate\":return void(1===e.length?r.translate(e[0],0):2===e.length&&r.translate(e[0],e[1]));case\"skewX\":return void(1===e.length&&r.skewX(e[0]));case\"skewY\":return void(1===e.length&&r.skewY(e[0]))}}}),r},ln=2*Math.PI,pn=function(t,n,e,r,i,a,o,s,h){var u=Math.sin(h*ln/360),c=Math.cos(h*ln/360),f=c*(t-e)/2+u*(n-r)/2,l=-u*(t-e)/2+c*(n-r)/2;if(0===f&&0===l)return[];if(0===o||0===s)return[];o=Math.abs(o),s=Math.abs(s);var v=f*f/(o*o)+l*l/(s*s);v>1&&(o*=Math.sqrt(v),s*=Math.sqrt(v));var x=p(t,n,e,r,i,a,o,s,u,c),y=[],d=x[2],m=x[3],M=Math.max(Math.ceil(Math.abs(m)/(ln/4)),1);m/=M;for(var w=0;w<M;w++)y.push(g(d,m)),d+=m;return y.map(function(t){for(var n=0;n<t.length;n+=2){var e=t[n+0],r=t[n+1];e*=o,r*=s;var i=c*e-u*r,a=u*e+c*r;t[n+0]=i+x[0],t[n+1]=a+x[1]}return t})},gn=Math.PI/180;v.prototype.transform=function(t){var n=Math.cos(this.ax*gn),e=Math.sin(this.ax*gn),r=[this.rx*(t[0]*n+t[2]*e),this.rx*(t[1]*n+t[3]*e),this.ry*(-t[0]*e+t[2]*n),this.ry*(-t[1]*e+t[3]*n)],i=r[0]*r[0]+r[2]*r[2],a=r[1]*r[1]+r[3]*r[3],o=((r[0]-r[3])*(r[0]-r[3])+(r[2]+r[1])*(r[2]+r[1]))*((r[0]+r[3])*(r[0]+r[3])+(r[2]-r[1])*(r[2]-r[1])),s=(i+a)/2;if(o<1e-10*s)return this.rx=this.ry=Math.sqrt(s),this.ax=0,this;var h=r[0]*r[1]+r[2]*r[3];o=Math.sqrt(o);var u=s+o/2,c=s-o/2;return this.ax=Math.abs(h)<1e-10&&Math.abs(u-a)<1e-10?90:180*Math.atan(Math.abs(h)>Math.abs(u-a)?(u-i)/h:h/(u-a))/Math.PI,this.ax>=0?(this.rx=Math.sqrt(u),this.ry=Math.sqrt(c)):(this.ax+=90,this.rx=Math.sqrt(c),this.ry=Math.sqrt(u)),this},v.prototype.isDegenerate=function(){return this.rx<1e-10*this.ry||this.ry<1e-10*this.rx};var vn=v;x.prototype.__matrix=function(t){var n,e=this;t.queue.length&&this.iterate(function(r,i,a,o){var s,h,u,c;switch(r[0]){case\"v\":s=t.calc(0,r[1],!0),h=0===s[0]?[\"v\",s[1]]:[\"l\",s[0],s[1]];break;case\"V\":s=t.calc(a,r[1],!1),h=s[0]===t.calc(a,o,!1)[0]?[\"V\",s[1]]:[\"L\",s[0],s[1]];break;case\"h\":s=t.calc(r[1],0,!0),h=0===s[1]?[\"h\",s[0]]:[\"l\",s[0],s[1]];break;case\"H\":s=t.calc(r[1],o,!1),h=s[1]===t.calc(a,o,!1)[1]?[\"H\",s[0]]:[\"L\",s[0],s[1]];break;case\"a\":case\"A\":var f=t.toArray(),l=vn(r[1],r[2],r[3]).transform(f);if(f[0]*f[3]-f[1]*f[2]<0&&(r[5]=r[5]?\"0\":\"1\"),s=t.calc(r[6],r[7],\"a\"===r[0]),\"A\"===r[0]&&r[6]===a&&r[7]===o||\"a\"===r[0]&&0===r[6]&&0===r[7]){h=[\"a\"===r[0]?\"l\":\"L\",s[0],s[1]];break}h=l.isDegenerate()?[\"a\"===r[0]?\"l\":\"L\",s[0],s[1]]:[r[0],l.rx,l.ry,l.ax,r[4],r[5],s[0],s[1]];break;case\"m\":c=i>0,s=t.calc(r[1],r[2],c),h=[\"m\",s[0],s[1]];break;default:for(u=r[0],h=[u],c=u.toLowerCase()===u,n=1;n<r.length;n+=2)s=t.calc(r[n],r[n+1],c),h.push(s[0],s[1])}e.segments[i]=h},!0)},x.prototype.__evaluateStack=function(){var t,n,e=this;if(this.__stack.length){if(1===this.__stack.length)return this.__matrix(this.__stack[0]),void(this.__stack=[]);for(t=sn(),n=this.__stack.length;--n>=0;)t.matrix(e.__stack[n].toArray());this.__matrix(t),this.__stack=[]}},x.prototype.toString=function(){var t,n,e=this,r=[];this.__evaluateStack();for(var i=0;i<this.segments.length;i++)n=e.segments[i][0],t=i>0&&\"m\"!==n&&\"M\"!==n&&n===e.segments[i-1][0],r=r.concat(t?e.segments[i].slice(1):e.segments[i]);return r.join(\" \").replace(/ ?([achlmqrstvz]) ?/gi,\"$1\").replace(/ \\-/g,\"-\").replace(/zm/g,\"z m\")},x.prototype.translate=function(t,n){return this.__stack.push(sn().translate(t,n||0)),this},x.prototype.scale=function(t,n){return this.__stack.push(sn().scale(t,n||0===n?n:t)),this},x.prototype.rotate=function(t,n,e){return this.__stack.push(sn().rotate(t,n||0,e||0)),this},x.prototype.skewX=function(t){return this.__stack.push(sn().skewX(t)),this},x.prototype.skewY=function(t){return this.__stack.push(sn().skewY(t)),this},x.prototype.matrix=function(t){return this.__stack.push(sn().matrix(t)),this},x.prototype.transform=function(t){return t.trim()?(this.__stack.push(fn(t)),this):this},x.prototype.round=function(t){var n,e=0,r=0,i=0,a=0;return t=t||0,this.__evaluateStack(),this.segments.forEach(function(o){var s=o[0].toLowerCase()===o[0];switch(o[0]){case\"H\":case\"h\":return s&&(o[1]+=i),i=o[1]-o[1].toFixed(t),void(o[1]=+o[1].toFixed(t));case\"V\":case\"v\":return s&&(o[1]+=a),a=o[1]-o[1].toFixed(t),void(o[1]=+o[1].toFixed(t));case\"Z\":case\"z\":return i=e,void(a=r);case\"M\":case\"m\":return s&&(o[1]+=i,o[2]+=a),i=o[1]-o[1].toFixed(t),a=o[2]-o[2].toFixed(t),e=i,r=a,o[1]=+o[1].toFixed(t),void(o[2]=+o[2].toFixed(t));case\"A\":case\"a\":return s&&(o[6]+=i,o[7]+=a),i=o[6]-o[6].toFixed(t),a=o[7]-o[7].toFixed(t),o[1]=+o[1].toFixed(t),o[2]=+o[2].toFixed(t),o[3]=+o[3].toFixed(t+2),o[6]=+o[6].toFixed(t),void(o[7]=+o[7].toFixed(t));default:return n=o.length,s&&(o[n-2]+=i,o[n-1]+=a),i=o[n-2]-o[n-2].toFixed(t),a=o[n-1]-o[n-1].toFixed(t),void o.forEach(function(n,e){e&&(o[e]=+o[e].toFixed(t))})}}),this},x.prototype.iterate=function(t,n){var e,r,i,a=this.segments,o={},s=!1,h=0,u=0,c=0,f=0;if(n||this.__evaluateStack(),a.forEach(function(n,e){var r=t(n,e,h,u);Array.isArray(r)&&(o[e]=r,s=!0);var i=n[0]===n[0].toLowerCase();switch(n[0]){case\"m\":case\"M\":return h=n[1]+(i?h:0),u=n[2]+(i?u:0),c=h,void(f=u);case\"h\":case\"H\":return void(h=n[1]+(i?h:0));case\"v\":case\"V\":return void(u=n[1]+(i?u:0));case\"z\":case\"Z\":return h=c,void(u=f);default:h=n[n.length-2]+(i?h:0),u=n[n.length-1]+(i?u:0)}}),!s)return this;for(i=[],e=0;e<a.length;e++)if(void 0!==o[e])for(r=0;r<o[e].length;r++)i.push(o[e][r]);else i.push(a[e]);return this.segments=i,this},x.prototype.abs=function(){return this.iterate(function(t,n,e,r){var i,a=t[0],o=a.toUpperCase();if(a!==o)switch(t[0]=o,a){case\"v\":return void(t[1]+=r);case\"a\":return t[6]+=e,void(t[7]+=r);default:for(i=1;i<t.length;i++)t[i]+=i%2?e:r}},!0),this},x.prototype.rel=function(){return this.iterate(function(t,n,e,r){var i,a=t[0],o=a.toLowerCase();if(a!==o&&(0!==n||\"M\"!==a))switch(t[0]=o,a){case\"V\":return void(t[1]-=r);case\"A\":return t[6]-=e,void(t[7]-=r);default:for(i=1;i<t.length;i++)t[i]-=i%2?e:r}},!0),this},x.prototype.unarc=function(){return this.iterate(function(t,n,e,r){var i,a,o,s=[],h=t[0];return\"A\"!==h&&\"a\"!==h?null:(\"a\"===h?(a=e+t[6],o=r+t[7]):(a=t[6],o=t[7]),i=pn(e,r,a,o,t[4],t[5],t[1],t[2],t[3]),0===i.length?[[\"a\"===t[0]?\"l\":\"L\",t[6],t[7]]]:(i.forEach(function(t){s.push([\"C\",t[2],t[3],t[4],t[5],t[6],t[7]])}),s))}),this},x.prototype.unshort=function(){var t,n,e,r,i,a=this.segments;return this.iterate(function(o,s,h,u){var c,f=o[0],l=f.toUpperCase();s&&(\"T\"===l?(c=\"t\"===f,e=a[s-1],\"Q\"===e[0]?(t=e[1]-h,n=e[2]-u):\"q\"===e[0]?(t=e[1]-e[3],n=e[2]-e[4]):(t=0,n=0),r=-t,i=-n,c||(r+=h,i+=u),a[s]=[c?\"q\":\"Q\",r,i,o[1],o[2]]):\"S\"===l&&(c=\"s\"===f,e=a[s-1],\"C\"===e[0]?(t=e[3]-h,n=e[4]-u):\"c\"===e[0]?(t=e[3]-e[5],n=e[4]-e[6]):(t=0,n=0),r=-t,i=-n,c||(r+=h,i+=u),a[s]=[c?\"c\":\"C\",r,i,o[1],o[2],o[3],o[4]]))}),this};var xn=x,yn=xn,dn={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},mn=/([astvzqmhlc])([^astvzqmhlc]*)/gi,Mn=function(t){var n=[];return t.replace(mn,function(t,e,r){var i=e.toLowerCase();for(r=y(r),\"m\"===i&&r.length>2&&(n.push([e].concat(r.splice(0,2))),i=\"l\",e=\"m\"===e?\"l\":\"L\");r.length>=0;){if(r.length===dn[i])return r.unshift(e),n.push(r);if(r.length<dn[i])throw new Error(\"malformed path data\");n.push([e].concat(r.splice(0,dn[i])))}}),n},wn=/-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi,bn=function(t,n,e,r,i,a,o,s){return new d(t,n,e,r,i,a,o,s)};d.prototype={constructor:d,init:function(){this.length=this.getArcLength([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y])},getTotalLength:function(){return this.length},getPointAtLength:function(t){var n=w(t,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]);return this.getPoint([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],n)},getTangentAtLength:function(t){var n=w(t,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]),e=this.getDerivative([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],n),r=Math.sqrt(e.x*e.x+e.y*e.y);return r>0?{x:e.x/r,y:e.y/r}:{x:0,y:0}},getPropertiesAtLength:function(t){var n,e=w(t,this.length,this.getArcLength,[this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y]),r=this.getDerivative([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],e),i=Math.sqrt(r.x*r.x+r.y*r.y);n=i>0?{x:r.x/i,y:r.y/i}:{\nx:0,y:0};var a=this.getPoint([this.a.x,this.b.x,this.c.x,this.d.x],[this.a.y,this.b.y,this.c.y,this.d.y],e);return{x:a.x,y:a.y,tangentX:n.x,tangentY:n.y}}};var Ln=[[],[],[-.5773502691896257,.5773502691896257],[0,-.7745966692414834,.7745966692414834],[-.33998104358485626,.33998104358485626,-.8611363115940526,.8611363115940526],[0,-.5384693101056831,.5384693101056831,-.906179845938664,.906179845938664],[.6612093864662645,-.6612093864662645,-.2386191860831969,.2386191860831969,-.932469514203152,.932469514203152],[0,.4058451513773972,-.4058451513773972,-.7415311855993945,.7415311855993945,-.9491079123427585,.9491079123427585],[-.1834346424956498,.1834346424956498,-.525532409916329,.525532409916329,-.7966664774136267,.7966664774136267,-.9602898564975363,.9602898564975363],[0,-.8360311073266358,.8360311073266358,-.9681602395076261,.9681602395076261,-.3242534234038089,.3242534234038089,-.6133714327005904,.6133714327005904],[-.14887433898163122,.14887433898163122,-.4333953941292472,.4333953941292472,-.6794095682990244,.6794095682990244,-.8650633666889845,.8650633666889845,-.9739065285171717,.9739065285171717],[0,-.26954315595234496,.26954315595234496,-.5190961292068118,.5190961292068118,-.7301520055740494,.7301520055740494,-.8870625997680953,.8870625997680953,-.978228658146057,.978228658146057],[-.1252334085114689,.1252334085114689,-.3678314989981802,.3678314989981802,-.5873179542866175,.5873179542866175,-.7699026741943047,.7699026741943047,-.9041172563704749,.9041172563704749,-.9815606342467192,.9815606342467192],[0,-.2304583159551348,.2304583159551348,-.44849275103644687,.44849275103644687,-.6423493394403402,.6423493394403402,-.8015780907333099,.8015780907333099,-.9175983992229779,.9175983992229779,-.9841830547185881,.9841830547185881],[-.10805494870734367,.10805494870734367,-.31911236892788974,.31911236892788974,-.5152486363581541,.5152486363581541,-.6872929048116855,.6872929048116855,-.827201315069765,.827201315069765,-.9284348836635735,.9284348836635735,-.9862838086968123,.9862838086968123],[0,-.20119409399743451,.20119409399743451,-.3941513470775634,.3941513470775634,-.5709721726085388,.5709721726085388,-.7244177313601701,.7244177313601701,-.8482065834104272,.8482065834104272,-.937273392400706,.937273392400706,-.9879925180204854,.9879925180204854],[-.09501250983763744,.09501250983763744,-.2816035507792589,.2816035507792589,-.45801677765722737,.45801677765722737,-.6178762444026438,.6178762444026438,-.755404408355003,.755404408355003,-.8656312023878318,.8656312023878318,-.9445750230732326,.9445750230732326,-.9894009349916499,.9894009349916499],[0,-.17848418149584785,.17848418149584785,-.3512317634538763,.3512317634538763,-.5126905370864769,.5126905370864769,-.6576711592166907,.6576711592166907,-.7815140038968014,.7815140038968014,-.8802391537269859,.8802391537269859,-.9506755217687678,.9506755217687678,-.9905754753144174,.9905754753144174],[-.0847750130417353,.0847750130417353,-.2518862256915055,.2518862256915055,-.41175116146284263,.41175116146284263,-.5597708310739475,.5597708310739475,-.6916870430603532,.6916870430603532,-.8037049589725231,.8037049589725231,-.8926024664975557,.8926024664975557,-.9558239495713977,.9558239495713977,-.9915651684209309,.9915651684209309],[0,-.16035864564022537,.16035864564022537,-.31656409996362983,.31656409996362983,-.46457074137596094,.46457074137596094,-.600545304661681,.600545304661681,-.7209661773352294,.7209661773352294,-.8227146565371428,.8227146565371428,-.9031559036148179,.9031559036148179,-.96020815213483,.96020815213483,-.9924068438435844,.9924068438435844],[-.07652652113349734,.07652652113349734,-.22778585114164507,.22778585114164507,-.37370608871541955,.37370608871541955,-.5108670019508271,.5108670019508271,-.636053680726515,.636053680726515,-.7463319064601508,.7463319064601508,-.8391169718222188,.8391169718222188,-.912234428251326,.912234428251326,-.9639719272779138,.9639719272779138,-.9931285991850949,.9931285991850949],[0,-.1455618541608951,.1455618541608951,-.2880213168024011,.2880213168024011,-.4243421202074388,.4243421202074388,-.5516188358872198,.5516188358872198,-.6671388041974123,.6671388041974123,-.7684399634756779,.7684399634756779,-.8533633645833173,.8533633645833173,-.9200993341504008,.9200993341504008,-.9672268385663063,.9672268385663063,-.9937521706203895,.9937521706203895],[-.06973927331972223,.06973927331972223,-.20786042668822127,.20786042668822127,-.34193582089208424,.34193582089208424,-.469355837986757,.469355837986757,-.5876404035069116,.5876404035069116,-.6944872631866827,.6944872631866827,-.7878168059792081,.7878168059792081,-.8658125777203002,.8658125777203002,-.926956772187174,.926956772187174,-.9700604978354287,.9700604978354287,-.9942945854823992,.9942945854823992],[0,-.1332568242984661,.1332568242984661,-.26413568097034495,.26413568097034495,-.3903010380302908,.3903010380302908,-.5095014778460075,.5095014778460075,-.6196098757636461,.6196098757636461,-.7186613631319502,.7186613631319502,-.8048884016188399,.8048884016188399,-.8767523582704416,.8767523582704416,-.9329710868260161,.9329710868260161,-.9725424712181152,.9725424712181152,-.9947693349975522,.9947693349975522],[-.06405689286260563,.06405689286260563,-.1911188674736163,.1911188674736163,-.3150426796961634,.3150426796961634,-.4337935076260451,.4337935076260451,-.5454214713888396,.5454214713888396,-.6480936519369755,.6480936519369755,-.7401241915785544,.7401241915785544,-.820001985973903,.820001985973903,-.8864155270044011,.8864155270044011,-.9382745520027328,.9382745520027328,-.9747285559713095,.9747285559713095,-.9951872199970213,.9951872199970213]],An=[[],[],[1,1],[.8888888888888888,.5555555555555556,.5555555555555556],[.6521451548625461,.6521451548625461,.34785484513745385,.34785484513745385],[.5688888888888889,.47862867049936647,.47862867049936647,.23692688505618908,.23692688505618908],[.3607615730481386,.3607615730481386,.46791393457269104,.46791393457269104,.17132449237917036,.17132449237917036],[.4179591836734694,.3818300505051189,.3818300505051189,.27970539148927664,.27970539148927664,.1294849661688697,.1294849661688697],[.362683783378362,.362683783378362,.31370664587788727,.31370664587788727,.22238103445337448,.22238103445337448,.10122853629037626,.10122853629037626],[.3302393550012598,.1806481606948574,.1806481606948574,.08127438836157441,.08127438836157441,.31234707704000286,.31234707704000286,.26061069640293544,.26061069640293544],[.29552422471475287,.29552422471475287,.26926671930999635,.26926671930999635,.21908636251598204,.21908636251598204,.1494513491505806,.1494513491505806,.06667134430868814,.06667134430868814],[.2729250867779006,.26280454451024665,.26280454451024665,.23319376459199048,.23319376459199048,.18629021092773426,.18629021092773426,.1255803694649046,.1255803694649046,.05566856711617366,.05566856711617366],[.24914704581340277,.24914704581340277,.2334925365383548,.2334925365383548,.20316742672306592,.20316742672306592,.16007832854334622,.16007832854334622,.10693932599531843,.10693932599531843,.04717533638651183,.04717533638651183],[.2325515532308739,.22628318026289723,.22628318026289723,.2078160475368885,.2078160475368885,.17814598076194574,.17814598076194574,.13887351021978725,.13887351021978725,.09212149983772845,.09212149983772845,.04048400476531588,.04048400476531588],[.2152638534631578,.2152638534631578,.2051984637212956,.2051984637212956,.18553839747793782,.18553839747793782,.15720316715819355,.15720316715819355,.12151857068790319,.12151857068790319,.08015808715976021,.08015808715976021,.03511946033175186,.03511946033175186],[.2025782419255613,.19843148532711158,.19843148532711158,.1861610000155622,.1861610000155622,.16626920581699392,.16626920581699392,.13957067792615432,.13957067792615432,.10715922046717194,.10715922046717194,.07036604748810812,.07036604748810812,.03075324199611727,.03075324199611727],[.1894506104550685,.1894506104550685,.18260341504492358,.18260341504492358,.16915651939500254,.16915651939500254,.14959598881657674,.14959598881657674,.12462897125553388,.12462897125553388,.09515851168249279,.09515851168249279,.062253523938647894,.062253523938647894,.027152459411754096,.027152459411754096],[.17944647035620653,.17656270536699264,.17656270536699264,.16800410215645004,.16800410215645004,.15404576107681028,.15404576107681028,.13513636846852548,.13513636846852548,.11188384719340397,.11188384719340397,.08503614831717918,.08503614831717918,.0554595293739872,.0554595293739872,.02414830286854793,.02414830286854793],[.1691423829631436,.1691423829631436,.16427648374583273,.16427648374583273,.15468467512626524,.15468467512626524,.14064291467065065,.14064291467065065,.12255520671147846,.12255520671147846,.10094204410628717,.10094204410628717,.07642573025488905,.07642573025488905,.0497145488949698,.0497145488949698,.02161601352648331,.02161601352648331],[.1610544498487837,.15896884339395434,.15896884339395434,.15276604206585967,.15276604206585967,.1426067021736066,.1426067021736066,.12875396253933621,.12875396253933621,.11156664554733399,.11156664554733399,.09149002162245,.09149002162245,.06904454273764123,.06904454273764123,.0448142267656996,.0448142267656996,.019461788229726478,.019461788229726478],[.15275338713072584,.15275338713072584,.14917298647260374,.14917298647260374,.14209610931838204,.14209610931838204,.13168863844917664,.13168863844917664,.11819453196151841,.11819453196151841,.10193011981724044,.10193011981724044,.08327674157670475,.08327674157670475,.06267204833410907,.06267204833410907,.04060142980038694,.04060142980038694,.017614007139152118,.017614007139152118],[.14608113364969041,.14452440398997005,.14452440398997005,.13988739479107315,.13988739479107315,.13226893863333747,.13226893863333747,.12183141605372853,.12183141605372853,.10879729916714838,.10879729916714838,.09344442345603386,.09344442345603386,.0761001136283793,.0761001136283793,.057134425426857205,.057134425426857205,.036953789770852494,.036953789770852494,.016017228257774335,.016017228257774335],[.13925187285563198,.13925187285563198,.13654149834601517,.13654149834601517,.13117350478706238,.13117350478706238,.12325237681051242,.12325237681051242,.11293229608053922,.11293229608053922,.10041414444288096,.10041414444288096,.08594160621706773,.08594160621706773,.06979646842452049,.06979646842452049,.052293335152683286,.052293335152683286,.03377490158481415,.03377490158481415,.0146279952982722,.0146279952982722],[.13365457218610619,.1324620394046966,.1324620394046966,.12890572218808216,.12890572218808216,.12304908430672953,.12304908430672953,.11499664022241136,.11499664022241136,.10489209146454141,.10489209146454141,.09291576606003515,.09291576606003515,.07928141177671895,.07928141177671895,.06423242140852585,.06423242140852585,.04803767173108467,.04803767173108467,.030988005856979445,.030988005856979445,.013411859487141771,.013411859487141771],[.12793819534675216,.12793819534675216,.1258374563468283,.1258374563468283,.12167047292780339,.12167047292780339,.1155056680537256,.1155056680537256,.10744427011596563,.10744427011596563,.09761865210411388,.09761865210411388,.08619016153195327,.08619016153195327,.0733464814110803,.0733464814110803,.05929858491543678,.05929858491543678,.04427743881741981,.04427743881741981,.028531388628933663,.028531388628933663,.0123412297999872,.0123412297999872]],qn=[[1],[1,1],[1,2,1],[1,3,3,1]],kn=2*Math.PI,Pn=function(t,n,e,r,i,a,o,s,h){var u=Math.sin(i*kn/360),c=Math.cos(i*kn/360),f=c*(t-s)/2+u*(n-h)/2,l=-u*(t-s)/2+c*(n-h)/2;if(0===f&&0===l)return[];if(0===e||0===r)return[];e=Math.abs(e),r=Math.abs(r);var p=f*f/(e*e)+l*l/(r*r);p>1&&(e*=Math.sqrt(p),r*=Math.sqrt(p));var g=S(t,n,s,h,a,o,e,r,u,c),v=[],x=g[2],y=g[3],d=Math.max(Math.ceil(Math.abs(y)/(kn/4)),1);y/=d;for(var m=0;m<d;m++)v.push(C(x,y)),x+=y;return v.map(function(t){for(var n=0;n<t.length;n+=2){var i=t[n+0],a=t[n+1];i*=e,a*=r;var o=c*i-u*a,s=u*i+c*a;t[n+0]=o+g[0],t[n+1]=s+g[1]}return t})},_n=function(t,n,e,r,i,a,o,s,h){return new Z(t,n,e,r,i,a,o,s,h)};Z.prototype={constructor:Z,init:function(){},getTotalLength:function(){return this.length},getPointAtLength:function(t){var n=this;t<0?t=0:t>this.length&&(t=this.length);for(var e=this.partialLengths.length-1;this.partialLengths[e]>=t&&this.partialLengths[e]>0;)e--;e<this.partialLengths.length-1&&e++;for(var r=0,i=0;i<e;i++)r+=n.partialLengths[i];return this.curves[e].getPointAtLength(t-r)},getTangentAtLength:function(t){var n=this;t<0?t=0:t>this.length&&(t=this.length);for(var e=this.partialLengths.length-1;this.partialLengths[e]>=t&&this.partialLengths[e]>0;)e--;e<this.partialLengths.length-1&&e++;for(var r=0,i=0;i<e;i++)r+=n.partialLengths[i];return this.curves[e].getTangentAtLength(t-r)},getPropertiesAtLength:function(t){var n=this.getTangentAtLength(t),e=this.getPointAtLength(t);return{x:e.x,y:e.y,tangentX:n.x,tangentY:n.y}}};var En=function(t,n,e,r){return new T(t,n,e,r)};T.prototype.getTotalLength=function(){return Math.sqrt(Math.pow(this.x0-this.x1,2)+Math.pow(this.y0-this.y1,2))},T.prototype.getPointAtLength=function(t){var n=t/Math.sqrt(Math.pow(this.x0-this.x1,2)+Math.pow(this.y0-this.y1,2)),e=(this.x1-this.x0)*n,r=(this.y1-this.y0)*n;return{x:this.x0+e,y:this.y0+r}},T.prototype.getTangentAtLength=function(){var t=Math.sqrt((this.x1-this.x0)*(this.x1-this.x0)+(this.y1-this.y0)*(this.y1-this.y0));return{x:(this.x1-this.x0)/t,y:(this.y1-this.y0)/t}},T.prototype.getPropertiesAtLength=function(t){var n=this.getPointAtLength(t),e=this.getTangentAtLength();return{x:n.x,y:n.y,tangentX:e.x,tangentY:e.y}};var Sn=function(t){function n(t){if(!t)return null;for(var a,o=Mn(t),s=[0,0],h=[0,0],u=0;u<o.length;u++)\"M\"===o[u][0]?(s=[o[u][1],o[u][2]],i.push(null)):\"m\"===o[u][0]?(s=[o[u][1]+s[0],o[u][2]+s[1]],i.push(null)):\"L\"===o[u][0]?(e+=Math.sqrt(Math.pow(s[0]-o[u][1],2)+Math.pow(s[1]-o[u][2],2)),i.push(new En(s[0],o[u][1],s[1],o[u][2])),s=[o[u][1],o[u][2]]):\"l\"===o[u][0]?(e+=Math.sqrt(Math.pow(o[u][1],2)+Math.pow(o[u][2],2)),i.push(new En(s[0],o[u][1]+s[0],s[1],o[u][2]+s[1])),s=[o[u][1]+s[0],o[u][2]+s[1]]):\"H\"===o[u][0]?(e+=Math.abs(s[0]-o[u][1]),i.push(new En(s[0],o[u][1],s[1],s[1])),s[0]=o[u][1]):\"h\"===o[u][0]?(e+=Math.abs(o[u][1]),i.push(new En(s[0],s[0]+o[u][1],s[1],s[1])),s[0]=o[u][1]+s[0]):\"V\"===o[u][0]?(e+=Math.abs(s[1]-o[u][1]),i.push(new En(s[0],s[0],s[1],o[u][1])),s[1]=o[u][1]):\"v\"===o[u][0]?(e+=Math.abs(o[u][1]),i.push(new En(s[0],s[0],s[1],s[1]+o[u][1])),s[1]=o[u][1]+s[1]):\"z\"===o[u][0]||\"Z\"===o[u][0]?(e+=Math.sqrt(Math.pow(o[0][1]-s[0],2)+Math.pow(o[0][2]-s[1],2)),i.push(new En(s[0],o[0][1],s[1],o[0][2])),s=[o[0][1],o[0][2]]):\"C\"===o[u][0]?(a=new bn(s[0],s[1],o[u][1],o[u][2],o[u][3],o[u][4],o[u][5],o[u][6]),e+=a.getTotalLength(),s=[o[u][5],o[u][6]],i.push(a)):\"c\"===o[u][0]?(a=new bn(s[0],s[1],s[0]+o[u][1],s[1]+o[u][2],s[0]+o[u][3],s[1]+o[u][4],s[0]+o[u][5],s[1]+o[u][6]),e+=a.getTotalLength(),s=[o[u][5]+s[0],o[u][6]+s[1]],i.push(a)):\"S\"===o[u][0]?(a=u>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(o[u-1][0])>-1?new bn(s[0],s[1],2*s[0]-o[u-1][o[u-1].length-4],2*s[1]-o[u-1][o[u-1].length-3],o[u][1],o[u][2],o[u][3],o[u][4]):new bn(s[0],s[1],s[0],s[1],o[u][1],o[u][2],o[u][3],o[u][4]),e+=a.getTotalLength(),s=[o[u][3],o[u][4]],i.push(a)):\"s\"===o[u][0]?(a=u>0&&[\"C\",\"c\",\"S\",\"s\"].indexOf(o[u-1][0])>-1?new bn(s[0],s[1],s[0]+a.d.x-a.c.x,s[1]+a.d.y-a.c.y,s[0]+o[u][1],s[1]+o[u][2],s[0]+o[u][3],s[1]+o[u][4]):new bn(s[0],s[1],s[0],s[1],s[0]+o[u][1],s[1]+o[u][2],s[0]+o[u][3],s[1]+o[u][4]),e+=a.getTotalLength(),s=[o[u][3]+s[0],o[u][4]+s[1]],i.push(a)):\"Q\"===o[u][0]?(a=new bn(s[0],s[1],o[u][1],o[u][2],o[u][3],o[u][4]),e+=a.getTotalLength(),i.push(a),s=[o[u][3],o[u][4]],h=[o[u][1],o[u][2]]):\"q\"===o[u][0]?(a=new bn(s[0],s[1],s[0]+o[u][1],s[1]+o[u][2],s[0]+o[u][3],s[1]+o[u][4]),e+=a.getTotalLength(),h=[s[0]+o[u][1],s[1]+o[u][2]],s=[o[u][3]+s[0],o[u][4]+s[1]],i.push(a)):\"T\"===o[u][0]?(a=u>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(o[u-1][0])>-1?new bn(s[0],s[1],2*s[0]-h[0],2*s[1]-h[1],o[u][1],o[u][2]):new En(s[0],o[u][1],s[1],o[u][2]),i.push(a),e+=a.getTotalLength(),h=[2*s[0]-h[0],2*s[1]-h[1]],s=[o[u][1],o[u][2]]):\"t\"===o[u][0]?(a=u>0&&[\"Q\",\"q\",\"T\",\"t\"].indexOf(o[u-1][0])>-1?new bn(s[0],s[1],2*s[0]-h[0],2*s[1]-h[1],s[0]+o[u][1],s[1]+o[u][2]):new En(s[0],s[0]+o[u][1],s[1],s[1]+o[u][2]),e+=a.getTotalLength(),h=[2*s[0]-h[0],2*s[1]-h[1]],s=[o[u][1]+s[0],o[u][2]+s[0]],i.push(a)):\"A\"===o[u][0]?(a=new _n(s[0],s[1],o[u][1],o[u][2],o[u][3],o[u][4],o[u][5],o[u][6],o[u][7]),e+=a.getTotalLength(),s=[o[u][6],o[u][7]],i.push(a)):\"a\"===o[u][0]&&(a=new _n(s[0],s[1],o[u][1],o[u][2],o[u][3],o[u][4],o[u][5],s[0]+o[u][6],s[1]+o[u][7]),e+=a.getTotalLength(),s=[s[0]+o[u][6],s[1]+o[u][7]],i.push(a)),r.push(e);return n}var e=0,r=[],i=[];n.getTotalLength=function(){return e},n.getPointAtLength=function(t){var n=a(t);return i[n.i].getPointAtLength(n.fraction)},n.getTangentAtLength=function(t){var n=a(t);return i[n.i].getTangentAtLength(n.fraction)},n.getPropertiesAtLength=function(t){var n=a(t);return i[n.i].getPropertiesAtLength(n.fraction)};var a=function(t){t<0?t=0:t>e&&(t=e);for(var n=r.length-1;r[n]>=t&&r[n]>0;)n--;return n++,{fraction:t-r[n-1],i:n}};return n(t)},Cn='All shapes must be supplied as arrays of [x, y] points or an SVG path string (https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d).\\nExample valid ways of supplying a shape would be:\\n[[0, 0], [10, 0], [10, 10]]\\n\"M0,0 L10,0 L10,10Z\"\\n',Zn=\"flubber.all() expects two arrays of equal length as arguments. Each element in both arrays should be an array of [x, y] points or an SVG path string (https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d).\",Tn=function(t,n){for(var e,r,i,a=t.length,o=1/0,s=0;s<a;s++)!function(i){r=0,n.forEach(function(n,e){var o=F(t[(i+e)%a],n);r+=o*o}),r<o&&(o=r,e=i)}(s);e&&(i=t.splice(0,e),t.splice.apply(t,[t.length,0].concat(i)))},Fn=function(t,n,e){void 0===e&&(e={});var r=e.maxSegmentLength;void 0===r&&(r=10);var i=e.string;void 0===i&&(i=!0);var a=J(t,r),o=J(n,r),s=tt(a,o,i);return!i||\"string\"!=typeof t&&\"string\"!=typeof n?s:function(e){return e<1e-4&&\"string\"==typeof t?t:1-e<1e-4&&\"string\"==typeof n?n:s(e)}},zn=nt;nt.deviation=function(t,n,e,r){var i=n&&n.length,a=i?n[0]*e:t.length,o=Math.abs(Et(t,0,a,e));if(i)for(var s=0,h=n.length;s<h;s++){var u=n[s]*e,c=s<h-1?n[s+1]*e:t.length;o-=Math.abs(Et(t,u,c,e))}var f=0;for(s=0;s<r.length;s+=3){var l=r[s]*e,p=r[s+1]*e,g=r[s+2]*e;f+=Math.abs((t[l]-t[g])*(t[p+1]-t[l+1])-(t[l]-t[p])*(t[g+1]-t[l+1]))}return 0===o&&0===f?0:Math.abs((f-o)/o)},nt.flatten=function(t){for(var n=t[0][0].length,e={vertices:[],holes:[],dimensions:n},r=0,i=0;i<t.length;i++){for(var a=0;a<t[i].length;a++)for(var o=0;o<n;o++)e.vertices.push(t[i][a][o]);i>0&&(r+=t[i-1].length,e.holes.push(r))}return e};var jn=function(t){return t},In=function(t){if(null==t)return jn;var n,e,r=t.scale[0],i=t.scale[1],a=t.translate[0],o=t.translate[1];return function(t,s){s||(n=e=0);var h=2,u=t.length,c=new Array(u);for(c[0]=(n+=t[0])*r+a,c[1]=(e+=t[1])*i+o;h<u;)c[h]=t[h],++h;return c}},Vn=function(t,n){for(var e,r=t.length,i=r-n;i<--r;)e=t[i],t[i++]=t[r],t[r]=e},Xn=function(t,n){return\"GeometryCollection\"===n.type?{type:\"FeatureCollection\",features:n.geometries.map(function(n){return St(t,n)})}:St(t,n)},Yn=function(t,n){function e(n){var e,r=t.arcs[n<0?~n:n],i=r[0];return t.transform?(e=[0,0],r.forEach(function(t){e[0]+=t[0],e[1]+=t[1]})):e=r[r.length-1],n<0?[e,i]:[i,e]}function r(t,n){for(var e in t){var r=t[e];delete n[r.start],delete r.start,delete r.end,r.forEach(function(t){i[t<0?~t:t]=1}),s.push(r)}}var i={},a={},o={},s=[],h=-1;return n.forEach(function(e,r){var i,a=t.arcs[e<0?~e:e];a.length<3&&!a[1][0]&&!a[1][1]&&(i=n[++h],n[h]=e,n[r]=i)}),n.forEach(function(t){var n,r,i=e(t),s=i[0],h=i[1];if(n=o[s])if(delete o[n.end],n.push(t),n.end=h,r=a[h]){delete a[r.start];var u=r===n?n:n.concat(r);a[u.start=n.start]=o[u.end=r.end]=u}else a[n.start]=o[n.end]=n;else if(n=a[h])if(delete a[n.start],n.unshift(t),n.start=s,r=o[s]){delete o[r.end];var c=r===n?n:r.concat(n);a[c.start=r.start]=o[c.end=n.end]=c}else a[n.start]=o[n.end]=n;else n=[t],a[n.start=s]=o[n.end=h]=n}),r(o,a),r(a,o),n.forEach(function(t){i[t<0?~t:t]||s.push([t])}),s},Gn=function(t,n){for(var e=0,r=t.length;e<r;){var i=e+r>>>1;t[i]<n?e=i+1:r=i}return e},On=function(t){function n(t,n){t.forEach(function(t){t<0&&(t=~t);var e=i[t];e?e.push(n):i[t]=[n]})}function e(t,e){t.forEach(function(t){n(t,e)})}function r(t,n){\"GeometryCollection\"===t.type?t.geometries.forEach(function(t){r(t,n)}):t.type in o&&o[t.type](t.arcs,n)}var i={},a=t.map(function(){return[]}),o={LineString:n,MultiLineString:e,Polygon:e,MultiPolygon:function(t,n){t.forEach(function(t){e(t,n)})}};t.forEach(r);for(var s in i)for(var h=i[s],u=h.length,c=0;c<u;++c)for(var f=c+1;f<u;++f){var l,p=h[c],g=h[f];(l=a[p])[s=Gn(l,g)]!==g&&l.splice(s,0,g),(l=a[g])[s=Gn(l,p)]!==p&&l.splice(s,0,p)}return a},Dn=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},Hn=function(t){return 1===t.length&&(t=Ft(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var a=r+i>>>1;t(n[a],e)<0?r=a+1:i=a}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var a=r+i>>>1;t(n[a],e)>0?i=a:r=a+1}return r}}},Nn=Hn(Dn),Qn=(Nn.right,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2),function(t,n){return jt(zt(It(t),t),n)}),Un=function(t,n){if(t.length>8)return t.map(function(t,n){return n});var e=t.map(function(t){return n.map(function(n){return Xt(t,n)})});return Vt(t,n,e)};t.interpolate=Fn,t.separate=Yt,t.combine=Gt,t.interpolateAll=Ot,t.splitPathString=N,t.toPathString=H,t.fromCircle=Ht,t.toCircle=Nt,t.fromRect=Qt,t.toRect=Ut,Object.defineProperty(t,\"__esModule\",{value:!0})});\n","export var name = \"d3\";\nexport var version = \"5.9.7\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export var slice = Array.prototype.slice;\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","export var slice = Array.prototype.slice;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","export var slice = Array.prototype.slice;\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default function() {}\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n"],"sourceRoot":""}