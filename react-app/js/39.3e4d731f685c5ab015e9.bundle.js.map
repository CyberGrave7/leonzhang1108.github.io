{"version":3,"sources":["webpack:///./src/pages/MusicVisualizer/tools.ts"],"names":["draw","param","ctx","height","width","bars","barColor","arr","volume","vol","clearRect","Array","isArray","createLinearGradient","length","forEach","color","i","addColorStop","fillStyle","rectWidth","barWidth","capHeight","Math","min","rectHeight","capDistance","fillRect"],"mappings":"2FAAA,OAAe,WACbA,KAAM,SAAAC,GACI,IAAAC,EAAA,EAAAA,IAAKC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,KAAMC,EAAA,EAAAA,SAClC,OAAO,SAACC,EAAKC,GACX,IAAMC,EAAMD,EAEZ,GADAN,EAAIQ,UAAU,EAAG,EAAGN,EAAOD,GACvBQ,MAAMC,QAAQN,GAAW,CAC3B,IAAM,EAAOJ,EAAIW,qBAAqB,EAAG,EAAG,EAAGV,GACzC,EAAMG,EAASQ,OACrBR,EAASS,QAAQ,SAACC,EAAOC,GACvB,EAAKC,aAAaD,GAAK,EAAM,GAAID,KAEnCd,EAAIiB,UAAY,OAEhBjB,EAAIiB,UAAYb,EAKlB,IAHA,IAAMc,EAAYhB,EAAQC,EACpBgB,EAAuB,GAAZD,EACXE,EAAYC,KAAKC,IAAIH,EAAU,IAAMZ,EAClCQ,EAAI,EAAGA,EAAIZ,EAAMY,IAAK,CAC7B,IAAMQ,EAAalB,EAAIU,GAAK,IAAMd,EAASM,EACrCiB,EAAcnB,EAAIU,GAAK,EACzBM,KAAKC,IAAIC,EAAa,GAAItB,EAASmB,GACnC,EACJpB,EAAIyB,SAASP,EAAYH,EAAGd,EAASsB,EAAYJ,EAAUI,GAC3DvB,EAAIyB,SAASP,EAAYH,EAAGd,GAAUuB,EAAcJ,GAAYD,EAAUC","file":"js/39.3e4d731f685c5ab015e9.bundle.js","sourcesContent":["export default {\n  draw: param => {\n    const { ctx, height, width, bars, barColor } = param\n    return (arr, volume) => {\n      const vol = volume\n      ctx.clearRect(0, 0, width, height)\n      if (Array.isArray(barColor)) {\n        const line = ctx.createLinearGradient(0, 0, 0, height)\n        const len = barColor.length\n        barColor.forEach((color, i) => {\n          line.addColorStop(i / (len - 1), color)\n        })\n        ctx.fillStyle = line\n      } else {\n        ctx.fillStyle = barColor\n      }\n      const rectWidth = width / bars\n      const barWidth = rectWidth * 0.5\n      const capHeight = Math.min(barWidth, 10) * vol\n      for (let i = 0; i < bars; i++) {\n        const rectHeight = arr[i] / 256 * height * vol\n        const capDistance = arr[i] > 0\n          ? Math.min(rectHeight + 40, height - capHeight)\n          : 0\n        ctx.fillRect(rectWidth * i, height - rectHeight, barWidth, rectHeight)\n        ctx.fillRect(rectWidth * i, height - (capDistance + capHeight), barWidth, capHeight)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}