{"version":3,"sources":["pages/Reversi/tools.tsx"],"names":["Object","defineProperty","__webpack_exports__","value","directionMap","statusMap","check","_a","x","y","checkerboard","player","direction","dx","dy","result","click","couldClick","some","clickToCover","reverse","forEach","cx","cy","push","c","r"],"mappings":"oDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,QAAMC,IACH,EAAG,IAAK,GAAI,KACX,EAAG,IAAK,EAAG,KACX,GAAI,KAAM,EAAG,IACd,GAAI,IAAK,EAAG,IAGTC,EACG,EADHA,EAEG,EAFHA,EAGG,EAUHC,EAAQ,SAACC,OAAEC,EAAAD,EAAAC,EAAGC,EAAAF,EAAAE,EAAGC,EAAAH,EAAAG,aAAcC,EAAAJ,EAAAI,OAAQC,EAAAL,EAAAK,UACnCC,EAAAD,EAAA,GAAIE,EAAAF,EAAA,GACRG,EAAS,EACTC,EAAQL,EAASN,EAAkBA,EAGvC,IAFAG,GAAKK,EACLJ,GAAKK,EACEN,GAAK,GAAKA,GAbD,GAamBC,GAAK,GAAKA,GAb7B,GAcVC,EAAaF,GAAGC,KAAOJ,GAA8B,IAAXU,GADa,CAE3D,GAAIL,EAAaF,GAAGC,KAAOO,EACzBD,IACAC,EAASL,EAA2BN,EAAlBA,OAElB,GAAe,IAAXU,EAAgB,MAEtBP,GAAKK,EACLJ,GAAKK,EAEP,OAAkB,IAAXC,GAGMb,EAAA,SACbe,WAAY,SAACV,OAAEC,EAAAD,EAAAC,EAAGC,EAAAF,EAAAE,EAAGC,EAAAH,EAAAG,aAAcC,EAAAJ,EAAAI,OACjC,OAAAP,EAAac,KAAK,SAAAN,GAAa,OAAAN,GAAQE,EAACA,EAAEC,EAACA,EAAEC,aAAYA,EAAEC,OAAMA,EAAEC,UAASA,OAE9EO,aAAc,SAACZ,OAAEC,EAAAD,EAAAC,EAAGC,EAAAF,EAAAE,EAAGC,EAAAH,EAAAG,aAAcC,EAAAJ,EAAAI,OAC7BS,KAoBN,OAnBAhB,EAAaiB,QAAQ,SAAAT,GACZ,IAAAC,EAAAD,EAAA,GAAIE,EAAAF,EAAA,GACPU,EAAKd,EACLe,EAAKd,EAGT,GAFAa,GAAMT,EACNU,GAAMT,EACFR,GAAQE,EAACA,EAAEC,EAACA,EAAEC,aAAYA,EAAEC,OAAMA,EAAEC,UAASA,IAC/C,KAAOU,GAAM,GAAKA,GAxCR,GAwC2BC,GAAM,GAAKA,GAxCtC,GAyCJb,EAAaY,GAAIC,KAAQlB,GACxBK,EAAaY,GAAIC,MAASZ,EAASN,EAAkBA,IAG1DK,EAAaY,GAAIC,GAAMZ,EAASN,EAAkBA,EAClDe,EAAQI,MAAOhB,EAAGc,EAAIb,EAAGc,IACzBD,GAAMT,EACNU,GAAMT,KAIHW,EAAGf,EAAcgB,EAAGN","file":"static/js/27.eca329a8.chunk.js","sourcesContent":["const directionMap = [\n  [0, 1], [0, -1],\n  [-1, 0], [1, 0],\n  [-1, -1], [-1, 1],\n  [1, -1], [1, 1]\n]\n\nconst statusMap = {\n  empty: 0,\n  black: 1,\n  white: 2\n}\n\nconst borderMax = 7\n\ninterface IReverse {\n  x: number,\n  y: number\n}\n\nconst check = ({ x, y, checkerboard, player, direction }) => {\n  const [ dx, dy ] = direction\n  let result = 0\n  let click = player ? statusMap.black : statusMap.white\n  x += dx\n  y += dy\n  while (x >= 0 && x <= borderMax && y >= 0 && y <= borderMax) {\n    if (checkerboard[x][y] === statusMap.empty || result === 2) { break }\n    if (checkerboard[x][y] === click) {\n      result++\n      click = !player ? statusMap.black : statusMap.white\n    } else {\n      if (result !== 1) { break }\n    }\n    x += dx\n    y += dy\n  }\n  return result === 2\n}\n\nexport default {\n  couldClick: ({ x, y, checkerboard, player }) =>\n    directionMap.some(direction => check({ x, y, checkerboard, player, direction })),\n\n  clickToCover: ({ x, y, checkerboard, player }) => {\n    const reverse: IReverse[] = []\n    directionMap.forEach(direction => {\n      const [dx, dy] = direction\n      let cx = x\n      let cy = y\n      cx += dx\n      cy += dy\n      if (check({ x, y, checkerboard, player, direction })) {\n        while (cx >= 0 && cx <= borderMax && cy >= 0 && cy <= borderMax) {\n          if (checkerboard[cx][cy] === statusMap.empty\n            || checkerboard[cx][cy] === (player ? statusMap.white : statusMap.black)) {\n            break\n          }\n          checkerboard[cx][cy] = player ? statusMap.white : statusMap.black\n          reverse.push({ x: cx, y: cy })\n          cx += dx\n          cy += dy\n        }\n      }\n    })\n    return { c: checkerboard, r: reverse }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Reversi/tools.tsx"],"sourceRoot":""}