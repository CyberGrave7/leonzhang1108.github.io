{"version":3,"sources":["pages/MusicVisualizer/floating-title.tsx"],"names":["FloatingTitle","_super","_this","apply","this","arguments","doInterval","interval","setInterval","intervalContent","_a","state","onOff","offsetWidth","setState","offset","clearInterval","__extends","prototype","componentWillMount","width","componentDidMount","wrapperWidth","wrapper","componentWillUnmount","componentWillReceiveProps","dom","render","musicName","props","__WEBPACK_IMPORTED_MODULE_0_react__","className","ref","style","transform","__webpack_exports__"],"mappings":"0dAaAA,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,KAAAE,MAAAC,KAAAC,YAAAD,YAqCEF,EAAAI,WAAa,WACXJ,EAAKK,SAAWC,YAAY,WAC1BN,EAAKO,mBACJ,MAGLP,EAAAO,gBAAkB,WACV,IAAAC,EAAAR,EAAAS,MAAEC,EAAAF,EAAAE,MAAOC,EAAAH,EAAAG,YACfX,EAAKY,UACHF,OAAQA,EACRG,OAAQH,EAAQ,EAAIC,KAIxBX,EAAAc,cAAgB,WACVd,EAAKK,UAAYS,cAAcd,EAAKK,aAa5C,OAjE4BU,EAAAjB,EAAAC,GAM1BD,EAAAkB,UAAAC,mBAAA,WACEf,KAAKU,UACHM,MAAO,EACPL,OAAQ,EACRH,OAAO,EACPC,YAAa,KAIjBb,EAAAkB,UAAAG,kBAAA,WACEjB,KAAKU,UAAWQ,aAAclB,KAAKmB,QAAQV,cAC3CT,KAAKE,cAGPN,EAAAkB,UAAAM,qBAAA,WACEpB,KAAKY,iBAGPhB,EAAAkB,UAAAO,0BAAA,WACU,IAAAL,EAAAhB,KAAAO,MAAAS,MACR,GAAIhB,KAAKsB,IAAIb,cAAgBO,EAAO,CAClC,IAAIP,EAAeT,KAAKmB,QAAQV,YAAcT,KAAKsB,IAAIb,YACvDA,EAAcA,GAAe,EAAIA,EAAc,EAC/CT,KAAKU,UACHM,MAAOhB,KAAKsB,IAAIb,YAChBA,YAAWA,EACXD,OAAO,MAuBbZ,EAAAkB,UAAAS,OAAA,eAAAzB,EAAAE,KACUwB,EAAAxB,KAAAyB,MAAAD,UACFlB,EAAAN,KAAAO,MAAEI,EAAAL,EAAAK,OAAQF,EAAAH,EAAAG,YAEhB,OACEiB,EAAA,qBAAKC,UAAW,eAA8B,IAAhBlB,EAAoB,OAAS,IAAMmB,IAAK,SAAAA,GAAS9B,EAAKqB,QAAUS,IAC5FF,EAAA,qBAAKG,OAASC,UAAW,cAAcnB,EAAM,OAASgB,UAAU,UAAUC,IAAK,SAAAA,GAAS9B,EAAKwB,IAAMM,IAAQJ,KAInH5B,EAjEA,CAA4B8B,EAAA,WAkEbK,EAAA","file":"static/js/30.6aaba1dd.chunk.js","sourcesContent":["import * as React from 'react'\ninterface IProps {\n  musicName: string\n}\n\ninterface IState {\n  wrapperWidth: number,\n  width: number,\n  offset: number,\n  onOff: boolean,\n  offsetWidth: number\n}\n\nclass FloatingTitle extends React.Component<IProps, IState> {\n\n  dom\n  wrapper\n  interval\n\n  componentWillMount () {\n    this.setState({\n      width: 0,\n      offset: 0,\n      onOff: false,\n      offsetWidth: 0\n    })\n  }\n\n  componentDidMount () {\n    this.setState({ wrapperWidth: this.wrapper.offsetWidth })\n    this.doInterval()\n  }\n\n  componentWillUnmount () {\n    this.clearInterval()\n  }\n\n  componentWillReceiveProps () {\n    const { width } = this.state\n    if (this.dom.offsetWidth !== width) {\n      let offsetWidth = (this.wrapper.offsetWidth - this.dom.offsetWidth)\n      offsetWidth = offsetWidth <= 0 ? offsetWidth : 0\n      this.setState({\n        width: this.dom.offsetWidth,\n        offsetWidth,\n        onOff: false\n      })\n    }\n  }\n\n  doInterval = () => {\n    this.interval = setInterval(() => {\n      this.intervalContent()\n    }, 3000)\n  }\n\n  intervalContent = () => {\n    const { onOff, offsetWidth } = this.state\n    this.setState({\n      onOff: !onOff,\n      offset: onOff ? 0 : offsetWidth\n    })\n  }\n\n  clearInterval = () => {\n    if (this.interval) { clearInterval(this.interval) }\n  }\n\n  render () {\n    const { musicName } = this.props\n    const { offset, offsetWidth } = this.state\n\n    return (\n      <div className={`music-name ${offsetWidth === 0 ? 'flex' : ''}`} ref={ref => { this.wrapper = ref }}>\n        <div style={{ transform: `translateX(${offset}px)` }} className='content' ref={ref => { this.dom = ref }}>{musicName}</div>\n      </div>\n    )\n  }\n}\nexport default FloatingTitle\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/MusicVisualizer/floating-title.tsx"],"sourceRoot":""}