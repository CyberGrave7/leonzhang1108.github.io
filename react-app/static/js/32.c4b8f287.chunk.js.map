{"version":3,"sources":["pages/2048/tools.tsx"],"names":["Object","defineProperty","__webpack_exports__","value","getValue","x","y","p","res","v","index","some","i","same","moveRight","changed","max","curr","occupied","_a","currV","currIndex","_b","nextV","nextIndex","merged","push","id","Math","random","moveLeft","min","moveDown","moveUp"],"mappings":"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","file":"static/js/32.c4b8f287.chunk.js","sourcesContent":["interface IPiece {\n  x: number,\n  y: number,\n  v: number,\n  merged?: boolean,\n  id: number\n}\n\nconst getValue = (x, y, p) => {\n  let res = { v: 0, index: -1 }\n  p.some((i, index) => {\n    const same = i.x === x && i.y === y\n    if (same) { res = { v: i.v, index } }\n    return same\n  })\n  return res\n}\n\nexport default {\n  moveRight: (p: IPiece[]) => {\n    let changed = false\n    for (let y = 0; y < 4; y++) {\n      let max = 3\n      for (let x = 2; x >= 0; x--) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === (x + 1) && i.y === y\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { max-- }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].x = max\n          changed = true\n          max--\n        }\n      }\n      for (let x = 2; x >= 0; x--) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x + 1, y, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].x = x + 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = x - 1; v >= 0; v--) {\n            const { index: i } = getValue(v, y, p)\n            if (i >= 0) { p[i].x = p[i].x < 3 ? p[i].x + 1 : p[i].x }\n          }\n          p.push({ x: x + 1, y, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveLeft: (p: IPiece[]) => {\n    let changed = false\n    for (let y = 0; y < 4; y++) {\n      let min = 0\n      for (let x = 1; x < 4; x++) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === (x - 1) && i.y === y\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { min++ }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].x = min\n          changed = true\n          min++\n        }\n      }\n      for (let x = 1; x < 4; x++) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x - 1, y, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].x = x - 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = x; v <= 3; v++) {\n            const { index: i } = getValue(v, y, p)\n            if (i >= 0) { p[i].x = p[i].x > 0 ? p[i].x - 1 : p[i].x }\n          }\n          p.push({ x: x - 1, y, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveDown: (p: IPiece[]) => {\n    let changed = false\n    for (let x = 0; x < 4; x++) {\n      let max = 3\n      for (let y = 2; y >= 0; y--) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === x && i.y === (y + 1)\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { max-- }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].y = max\n          changed = true\n          max--\n        }\n      }\n      for (let y = 2; y >= 0; y--) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x, y + 1, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].y = y + 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = y - 1; v >= 0; v--) {\n            const { index: i } = getValue(x, v, p)\n            if (i >= 0) { p[i].y = p[i].y < 3 ? p[i].y + 1 : p[i].y }\n          }\n          p.push({ x, y: y + 1, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  },\n\n  moveUp: (p: IPiece[]) => {\n    let changed = false\n    for (let x = 0; x < 4; x++) {\n      let min = 0\n      for (let y = 1; y < 4; y++) {\n        let curr = -1\n        const isOccupied = p.some((i, index) => {\n          const occupied = i.x === x && i.y === (y - 1)\n          if (i.x === x && i.y === y) { curr = index }\n          if (occupied) { min++ }\n          return occupied\n        })\n        if (!isOccupied && curr >= 0) {\n          p[curr].y = min\n          changed = true\n          min++\n        }\n      }\n      for (let y = 1; y < 4; y++) {\n        const { v: currV, index: currIndex } = getValue(x, y, p)\n        const { v: nextV, index: nextIndex } = getValue(x, y - 1, p)\n        if (currV && nextV && currV === nextV) {\n          p[currIndex].y = y - 1\n          p[currIndex].merged = true\n          p[nextIndex].merged = true\n          for (let v = y; v <= 3; v++) {\n            const { index: i } = getValue(x, v, p)\n            if (i >= 0) { p[i].y = p[i].y > 0 ? p[i].y - 1 : p[i].y }\n          }\n          p.push({ x, y: y - 1, v: currV * 2, id: Math.random() })\n          changed = true\n        }\n      }\n    }\n    return { p, changed }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/2048/tools.tsx"],"sourceRoot":""}